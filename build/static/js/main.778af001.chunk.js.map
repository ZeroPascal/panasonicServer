{"version":3,"sources":["util/constants.ts","components/numberpad.tsx","components/BlendDialog.tsx","components/CommandInterfaces/OSDPostion.tsx","components/CommandInterfaces/Testpattern.tsx","components/CommandInterfaces/BackColor.tsx","components/MenuDialog.tsx","components/Alert.tsx","components/CommandInterfaces/LensCal.tsx","components/LensDialog.tsx","components/CommandInterfaces/Power.tsx","components/CommandInterfaces/Shutter.tsx","components/ProjectorSetupDialog.tsx","components/CommandPad.tsx","util/CMD.ts","components/PJ.tsx","components/PJCard.tsx","components/ProgrammerTable.tsx","components/Programmer.tsx","util/getter.ts","components/PatchAddDialog.tsx","components/Patch.tsx","util/UpdateLog.ts","components/About.tsx","components/ConfigDialog.tsx","util/SocketListener.ts","components/InputPopup.tsx","components/Worlds.tsx","components/WorldBox.tsx","App.tsx","prefrences.ts","components/ControlMenu.tsx","components/Disconnected.tsx","LoadPage.tsx","serviceWorker.js","reportWebVitals.js","index.js"],"names":["pjServer","process","ioCommands","commands","menuCommands","THRU","DEL","CLEAR","NEXT","IF_PROG","BACK","ENTER","STORE_GROUP","ControlCommands","PROJECTOR_MAKES","ConfigHeaders","keys","defaultConfig","Patch","Location","LastUpdated","Date","Polling","Polling_Interval","Groups","0","name","group","ButtonStyle","width","height","marginBottom","Numberpad","props","handlePad","getButtons","C","map","key","w","Button","variant","style","margin","padding","touchAction","size","onClick","e","Paper","elevation","className","buttons","groups","i","length","g","slice","push","ButtonGroup","buttonGroups","BlendDialog","open","handleClose","handleCommand","buttonStyle","buttonGroupStyle","justifyContent","textAlign","Dialog","onClose","aria-labelledby","DialogTitle","id","EDGE_BLENDING_ON","EDGE_BLENDING_OFF","EDGE_BLENDING_MARKERS_ON","EDGE_BLENDING_MARKERS_OFF","EDGE_BLENDING_UPPER_ON","EDGE_BLENDING_UPPER_OFF","EDGE_BLENDING_RIGHT_ON","EDGE_BLENDING_RIGHT_OFF","EDGE_BLENDING_LOWER_ON","EDGE_BLENDING_LOWER_OFF","EDGE_BLENDING_LEFT_ON","EDGE_BLENDING_LEFT_OFF","useStyles","makeStyles","theme","formControl","spacing","minWidth","selectEmpty","marginTop","OSDPostion","classes","FormControl","InputLabel","Select","labelId","value","onChange","target","MenuItem","OSD_POSITION_UPPER_LEFT","OSD_POSITION_CENTER_LEFT","OSD_POSITION_LOWER_LEFT","OSD_POSITION_TOP_CENTER","OSD_POSITION_CENTER","OSD_POSITION_LOWER_CENTER","OSD_POSITION_UPPER_RIGHT","OSD_POSITION_LOWER_RIGHT","Testpattern","TEST_PATTERN_OFF","TEST_PATTERN_WHITE","TEST_PATTERN_BLACK","TEST_PATTERN_FOCUS_RED","TEST_PATTERN_FOCUS_WHITE","BackColor","BACK_COLOR_BLUE","BACK_COLOR_BLACK","BACK_COLOR_DEFAULT_LOGO","BACK_COLOR_USER_LOGO","MenuDialog","MENU","MENU_DEFAULT_KEY","MENU_UP_KEY","MENU_LEFT_KEY","MENU_ENTER_KEY","MENU_RIGHT_KEY","MENU_DOWN_KEY","OSD_ON","OSD_OFF","FREEZE_ON","FREEZE_OFF","CEILING_MOUNT_ON","CEILING_MOUNT_OFF","POWER_HOG_ON","Alert","command","header","message","handleClick","approval","aria-describedby","DialogContent","DialogContentText","DialogActions","color","autoFocus","LensCal","useState","openHomeAlert","setOpenHomeAlert","openCalAlert","setOpenCalAlert","LENS_POSTION_HOME","shift","setShift","focus","setFocus","zoom","setZoom","getButton","cmd","text","Accordion","expanded","AccordionSummary","expandIcon","aria-controls","Typography","AccordionDetails","Container","marginLeft","paddingLeft","LENS_SHIFT_H_FN","LENS_SHIFT_H_NN","LENS_SHIFT_H_SN","LENS_SHIFT_H_SP","LENS_SHIFT_H_NP","LENS_SHIFT_H_FP","LENS_SHIFT_V_FN","LENS_SHIFT_V_NN","LENS_SHIFT_V_SN","LENS_SHIFT_V_SP","LENS_SHIFT_V_NP","LENS_SHIFT_V_FP","LENS_FOCUS_FN","LENS_FOCUS_NN","LENS_FOCUS_SN","LENS_FOCUS_SP","LENS_FOCUS_NP","LENS_FOCUS_FP","LENS_ZOOM_FN","LENS_ZOOM_NN","LENS_ZOOM_SN","LENS_ZOOM_SP","LENS_ZOOM_NP","LENS_ZOOM_FP","Power","openPowerOnAlert","setOpenPowerOnAlert","openPowerOffAlert","setOpenPowerOffAlert","POWER_OFF","POWER_ON","Shutter","SHUTTER_CLOSED","SHUTTER_OPEN","ProjectorSetup","pj","setName","ID","setID","useEffect","popUp","PROJECTOR_NAME","PROJECTOR_ID","TextField","label","CommandPad","active","pjs","menuOpen","setMenuOpen","blendOpen","setBlendOpen","lensOpen","setLensOpen","pjSetupOpen","setPJSetupOpen","disabled","processCMD","cmdLine","selected","world","cmds","split","cmdArray","getCommandArray","forEach","newSelected","includes","filter","n","handleSelected","handleThru","s","indexOf","c","parseInt","toString","negative","start","end","console","log","concat","groupEnd","array","num","findInt","reset","PJ","darkMode","handleTableSelect","time","setTime","getTime","lastSeen","t","now","Math","floor","setInterval","clearInterval","bStyle","b","goodWords","TableRow","TableCell","background","shutter","edgeBlending","regions","edgeBlendingUpper","edgeBlendingRight","edgeBlendingLower","edgeBlendingLeft","borderStyle","borderColor","fontSize","edgeBlendingMarker","blendRegion","testPattren","lampStatus","hdmiResolution","hdmiSignalLevel","hdmiVerticalFrequency","inputSignalName_Main","PJCard","pj_tupple","handlePJCard","cardStyle","border","ProgrammerTable","component","scope","osdPostion","root","flexGrow","paper","table","maxHeight","Programmer","prefs","status","getPJs","useMemo","sort","online","power","error","backColor","showOnlySelected","groupCollapsed","pjList","useMediaQuery","programmerTableView","TableContainer","Table","TableHead","TableBody","Grid","container","item","xs","goFetch","query","a","fetchString","fetch","mode","res","ok","json","PatchAddDialog","addPJs","currentPatch","PANASONIC","make","setMake","err","Amount","setAmount","Object","values","getMaxID","StartID","BaseIP","setBaseIP","UserName","setUserName","Pass","setPass","Port","setPort","checkOverlap","startID","amount","fullWidth","type","isNaN","helperText","handleBaseIP","auth","fab","position","bottom","right","columns","field","headerName","hide","patch","setPatch","addWindowOpen","setAddWindowOpen","setEditWindowOpen","setSelected","deleteWindowOpen","setDeleteWindowOpen","newPJs","rows","checkboxSelection","selectionModel","onSelectionModelChange","aria-label","newPatch","assign","entries","newSelect","getSelectedString","baseIP","port","ip_address","v4","updateLog","version","date","notes","createStyles","bullet","display","transform","menuButton","marginRight","title","pos","About","bull","AppBar","update","Card","CardContent","note","appBar","flex","Transition","forwardRef","ref","Slide","direction","ConfigDialog","config","socket","polling","setPolling","pollingInterval","setPollingInterval","aboutOpen","setAboutOpen","fullScreen","TransitionComponent","onSubmit","event","preventDefault","form","document","querySelector","data","FormData","pair","v","POLLING","POLLING_INTERVAL","setConfig","emit","EMITTING_PATCH","SocketPatcher","Toolbar","paddingBottom","IconButton","edge","LOCATION","defaultValue","FormControlLabel","labelPlacement","control","Switch","checked","p","handleInput","setText","Worlds","setWorld","WorldBox","handleWorldSelection","handleGroupSelection","worldOpen","setWorldOpen","groupOpen","setGroupOpen","Fade","in","App","Props","openConfig","handleCloseConfig","setCMD","undefined","vartiable","setVartiable","setActive","activeIndex","setActiveIndex","clearPresses","setClearPressed","groupNameOpen","setGroupNameOpen","setPJs","pollingProgress","setPollingProgress","setCommand","setLastPJClicked","blendMarker","blend","hdmiInput","signalName","rigStatus","setStatus","on","EMITTING_PJS","EMITTING_STATUS","REQUEST_UPDATE","REQUESTING_UPDATE","REQUEST_CONFIG","EMITTING_CONFIG","EMITTING_POLLING_PROGRESS","progress","SocketListener","EMITTING_CMD","pjIDs","clearProgrammerAfterCMD","onkeyup","handleCMD","handleNext","handleBack","getGroup","finalCMD","diffrentPJs","groupID","rel","href","LinearProgress","float","InputLabelProps","shrink","cookieName","defaultPrefs","setCookie","Cookies","set","getCookie","get","getPrefrences","JSON","parse","d","ControlMenu","handleSettings","handleOpenConfig","divRef","useRef","setOpen","handleChange","CLEAR_SELECTED_ON_CMD","IF_SELECTED","DARK_MODE","PROGRAMMER_TABLE_VIEW","button","aria-haspopup","Menu","keepMounted","anchorEl","current","Disconnected","CircularProgress","Settings","React","createContext","Pref","socketIOClinet","backdrop","zIndex","drawer","LoadPage","prefersDarkMode","prefres","setPrefs","setOpenConfig","socketConnected","setSocketConnected","createMuiTheme","palette","ThemeProvider","Provider","CssBaseline","Backdrop","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","onUpdate","onSuccess","catch","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById","URL","origin","addEventListener","headers","response","contentType","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.778af001.chunk.js","sourcesContent":["import { CSSProperties } from \"react\";\r\n\r\n\r\nexport let pjServer = 'http://localhost:3000/'\r\n//export let pjServer = 'http://192.168.10.249:3000/'\r\nif(process.env.NODE_ENV ==='production'){\r\n    pjServer = process.env.REACT_APP_SERVER? process.env.REACT_APP_SERVER : 'localhost:3000';\r\n}\r\n\r\n\r\nexport const fetchSettings: RequestInit = {\r\n    method:'get',\r\n    headers:{\r\n        \r\n    }\r\n   \r\n}\r\n\r\n\r\nexport type PJs = Record<number,PJ_OBJ>\r\n\r\nexport enum ioCommands {\r\n    REQUEST_UPDATE = 'REQUEST_UPDATE',\r\n    REQUESTING_UPDATE = 'REQUESTING_UPDATE',\r\n    EMITTING_PJS = 'EMITTING_PJS',\r\n    EMITTING_STATUS = 'EMITTING_STATUS',\r\n    REQUEST_CONFIG = 'REQUEST_CONFIG',\r\n    EMITTING_CONFIG = 'EMITTING_CONFIG',\r\n    REQUESTING_CONFIG = 'REQUESTING_CONFIG', \r\n    EMITTING_PATCH = 'EMITTING_PATCH',\r\n    EMITTING_POLLING_PROGRESS = 'EMITTING_POLLING_PROGRESS',\r\n    EMITTING_CMD = 'EMITTING_CMD',\r\n    STORE_GROUP = 'STORE_GROUP'\r\n}\r\nexport type PJ_OBJ = {\r\n    id: number,\r\n    power: string,\r\n    name: string,\r\n    shutter: string,\r\n    online: string,\r\n    lastSeen: number,\r\n    lampStatus: string,\r\n    edgeBlending: string,\r\n    edgeBlendingMarker: string,\r\n    edgeBlendingUpper: string,\r\n    edgeBlendingLower: string,\r\n    edgeBlendingRight: string,\r\n    edgeBlendingLeft: string,\r\n    testPattren: string,\r\n    backColor: string,\r\n    hdmiSignalLevel: string,\r\n    hdmiResolution: string,\r\n    hdmiVerticalFrequency: string,\r\n    osdPostion: string,\r\n    inputSignalName_Main: string,\r\n    error: string\r\n\r\n}\r\nexport interface RIG_STATUS{\r\n    online: boolean,\r\n    power: boolean,\r\n    shutter: boolean,\r\n    blend: boolean,\r\n    blendMarker: boolean,\r\n    testPattren: boolean,\r\n    lampStatus: boolean,\r\n    hdmiInput:boolean,\r\n    signalName: boolean\r\n}\r\n\r\nexport enum commands{\r\n    THRU = 'THRU',\r\n    DEL = 'DEL',\r\n    CLEAR = 'CLEAR',\r\n    ENTER = 'ENTER',\r\n    NEXT = 'NEXT',\r\n    BACK = 'BACK',\r\n    IF_PROG = 'IF_PROG'\r\n\r\n}\r\n\r\nexport enum menuCommands{\r\n    CLEAR_SELECTED_ON_CMD = 'CLEAR_SELECTED_ON_CMD',\r\n    IF_SELECTED = 'IF_SELECTED',\r\n    DARK_MODE = 'DARK_MODE',\r\n    PROGRAMMER_TABLE_VIEW ='PROGRAMMER_TABLE_VIEW'\r\n}\r\nexport const _keys= ['7','8','9','4','5','6','1','2','3','-','0','+',commands.THRU,commands.DEL, commands.CLEAR, commands.NEXT, commands.IF_PROG, commands.BACK, commands.ENTER, ioCommands.STORE_GROUP]\r\n\r\nexport const keys= ['7','8','9','4','5','6','1','2','3','-','0','+',commands.THRU,commands.DEL, commands.CLEAR, commands.NEXT, commands.IF_PROG, commands.BACK, commands.ENTER]\r\n\r\nexport enum ControlCommands {\r\n    POWER_OFF = 'POWER_OFF',\r\n    POWER_ON = 'POWER_ON',\r\n    SHUTTER_CLOSED = 'SHUTTER_CLOSED',\r\n    SHUTTER_OPEN = 'SHUTTER_OPEN',\r\n    EDGE_BLENDING_OFF = 'EDGE_BLENDING_OFF',\r\n    EDGE_BLENDING_ON = 'EDGE_BLENDING_ON',\r\n    EDGE_BLENDING_MARKERS_ON = 'EDGE_BLENDING_MARKERS_ON',\r\n    EDGE_BLENDING_MARKERS_OFF = 'EDGE_BLENDING_MARKERS_OFF',\r\n    TEST_PATTERN_OFF = 'TEST_PATTERN_OFF',\r\n    TEST_PATTERN_WHITE = 'TEST_PATTERN_WHITE',\r\n    TEST_PATTERN_BLACK = 'TEST_PATTERN_BLACK',\r\n    TEST_PATTERN_FOCUS_RED = 'TEST_PATTERN_FOCUS_RED',\r\n    TEST_PATTERN_FOCUS_WHITE= 'TEST_PATTERN_FOCUS_WHITE',\r\n    MENU = 'MENU',\r\n    MENU_DOWN_KEY = 'MENU_DOWN_KEY',\r\n    MENU_UP_KEY = 'MENU_UP_KEY',\r\n    MENU_RIGHT_KEY = 'MENU_RIGHT_KEY',\r\n    MENU_LEFT_KEY = 'MENU_LEFT_KEY',\r\n    MENU_DEFAULT_KEY = 'MENU_DEFAULT_KEY',\r\n    MENU_ENTER_KEY = 'MENU_ENTER_KEY',\r\n    EDGE_BLENDING_UPPER_ON = 'EDGE_BLENDING_UPPER_ON',\r\n    EDGE_BLENDING_UPPER_OFF = 'EDGE_BLENDING_UPPER_OFF',\r\n    EDGE_BLENDING_LOWER_OFF = 'EDGE_BLENDING_LOWER_OFF',\r\n    EDGE_BLENDING_LOWER_ON = 'EDGE_BLENDING_LOWER_ON',\r\n    EDGE_BLENDING_RIGHT_OFF = 'EDGE_BLENDING_RIGHT_OFF',\r\n    EDGE_BLENDING_RIGHT_ON = 'EDGE_BLENDING_RIGHT_ON',\r\n    EDGE_BLENDING_LEFT_OFF = 'EDGE_BLENDING_LEFT_OFF',\r\n    EDGE_BLENDING_LEFT_ON = 'EDGE_BLENDING_LEFT_ON',\r\n    OSD_POSITION_UPPER_LEFT = 'OSD_POSITION_UPPER_LEFT',\r\n    OSD_POSITION_CENTER_LEFT = 'OSD_POSITION_CENTER_LEFT',\r\n    OSD_POSITION_LOWER_LEFT = 'OSD_POSITION_LOWER_LEFT',\r\n    OSD_POSITION_TOP_CENTER = 'OSD_POSITION_TOP_CENTER',\r\n    OSD_POSITION_CENTER = 'OSD_POSITION_CENTER',\r\n    OSD_POSITION_LOWER_CENTER = 'OSD_POSITION_LOWER_CENTER',\r\n    OSD_POSITION_UPPER_RIGHT = 'OSD_POSITION_UPPER_RIGHT',\r\n    OSD_POSITION_CENTER_RIGHT = 'OSD_POSITION_CENTER_RIGHT',\r\n    OSD_POSITION_LOWER_RIGHT = 'OSD_POSITION_LOWER_RIGHT',\r\n    PROJECTOR_NAME = 'PROJECTOR_NAME',\r\n    NUMBER_KEY_0 = 'NUMBER_KEY_0',\r\n    NUMBER_KEY_1 = 'NUMBER_KEY_1',\r\n    NUMBER_KEY_2 = 'NUMBER_KEY_2',\r\n    NUMBER_KEY_3 = 'NUMBER_KEY_3',\r\n    NUMBER_KEY_4 = 'NUMBER_KEY_4',\r\n    NUMBER_KEY_5 = 'NUMBER_KEY_5',\r\n    NUMBER_KEY_6 = 'NUMBER_KEY_6',\r\n    NUMBER_KEY_7 = 'NUMBER_KEY_7',\r\n    NUMBER_KEY_8 = 'NUMBER_KEY_8',\r\n    NUMBER_KEY_9 = 'NUMBER_KEY_9',\r\n    LENS_POSTION_HOME = 'LENS_POSTION_HOME',\r\n    LENS_CALIBRATION = 'LENS_CALIBRATION',\r\n    LENS_SHIFT_H_SP = 'LENS_SHIFT_H_SP',\r\n    LENS_SHIFT_H_SN = 'LENS_SHIFT_H_SN',\r\n    LENS_SHIFT_H_NP = 'LENS_SHIFT_H_NP',\r\n    LENS_SHIFT_H_NN = 'LENS_SHIFT_H_NN',\r\n    LENS_SHIFT_H_FP = 'LENS_SHIFT_H_FP',\r\n    LENS_SHIFT_H_FN = 'LENS_SHIFT_H_FN',\r\n    LENS_SHIFT_V_SP = 'LENS_SHIFT_V_SP',\r\n    LENS_SHIFT_V_SN = 'LENS_SHIFT_V_SN',\r\n    LENS_SHIFT_V_NP = 'LENS_SHIFT_V_NP',\r\n    LENS_SHIFT_V_NN = 'LENS_SHIFT_V_NN',\r\n    LENS_SHIFT_V_FP = 'LENS_SHIFT_V_FP',\r\n    LENS_SHIFT_V_FN = 'LENS_SHIFT_V_FN',\r\n    LENS_FOCUS_SP = 'LENS_FOCUS_SP',\r\n    LENS_FOCUS_SN = 'LENS_FOCUS_SN',\r\n    LENS_FOCUS_NP = 'LENS_FOCUS_NP',\r\n    LENS_FOCUS_NN = 'LENS_FOCUS_NN',\r\n    LENS_FOCUS_FP = 'LENS_FOCUS_FP',\r\n    LENS_FOCUS_FN = 'LENS_FOCUS_FN',\r\n    LENS_ZOOM_SP = 'LENS_ZOOM_SP',\r\n    LENS_ZOOM_SN = 'LENS_ZOOM_SN',\r\n    LENS_ZOOM_NP = 'LENS_ZOOM_NP',\r\n    LENS_ZOOM_NN = 'LENS_ZOOM_NN',\r\n    LENS_ZOOM_FP = 'LENS_ZOOM_FP',\r\n    LENS_ZOOM_FN = 'LENS_ZOOM_FN',\r\n    BACK_COLOR_BLUE = 'BACK_COLOR_BLUE',\r\n    BACK_COLOR_BLACK = 'BACK_COLOR_BLACK',\r\n    BACK_COLOR_USER_LOGO = 'BACK_COLOR_USER_LOGO',\r\n    BACK_COLOR_DEFAULT_LOGO = 'BACK_COLOR_DEFAULT_LOGO',\r\n    PROJECTOR_ID = 'PROJECTOR_ID',\r\n    OSD_ON = 'OSD_ON',\r\n    OSD_OFF = 'OSD_OFF',\r\n    FREEZE_OFF = 'FREEZE_OFF',\r\n    FREEZE_ON = 'FREEZE_ON',\r\n    CEILING_MOUNT_ON ='CEILING_MOUNT_ON',\r\n    CEILING_MOUNT_OFF='CEILING_MOUNT_OFF',\r\n    STANDBY_MODE_NETWORK='STANDBY_MODE_NETWORK',\r\n    AUTO_SHUTDOWN_OFF='AUTO_SHUTDOWN_OFF',\r\n    POWER_HOG_ON='POWER_HOG_ON'\r\n\r\n\r\n}\r\n\r\nexport type ControlKeys = keyof typeof ControlCommands\r\n\r\nexport enum PROJECTOR_MAKES {\r\n    PANASONIC = 'PANASONIC',\r\n    BARCO = 'BARCO'\r\n}\r\n\r\n\r\n\r\nexport type PROJECTOR_MAKE = keyof typeof PROJECTOR_MAKES\r\n\r\n\r\nexport enum ConfigHeaders{\r\n    LOCATION = 'LOCATION',\r\n    LAST_UPDATED = 'LAST_UPDATED',\r\n    POLLING = 'POLLING',\r\n    POLLING_INTERVAL = 'POLLING_INTERVAL',\r\n    PATCH = 'PATCH'\r\n    \r\n}\r\ninterface Projector{\r\n    ip_address: string,\r\n    port: number,\r\n    auth: string,\r\n    make: keyof typeof PROJECTOR_MAKES,\r\n    id: number\r\n}\r\nexport type Patch = Record<string,Projector>\r\nexport type Group = {name: string, group: number[]}\r\nexport type Groups = Record<number, Group>\r\nexport interface Config {\r\n    Patch: Patch,\r\n    Location: string,\r\n    LastUpdated: string,\r\n    Polling: boolean,\r\n    Polling_Interval: number,\r\n    Groups: Groups\r\n}\r\n\r\n\r\nexport type ConfigKeys = keyof typeof ConfigHeaders\r\nexport const defaultConfig: Config = {\r\n    Patch: {},\r\n    Location: '',\r\n    LastUpdated: Date(),\r\n    Polling: false,\r\n    Polling_Interval: 60000,\r\n    Groups: {0:{name:'All',group:[]}}\r\n}\r\n\r\nexport type HandleCommand = (cmd: ControlKeys, text?: string )=> void\r\n\r\nexport const ButtonStyle: CSSProperties={\r\n\r\n    width: '150px',\r\n    height: '50px',\r\n    marginBottom: 1\r\n\r\n}","import {Button, ButtonGroup, Paper} from '@material-ui/core'\r\nimport './numberpad.css'\r\n\r\nimport * as C from '../util/constants'\r\ninterface numberpad_props{\r\n    handlePad: (e: string)=>void\r\n}\r\nexport default function Numberpad(props:numberpad_props){\r\n    const {handlePad} =props\r\n    \r\n    const getButtons=()=>{\r\n     \r\n        return C.keys.map(key=>{\r\n            let w = key === C.ioCommands.STORE_GROUP? '125px' : '75px'\r\n            return <Button variant=\"contained\" style={{margin: 2, padding: '10px', width: w, touchAction: 'manuplation'}} size={'large'} key={key} onClick={(e)=>handlePad(key)} >{key}</Button>     \r\n        })\r\n    }\r\n\r\n    const buttonGroups=()=>{\r\n        let buttons = getButtons()\r\n        let groups =[]\r\n        let chunk = 3\r\n        for(let i=0; i<=buttons.length-chunk; i+=chunk){\r\n           \r\n            let g = buttons.slice(i,chunk+i)\r\n           \r\n            groups.push(\r\n                <ButtonGroup key={'pad_group'+i}>\r\n                   {g}\r\n                </ButtonGroup>\r\n             \r\n            )\r\n        }\r\n        return groups\r\n    }\r\n    return (\r\n        <Paper style={{touchAction: 'manuplation'}}elevation={1} className='pad'>\r\n            \r\n            {buttonGroups()}\r\n            {getButtons()[C.keys.length-1]}\r\n            \r\n        </Paper>\r\n\r\n    )\r\n}","import { Dialog, DialogTitle, Button, ButtonGroup } from \"@material-ui/core\";\r\nimport { CSSProperties } from \"react\";\r\nimport { ControlKeys, ControlCommands } from '../util/constants'\r\ninterface BlendDialog_Props {\r\n    open: boolean,\r\n    handleClose: () => void,\r\n    handleCommand: (e: ControlKeys) => void\r\n}\r\n\r\nexport default function BlendDialog(props: BlendDialog_Props) {\r\n    const { open, handleClose, handleCommand } = props\r\n    const buttonStyle: CSSProperties = {\r\n        padding: '20px',\r\n        width: '140px'\r\n\r\n       \r\n    }\r\n    const buttonGroupStyle: CSSProperties = {\r\n        justifyContent: 'center',\r\n        textAlign: 'center',\r\n        margin: 'auto'\r\n       \r\n        \r\n    }\r\n    return (\r\n        <Dialog key='blend_dialog'  onClose={handleClose} aria-labelledby=\"simple-dialog-title\" open={open}>\r\n            <DialogTitle style={buttonGroupStyle} key='menu_dialog_title' id=\"simple-dialog-title\">Blending</DialogTitle>\r\n            <div key='blend_div' style={{width:300, justifyContent: 'center', textAlign: 'center'}}>\r\n            <ButtonGroup style={buttonGroupStyle} key='blend_main_keys' variant=\"outlined\">\r\n                <Button style={buttonStyle} key='blend_on' onClick={(e) => handleCommand(ControlCommands.EDGE_BLENDING_ON)} >Edge Blend On</Button>\r\n                <Button style={buttonStyle} key='blend_off' onClick={(e) => handleCommand(ControlCommands.EDGE_BLENDING_OFF)} >Edge Blend Off</Button>\r\n            </ButtonGroup>\r\n\r\n            <br></br>\r\n\r\n            <ButtonGroup style={buttonGroupStyle} key='makers_main_keys' variant=\"outlined\">\r\n                <Button style={buttonStyle} key='markers_on' onClick={(e) => handleCommand(ControlCommands.EDGE_BLENDING_MARKERS_ON)} >Markers On</Button>\r\n                <Button style={buttonStyle} key='markers_off' onClick={(e) => handleCommand(ControlCommands.EDGE_BLENDING_MARKERS_OFF)} >Markers Off</Button>\r\n            </ButtonGroup>\r\n\r\n            <br></br>\r\n\r\n            <ButtonGroup style={buttonGroupStyle} key='upper_keys' variant=\"outlined\">\r\n                <Button style={buttonStyle} key='upper_on' onClick={(e) => handleCommand(ControlCommands.EDGE_BLENDING_UPPER_ON)} >Uppere On</Button>\r\n                <Button style={buttonStyle} key='upper_off' onClick={(e) => handleCommand(ControlCommands.EDGE_BLENDING_UPPER_OFF)} >Uppper Off</Button>\r\n            </ButtonGroup>\r\n\r\n            <ButtonGroup style={buttonGroupStyle} key='right_keys' variant=\"outlined\">\r\n                <Button style={buttonStyle} key='right_on' onClick={(e) => handleCommand(ControlCommands.EDGE_BLENDING_RIGHT_ON)} >Right On</Button>\r\n                <Button style={buttonStyle} key='right_off' onClick={(e) => handleCommand(ControlCommands.EDGE_BLENDING_RIGHT_OFF)} >Right Off</Button>\r\n            </ButtonGroup>\r\n\r\n            <ButtonGroup style={buttonGroupStyle} key='lower_keys' variant=\"outlined\">\r\n                <Button style={buttonStyle} key='lower_on' onClick={(e) => handleCommand(ControlCommands.EDGE_BLENDING_LOWER_ON)} >Lower On</Button>\r\n                <Button style={buttonStyle} key='lower_off' onClick={(e) => handleCommand(ControlCommands.EDGE_BLENDING_LOWER_OFF)} >Lower Off</Button>\r\n            </ButtonGroup>\r\n\r\n            <ButtonGroup style={buttonGroupStyle} key='left_keys' variant=\"outlined\">\r\n                <Button style={buttonStyle} key='left_on' onClick={(e) => handleCommand(ControlCommands.EDGE_BLENDING_LEFT_ON)} >Left On</Button>\r\n                <Button style={buttonStyle} key='left_off' onClick={(e) => handleCommand(ControlCommands.EDGE_BLENDING_LEFT_OFF)} >Left Off</Button>\r\n            </ButtonGroup>\r\n            </div>\r\n        </Dialog>\r\n    );\r\n}","import {ControlKeys, ControlCommands} from '../../util/constants'\r\nimport {FormControl, InputLabel, Select, MenuItem, makeStyles} from '@material-ui/core'\r\n\r\ninterface OSDProps{\r\n    handleCommand: (e: ControlKeys) => void\r\n}\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    formControl: {\r\n      margin: theme.spacing(1),\r\n      minWidth: 120,\r\n    },\r\n    selectEmpty: {\r\n      marginTop: theme.spacing(2),\r\n    },\r\n  }));\r\nexport default function OSDPostion(props: OSDProps){\r\n    const {handleCommand} = props\r\n    const classes = useStyles()\r\n\r\n    return (\r\n        <>\r\n    <FormControl className={classes.formControl}>\r\n    <InputLabel id='osd_position'>OSD Position</InputLabel>\r\n    <Select labelId='osd_position' id='osd_postion'\r\n     value={''} onChange={((e)=> handleCommand(e.target.value as ControlKeys))}>\r\n         <MenuItem value={ControlCommands.OSD_POSITION_UPPER_LEFT}>Upper Left</MenuItem>\r\n         <MenuItem value={ControlCommands.OSD_POSITION_CENTER_LEFT}>Center Left</MenuItem>\r\n         <MenuItem value={ControlCommands.OSD_POSITION_LOWER_LEFT}>Lower Left</MenuItem>\r\n         <MenuItem value={ControlCommands.OSD_POSITION_TOP_CENTER}>Top Center</MenuItem>\r\n         <MenuItem value={ControlCommands.OSD_POSITION_CENTER}>Center</MenuItem>\r\n         <MenuItem value={ControlCommands.OSD_POSITION_LOWER_CENTER}>Lower Center</MenuItem>\r\n         <MenuItem value={ControlCommands.OSD_POSITION_UPPER_RIGHT}>Upper Right</MenuItem>\r\n         <MenuItem value={ControlCommands.OSD_POSITION_LOWER_RIGHT}>Lower Right</MenuItem>\r\n     </Select>\r\n     \r\n</FormControl>\r\n</> )\r\n}","import { ControlKeys, ControlCommands } from '../../util/constants'\r\nimport { FormControl, InputLabel, Select, MenuItem, makeStyles } from '@material-ui/core'\r\n\r\ninterface TestPatterProps {\r\n    handleCommand: (e: ControlKeys) => void\r\n}\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    formControl: {\r\n        margin: theme.spacing(1),\r\n        minWidth: 120,\r\n    },\r\n    selectEmpty: {\r\n        marginTop: theme.spacing(2),\r\n    },\r\n}));\r\nexport default function Testpattern(props: TestPatterProps) {\r\n    const { handleCommand } = props\r\n    const classes = useStyles()\r\n\r\n    return (\r\n        <>\r\n            <FormControl className={classes.formControl}>\r\n                <InputLabel id='test_pattren'>Test Pattren</InputLabel>\r\n                <Select labelId='test_pattren' id='test_pattren_select'\r\n                    value={''} onChange={((e) => handleCommand(e.target.value as ControlKeys))}>\r\n                    <MenuItem value={ControlCommands.TEST_PATTERN_OFF}>Off</MenuItem>\r\n                    <MenuItem value={ControlCommands.TEST_PATTERN_WHITE}>White</MenuItem>\r\n                    <MenuItem value={ControlCommands.TEST_PATTERN_BLACK}>Black</MenuItem>\r\n                    <MenuItem value={ControlCommands.TEST_PATTERN_FOCUS_RED}>Focus Red</MenuItem>\r\n                    <MenuItem value={ControlCommands.TEST_PATTERN_FOCUS_WHITE}>Focus White</MenuItem>\r\n                </Select>\r\n\r\n            </FormControl>\r\n        </>)\r\n}","import {ControlKeys, ControlCommands} from '../../util/constants'\r\nimport {FormControl, InputLabel, Select, MenuItem, makeStyles} from '@material-ui/core'\r\n\r\ninterface Props{\r\n    handleCommand: (e: ControlKeys) => void\r\n}\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    formControl: {\r\n      margin: theme.spacing(1),\r\n      minWidth: 120,\r\n    },\r\n    selectEmpty: {\r\n      marginTop: theme.spacing(2),\r\n    },\r\n  }));\r\nexport default function BackColor(props: Props){\r\n    const {handleCommand} = props\r\n    const classes = useStyles()\r\n\r\n    return (\r\n        <>\r\n    <FormControl className={classes.formControl}>\r\n    <InputLabel id='backcolor'>Back Color</InputLabel>\r\n    <Select labelId='backcolor' id='backcolor'\r\n     value={''} onChange={((e)=> handleCommand(e.target.value as ControlKeys))}>\r\n         <MenuItem value={ControlCommands.BACK_COLOR_BLUE}>Blue</MenuItem>\r\n         <MenuItem value={ControlCommands.BACK_COLOR_BLACK}>Black</MenuItem>\r\n         <MenuItem value={ControlCommands.BACK_COLOR_DEFAULT_LOGO}>Default Logo</MenuItem>\r\n         <MenuItem value={ControlCommands.BACK_COLOR_USER_LOGO}>User Logo</MenuItem>\r\n     </Select>\r\n     \r\n</FormControl>\r\n</> )\r\n}","    import { Dialog, DialogTitle, Button, ButtonGroup, FormControl,InputLabel,Select,MenuItem, makeStyles } from \"@material-ui/core\";\r\nimport { CSSProperties } from \"react\";\r\nimport { ControlKeys, ControlCommands } from '../util/constants'\r\nimport OSDPostion from \"./CommandInterfaces/OSDPostion\";\r\nimport Testpattern from \"./CommandInterfaces/Testpattern\";\r\nimport BackColor from './CommandInterfaces/BackColor'\r\ninterface MenuDialog_Props {\r\n    open: boolean,\r\n    handleClose: () => void,\r\n    handleCommand: (e: ControlKeys) => void\r\n}\r\n\r\nexport default function MenuDialog(props: MenuDialog_Props) {\r\n    const { open, handleClose, handleCommand } = props\r\n   \r\n    const buttonStyle: CSSProperties = {\r\n        padding: '20px',\r\n        width: '100px',\r\n       \r\n    }\r\n    const buttonGroupStyle: CSSProperties = {\r\n        justifyContent: 'center',\r\n        textAlign: 'center'\r\n        \r\n    }\r\n    return (\r\n        <Dialog key='menu_dialog' onClose={handleClose} aria-labelledby=\"simple-dialog-title\" open={open}>\r\n            <DialogTitle style={buttonGroupStyle} key='menu_dialog_title' id=\"simple-dialog-title\">Menu Commands</DialogTitle>\r\n            <ButtonGroup style={buttonGroupStyle} key='menu_main_keys' variant=\"outlined\">\r\n                <Button style={buttonStyle} key='menu' onClick={(e) => handleCommand(ControlCommands.MENU)} >Menu</Button>\r\n                <Button style={buttonStyle} key='enter' onClick={(e) => handleCommand(ControlCommands.MENU_DEFAULT_KEY)} >Default</Button>\r\n            </ButtonGroup>\r\n\r\n            <br></br>\r\n\r\n            <ButtonGroup style={buttonGroupStyle} key='menu_row1_keys' variant=\"outlined\">\r\n                <Button style={buttonStyle} key='up' onClick={(e) => handleCommand(ControlCommands.MENU_UP_KEY)} >Up</Button>\r\n            </ButtonGroup>\r\n\r\n            <ButtonGroup style={buttonGroupStyle} key='menu_row2_keys' variant=\"outlined\">\r\n                <Button style={buttonStyle} key='left' onClick={(e) => handleCommand(ControlCommands.MENU_LEFT_KEY)} >Left</Button>\r\n                <Button style={buttonStyle} key='enter' onClick={(e) => handleCommand(ControlCommands.MENU_ENTER_KEY)} >Enter</Button>\r\n                <Button style={buttonStyle} key='right' onClick={(e) => handleCommand(ControlCommands.MENU_RIGHT_KEY)} >Right</Button>\r\n            </ButtonGroup>\r\n\r\n            <ButtonGroup style={buttonGroupStyle} key='menu_row3_keys' variant=\"outlined\">\r\n                <Button style={buttonStyle} key='down' onClick={(e) => handleCommand(ControlCommands.MENU_DOWN_KEY)} >Down</Button>\r\n            </ButtonGroup>\r\n\r\n            <ButtonGroup style={buttonGroupStyle} key='menu_row4_keys' variant=\"outlined\">\r\n                <Button style={buttonStyle} key='osd on' onClick={(e)=>handleCommand(ControlCommands.OSD_ON)}>OSD ON</Button>\r\n                <Button style={buttonStyle} key='osd off' onClick={(e)=>handleCommand(ControlCommands.OSD_OFF)}>OSD OFF</Button>\r\n                <Button style={buttonStyle} key='freeze on' onClick={(e)=>handleCommand(ControlCommands.FREEZE_ON)}>Freeze ON</Button>\r\n                <Button style={buttonStyle} key='freeze off' onClick={(e)=>handleCommand(ControlCommands.FREEZE_OFF)}>Freeze Off</Button>\r\n            </ButtonGroup>\r\n\r\n            <ButtonGroup style={buttonGroupStyle} key='ceiling_mount_keys' variant='outlined'>\r\n                <Button style={buttonStyle} key='ceiling_mount_on' onClick={(e)=>handleCommand(ControlCommands.CEILING_MOUNT_ON)}>Ceiling On</Button>\r\n                <Button style={buttonStyle} key='ceiling_mount_off' onClick={(e)=>handleCommand(ControlCommands.CEILING_MOUNT_OFF)}>Ceiling Off</Button>\r\n            </ButtonGroup>\r\n            <ButtonGroup style={buttonGroupStyle} key='ceiling_mount_keys' variant='outlined'>\r\n                <Button style={buttonStyle} key='power_hog' onClick={(e)=>handleCommand(ControlCommands.POWER_HOG_ON)}>Barco POWER HOG</Button>\r\n               \r\n            </ButtonGroup>\r\n\r\n           <Testpattern handleCommand={handleCommand} />\r\n           <OSDPostion handleCommand={handleCommand}/>\r\n           <BackColor handleCommand={handleCommand}/>\r\n\r\n        </Dialog>\r\n    );\r\n}","import {Button, Dialog, DialogActions, DialogTitle, DialogContent, DialogContentText } from \"@material-ui/core\";\r\nimport { ControlKeys } from \"../util/constants\";\r\ninterface Alert_Props{\r\n    open: boolean,\r\n    handleCommand: (cmd: ControlKeys)=>void,\r\n    handleClose: ()=>void,\r\n    command: ControlKeys,\r\n    header: string,\r\n    message: string\r\n}\r\nexport default function Alert(props: Alert_Props){\r\n    const {open,handleCommand, command, handleClose, header, message} = props\r\n\r\n    const handleClick=(approval: boolean)=>{\r\n        if(approval){\r\n            handleCommand(command)\r\n        }\r\n        handleClose()\r\n\r\n    }\r\n    return (\r\n        <Dialog\r\n        open={open}\r\n        onClose={handleClose}\r\n        aria-labelledby=\"alert-dialog-title\"\r\n        aria-describedby=\"alert-dialog-description\"\r\n      >\r\n        <DialogTitle id=\"alert-dialog-title\">{header}</DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText id=\"alert-dialog-description\">\r\n            <span style={{width:'50'}}>{message}</span>\r\n          </DialogContentText>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={(e)=>handleClick(false)} color=\"primary\">\r\n            Cancle\r\n          </Button>\r\n          <Button onClick={(e)=>handleClick(true)} color=\"primary\" autoFocus>\r\n            Okay\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n        \r\n    )\r\n}","import { ButtonGroup, Button } from \"@material-ui/core\";\r\nimport { useState } from \"react\";\r\nimport { ControlKeys, ControlCommands, ButtonStyle } from \"../../util/constants\";\r\nimport Alert from \"../Alert\";\r\n\r\ninterface Props{\r\n    handleCommand: (e: ControlKeys) => void\r\n}\r\nexport default function LensCal(props: Props){\r\n    const {handleCommand} = props\r\n    const [openHomeAlert, setOpenHomeAlert]= useState(false)\r\n    const [openCalAlert, setOpenCalAlert]= useState(false)\r\n    return(\r\n        <div style={{margin:'auto'}}>\r\n        <ButtonGroup key='shutters' color=\"primary\" variant=\"outlined\">\r\n        <Button  key='home'  style={ButtonStyle}  onClick={(e) => setOpenHomeAlert(true)} >Lens Home</Button>\r\n        <Button  key='cal' style={ButtonStyle}  onClick={(e) => setOpenCalAlert(true)} >Lens Cal</Button>\r\n    </ButtonGroup>\r\n    <Alert open={openHomeAlert} handleCommand={handleCommand} handleClose={()=>setOpenHomeAlert(false)}\r\n        header='Home Lense' message='Are you sure?' command={ControlCommands.LENS_POSTION_HOME}/>\r\n        <Alert open={openCalAlert} handleCommand={handleCommand} handleClose={()=>setOpenCalAlert(false)}\r\n        header='Cal Lens' message='Are you sure?' command={ControlCommands.LENS_POSTION_HOME}/>\r\n        </div>\r\n    )\r\n}","import { Dialog, DialogTitle, Button, ButtonGroup, Accordion, AccordionSummary, Typography, AccordionDetails, Container } from \"@material-ui/core\";\r\nimport ExpandMore from \"@material-ui/icons/ExpandMore\";\r\nimport { CSSProperties, useState } from \"react\";\r\nimport { ControlKeys, ControlCommands } from '../util/constants'\r\nimport LensCal from \"./CommandInterfaces/LensCal\";\r\ninterface MenuDialog_Props {\r\n    open: boolean,\r\n    handleClose: () => void,\r\n    handleCommand: (e: ControlKeys) => void\r\n}\r\n\r\nexport default function MenuDialog(props: MenuDialog_Props) {\r\n    const { open, handleClose, handleCommand } = props\r\n    const [shift, setShift] =useState(false)\r\n    const [focus, setFocus] = useState(false)\r\n    const [zoom, setZoom] = useState(false)\r\n   \r\n    const buttonStyle: CSSProperties = {\r\n        padding: '20px',\r\n        width: '50px',\r\n        touchAction: 'manipulation'\r\n       \r\n    }\r\n    const buttonGroupStyle: CSSProperties = {\r\n        justifyContent: 'center',\r\n        textAlign: 'center'\r\n        \r\n    }\r\n    const close=()=>{\r\n        setShift(false)\r\n        setZoom(false)\r\n        setFocus(false)\r\n        handleClose()\r\n    }\r\n    const getButton=(cmd: ControlKeys, text: string)=>{\r\n        return <Button style={buttonStyle} key={text} onClick={(e)=>handleCommand(cmd)}>{text}</Button>\r\n    }\r\n    return (\r\n        <Dialog key='lens_dialog' onClose={close} aria-labelledby=\"simple-dialog-title\" open={open}>\r\n            <DialogTitle style={buttonGroupStyle} key='menu_dialog_title' id=\"simple-dialog-title\">Lens Commands</DialogTitle>\r\n            <LensCal handleCommand={handleCommand} />\r\n            <Accordion key=\"shift\" style={{width:'100%'}} expanded={shift} onChange={()=>setShift(!shift)}>\r\n                <AccordionSummary expandIcon={<ExpandMore/>} aria-controls='shift' id='shift-panel' >\r\n                    <Typography> Shift</Typography>\r\n                </AccordionSummary>\r\n                <AccordionDetails>\r\n                    <Container style={{width: '70%', marginLeft: '0', paddingLeft:'0'}}>\r\n            <ButtonGroup style={buttonGroupStyle} key='h_shif' variant=\"outlined\">\r\n            {getButton(ControlCommands.LENS_SHIFT_H_FN, '<<<')}\r\n            {getButton(ControlCommands.LENS_SHIFT_H_NN, '<<')}\r\n            {getButton(ControlCommands.LENS_SHIFT_H_SN, '<')}\r\n                {getButton(ControlCommands.LENS_SHIFT_H_SP, '>')}\r\n                {getButton(ControlCommands.LENS_SHIFT_H_NP, '>>')}\r\n                {getButton(ControlCommands.LENS_SHIFT_H_FP, '>>>')}\r\n            </ButtonGroup>\r\n           \r\n            <br></br>\r\n          \r\n            <ButtonGroup style={buttonGroupStyle} key='v_shift' variant=\"outlined\">\r\n            {getButton(ControlCommands.LENS_SHIFT_V_FN, '^^^')}\r\n            {getButton(ControlCommands.LENS_SHIFT_V_NN, '^^')}\r\n            {getButton(ControlCommands.LENS_SHIFT_V_SN, '^')}\r\n                {getButton(ControlCommands.LENS_SHIFT_V_SP, 'v')}\r\n                {getButton(ControlCommands.LENS_SHIFT_V_NP, 'vv')}\r\n                {getButton(ControlCommands.LENS_SHIFT_V_FP, 'vvv')}\r\n            </ButtonGroup>\r\n            </Container>\r\n            </AccordionDetails>\r\n            </Accordion>\r\n            <br></br>\r\n            <Accordion key=\"shift\" expanded={focus} onChange={()=>setFocus(!focus)}>\r\n                <AccordionSummary expandIcon={<ExpandMore/>} aria-controls='focus' id='focus-panel' >\r\n                    <Typography> Focus</Typography>\r\n                </AccordionSummary>\r\n                <AccordionDetails>\r\n                <Container style={{width: '70%', marginLeft: '0', paddingLeft:'0'}}>\r\n            <ButtonGroup style={buttonGroupStyle} key='foucs' variant=\"outlined\">\r\n            {getButton(ControlCommands.LENS_FOCUS_FN, '<<<\\r')}\r\n            {getButton(ControlCommands.LENS_FOCUS_NN, '<<\\r')}\r\n            {getButton(ControlCommands.LENS_FOCUS_SN, '<\\r')}\r\n            {getButton(ControlCommands.LENS_FOCUS_SP, '>\\r')}\r\n            {getButton(ControlCommands.LENS_FOCUS_NP, '>>\\r')}\r\n            {getButton(ControlCommands.LENS_FOCUS_FP, '>>>\\r')}\r\n            </ButtonGroup>\r\n            </Container>\r\n            </AccordionDetails>\r\n            </Accordion>\r\n            <br></br>\r\n            <Accordion key=\"zoom\" expanded={zoom} onChange={()=>setZoom(!zoom)}>\r\n                <AccordionSummary expandIcon={<ExpandMore/>} aria-controls='zoom' id='zoom-panel' >\r\n                    <Typography> Zoom</Typography>\r\n                </AccordionSummary>\r\n                <AccordionDetails>\r\n                <Container style={{width: '70%', marginLeft: '0', paddingLeft:'0'}}>\r\n            <ButtonGroup style={buttonGroupStyle} key='zoom' variant=\"outlined\">\r\n            {getButton(ControlCommands.LENS_ZOOM_FN, '---')}\r\n            {getButton(ControlCommands.LENS_ZOOM_NN, '--')}\r\n            {getButton(ControlCommands.LENS_ZOOM_SN, '-')}\r\n            {getButton(ControlCommands.LENS_ZOOM_SP, '+')}\r\n            {getButton(ControlCommands.LENS_ZOOM_NP, '++')}\r\n            {getButton(ControlCommands.LENS_ZOOM_FP, '+++')}\r\n            </ButtonGroup>\r\n            </Container>\r\n            </AccordionDetails>\r\n            </Accordion>\r\n\r\n\r\n        </Dialog>\r\n    );\r\n}","import { ButtonGroup, Button } from \"@material-ui/core\";\r\nimport { useState } from \"react\";\r\nimport { ControlKeys, ControlCommands, ButtonStyle } from \"../../util/constants\";\r\nimport Alert from \"../Alert\";\r\n\r\ninterface PowerProps{\r\n    handleCommand: (e: ControlKeys) => void\r\n}\r\nexport default function Power(props: PowerProps){\r\n    const {handleCommand} = props\r\n    const [openPowerOnAlert, setOpenPowerOnAlert]= useState(false)\r\n    const [openPowerOffAlert, setOpenPowerOffAlert]= useState(false)\r\n    return(\r\n        <>\r\n        <ButtonGroup key='shutters' color=\"primary\" variant=\"outlined\">\r\n        <Button  key='power off'  style={ButtonStyle}  onClick={(e) => setOpenPowerOffAlert(true)} >Power Off</Button>\r\n        <Button  key='power on' style={ButtonStyle}  onClick={(e) => setOpenPowerOnAlert(true)} >Power On</Button>\r\n    </ButtonGroup>\r\n    <Alert open={openPowerOffAlert} handleCommand={handleCommand} handleClose={()=>setOpenPowerOffAlert(false)}\r\n        header='Power Off' message='Are you sure?' command={ControlCommands.POWER_OFF}/>\r\n        <Alert open={openPowerOnAlert} handleCommand={handleCommand} handleClose={()=>setOpenPowerOnAlert(false)}\r\n        header='Power On' message='Are you sure?' command={ControlCommands.POWER_ON}/>\r\n        </>\r\n    )\r\n}","import { ButtonGroup, Button } from \"@material-ui/core\"\r\nimport { ControlKeys, ControlCommands, ButtonStyle } from \"../../util/constants\"\r\n\r\ninterface ShutterProps{\r\n    handleCommand: (e: ControlKeys) => void\r\n}\r\nexport default function Shutter(props: ShutterProps){\r\n    const {handleCommand} = props\r\n    return (\r\n        <ButtonGroup key='power' color=\"primary\" variant=\"outlined\">\r\n        <Button  key='shutter_on' style={ButtonStyle} onClick={(e) => handleCommand(ControlCommands.SHUTTER_CLOSED)} >Sutter Closed (i)</Button>\r\n        <Button  key='sutter_off' style={ButtonStyle}  onClick={(e) => handleCommand(ControlCommands.SHUTTER_OPEN)} >Shutter Open (o)</Button>\r\n        </ButtonGroup>\r\n    )\r\n}","import { Dialog, DialogTitle, Button, TextField, Container } from \"@material-ui/core\";\r\nimport { CSSProperties, useState, useEffect } from \"react\";\r\nimport { ControlKeys, ControlCommands, HandleCommand, PJ_OBJ } from '../util/constants'\r\ninterface Props {\r\n    open: boolean,\r\n    handleClose: () => void,\r\n    handleCommand: HandleCommand\r\n    pj: PJ_OBJ\r\n}\r\n\r\nexport default function ProjectorSetup(props: Props) {\r\n    const { open, handleClose, handleCommand, pj } = props\r\n    const [name, setName] = useState( '' )\r\n    const [ID, setID] = useState('')\r\n    const buttonStyle: CSSProperties = {\r\n        padding: '20px',\r\n        width: '100px',\r\n        margin: 'auto'\r\n       \r\n    }\r\n    const buttonGroupStyle: CSSProperties = {\r\n        justifyContent: 'center',\r\n        textAlign: 'center'\r\n        \r\n    }\r\n\r\n    useEffect(()=>{\r\n        if(pj && pj.name){\r\n            setName(pj.name)\r\n        }\r\n    },[pj])\r\n\r\n\r\n    const handleClick=(cmd: ControlKeys)=>{\r\n        switch (cmd){\r\n            case ControlCommands.PROJECTOR_NAME:\r\n                handleCommand(cmd, name)\r\n                break\r\n            case ControlCommands.PROJECTOR_ID:\r\n                handleCommand(cmd, ID)\r\n                break;\r\n        }\r\n       \r\n        handleClose()\r\n    }\r\n    \r\n    const getButton=(cmd: ControlKeys, text: string, popUp: boolean)=>{\r\n\r\n        return <Button style={buttonStyle} key={text} onClick={(e)=>handleClick(cmd)}>{text}</Button>\r\n    }\r\n    return (\r\n        <Dialog key='setup_dialog' onClose={handleClose} aria-labelledby=\"simple-dialog-title\" open={open}>\r\n            <DialogTitle style={buttonGroupStyle} key='menu_dialog_title' id=\"simple-dialog-title\">PJ Setup</DialogTitle>\r\n           \r\n        <Container key='name'>    \r\n            <TextField key='pj_name_input' label='PJ Name' value={name} onChange={(e)=>setName(e.target.value)}></TextField>\r\n            {getButton(ControlCommands.PROJECTOR_NAME, 'Store Name', true)}\r\n        </Container>    \r\n        <Container key='id'>\r\n            <TextField key='pj_id_input' label='PJ Input' value={ID} onChange={(e)=>setID(e.target.value)}></TextField>\r\n            {getButton(ControlCommands.PROJECTOR_ID, 'Store ID', true)}\r\n        </Container>\r\n\r\n        </Dialog>\r\n    );\r\n}","import { Button, Paper, ButtonGroup, } from \"@material-ui/core\";\r\nimport {useState} from 'react'\r\nimport { ButtonStyle, HandleCommand, PJs} from \"../util/constants\";\r\nimport BlendDialog from \"./BlendDialog\";\r\nimport MenuDialog from './MenuDialog'\r\nimport LensDialog from './LensDialog'\r\nimport Power from './CommandInterfaces/Power'\r\nimport Shutter from \"./CommandInterfaces/Shutter\";\r\nimport ProjectorSetupDialog from \"./ProjectorSetupDialog\";\r\nimport { useEffect } from \"react\";\r\n\r\ninterface command_props{\r\n    handleCommand: HandleCommand\r\n    active: number[]\r\n    pjs: PJs\r\n}\r\nexport default function CommandPad(props:command_props){\r\n    const {handleCommand, active, pjs } = props\r\n    const [menuOpen, setMenuOpen] = useState(false)\r\n    const [blendOpen, setBlendOpen] = useState(false)\r\n    const [lensOpen,setLensOpen] = useState(false)\r\n    const [pjSetupOpen,setPJSetupOpen] =useState(false)\r\n\r\n    useEffect(()=>{\r\n        if(active.length!==1 || !pjs[active[0]]){\r\n            setPJSetupOpen(false)\r\n        }\r\n    },[active, pjs])\r\n    \r\n    const getPJSetup=()=>{\r\n        if(active.length===1)\r\n            return (<Button key='pj_setup' variant=\"contained\"  style={ButtonStyle} onClick={((e)=>setPJSetupOpen(!pjSetupOpen))}>PJ Setup</Button>)\r\n        \r\n            return (<Button key='pj_setup' variant=\"contained\" disabled style={ButtonStyle} onClick={((e)=>setPJSetupOpen(!pjSetupOpen))}>PJ Setup</Button>)\r\n\r\n    }\r\n    const getPJ=()=>{\r\n        return pjs[active[0]]\r\n    }\r\n    return(\r\n       <>\r\n        <Paper  key='commandKeys' style={{width:'300px'}}>\r\n           <Shutter handleCommand={handleCommand}/>\r\n            <br></br>\r\n           <Power handleCommand={handleCommand}/>\r\n            <ButtonGroup color=\"primary\" variant=\"outlined\">\r\n                <Button color=\"primary\" key='menu' variant=\"contained\" style={ButtonStyle}  onClick={(e) => setMenuOpen(!menuOpen)} >Menu</Button>\r\n                <Button color=\"primary\" key='blend' variant=\"contained\" style={ButtonStyle}  onClick={(e) => setBlendOpen(!blendOpen)} >Blend</Button>\r\n            </ButtonGroup>\r\n            <ButtonGroup color='primary' variant='outlined'>\r\n                <Button key='lens' variant=\"contained\" style={ButtonStyle} onClick={((e)=>setLensOpen(!lensOpen))}>Lens</Button>\r\n                {getPJSetup()}\r\n            </ButtonGroup>\r\n            \r\n            <MenuDialog open={menuOpen} handleClose={()=>setMenuOpen(false)} handleCommand={handleCommand}/>\r\n            <BlendDialog open={blendOpen} handleClose={()=>setBlendOpen(false)} handleCommand={handleCommand}/>\r\n            <LensDialog open={lensOpen} handleClose={()=>setLensOpen(false)} handleCommand={handleCommand} />\r\n            <ProjectorSetupDialog open={pjSetupOpen} handleClose={()=>setPJSetupOpen(false)} pj={getPJ()} handleCommand={handleCommand} />\r\n        </Paper>\r\n       \r\n        </>\r\n    )\r\n}\r\n","import * as C from './constants'\r\n\r\ntype cmdType = number | keyof typeof C.commands\r\nexport function processCMD(cmdLine: string, selected: number[], world: number[]) {\r\n    let cmds = cmdLine.split(' ')\r\n    let cmdArray: cmdType[] = []\r\n   // console.log('Processing ', cmds)\r\n    for (let i = 0; i < cmds.length; i++) {\r\n      //  console.log('Now Running', cmds[i])\r\n        if (cmds[i] === C.commands.THRU) {\r\n            cmdArray.push(C.commands.THRU)\r\n        } else {\r\n            \r\n            getCommandArray(cmds[i]).forEach(cmd => {\r\n                cmdArray.push(cmd)\r\n            })\r\n            \r\n           //cmdArray.concat(getCommandArray(cmds[i]))\r\n        }\r\n    }\r\n   // console.log('Parsing Complete', cmdArray)\r\n    selected = handleSelected( handleThru(cmdArray),selected)\r\n    selected = selected.filter(s=> world.includes(s))\r\n    \r\n //  console.log('Processing Complete', selected)\r\n    return selected\r\n}\r\n\r\nfunction handleThru(cmds: cmdType[]) {\r\n    let cmdArray: number[] = []\r\n    if (cmds.indexOf(C.commands.THRU) === 1 && cmds.length > 2) {\r\n        let negative = 1\r\n        let start = cmds[0] as number\r\n        if (start < 0) {\r\n            start = start * -1\r\n            negative = -1\r\n        }\r\n        let end = cmds[2] as number\r\n        if(end<start){\r\n          //  console.log('Running Thru Backwards',end, 'thru',start)\r\n            for (let i = start; i >= end; i--) {\r\n                console.log(i*negative)\r\n                cmdArray.push(i*negative)\r\n        }\r\n        } else{\r\n            for (let i = start; i <= end; i++) {\r\n                cmdArray.push(i*negative)\r\n        }\r\n        }\r\n        \r\n        if(cmds.length>2)\r\n            cmdArray= cmdArray.concat(handleThru(cmds.slice(3)))\r\n    } else{\r\n        return cmds.map(c=> {return parseInt(c.toString())})\r\n    }\r\n    return cmdArray\r\n}\r\n\r\nfunction handleSelected(cmds: number[], selected: number[]) {\r\n    let newSelected = selected\r\n    for (let i = 0; i < cmds.length; i++) {\r\n        let cmd = cmds[i]\r\n        if (cmd < 0 && newSelected.includes(cmd * -1)) { //Remove\r\n            //console.log('Removing ',s[i]*-1)\r\n            newSelected = newSelected.filter((n) => n !== (cmd * -1))\r\n        } else if (!newSelected.includes(cmd) && cmd > 0) {\r\n            newSelected.push(cmd)\r\n        }\r\n    }\r\n   \r\n    return newSelected\r\n}\r\n\r\nfunction getCommandArray(cmd: string) {\r\n    if (cmd.length === 0) {\r\n        console.groupEnd()\r\n        return []\r\n    }\r\n   // console.group('Processing ', cmd)\r\n\r\n    let array: number[] = []\r\n    if (cmd.slice(0, 5) === C.commands.THRU) {\r\n   //     console.log('Thru')\r\n        //return [C.commands.THRU]\r\n    } else {\r\n        let num = findInt(cmd)\r\n        array.push(num)\r\n        // console.table(array)\r\n      //  console.log(num, cmd.indexOf(num + ''))\r\n        let reduced = cmd.slice(cmd.indexOf(num + \"\") + ((num + '').length))\r\n        //console.log('Reduced',reduced)\r\n\r\n        let reset = getCommandArray(reduced)\r\n        for (let i = 0; i < reset.length; i++) {\r\n            array.push(reset[i])\r\n        }\r\n\r\n        //console.table(array)\r\n\r\n    }\r\n    //array.push(getCommandArray(c.))\r\n    return array\r\n}\r\nfunction findInt(cmd: string) {\r\n    // console.log('Finding int', c)\r\n    let i = 0\r\n    let negative = 1\r\n    if (cmd[0] === '-') {\r\n        negative = -1\r\n        cmd = cmd.slice(1)\r\n    }\r\n\r\n    // console.log('C ',c)\r\n    while (i < cmd.length) {\r\n        if (parseInt(cmd[i]) >= 0) {\r\n            i++\r\n        }\r\n        else {\r\n            i = cmd.length\r\n        }\r\n    }\r\n    // console.log('Parsed Int' ,parseInt(c.slice(0,i))*negative)\r\n    return (parseInt(cmd.slice(0, i)) * negative)\r\n}\r\n","import { TableCell, TableRow, Button } from \"@material-ui/core\"\r\nimport BorderColorIcon from '@material-ui/icons/BorderColor';\r\nimport { useCallback } from \"react\";\r\nimport { CSSProperties, useEffect, useState } from \"react\"\r\nimport { PJ_OBJ } from \"../util/constants\"\r\ninterface PJ_Props {\r\n    pj: PJ_OBJ,\r\n    selected: boolean,\r\n    active: boolean,\r\n    darkMode: boolean,\r\n    handleTableSelect: (id: number) => void\r\n}\r\n\r\n\r\nfunction PJ(props: PJ_Props) {\r\n    const { pj, selected, active, darkMode, handleTableSelect } = props\r\n    const [time, setTime] = useState('0')\r\n    //const [lastSeen, setLastSeen] = useState(0)\r\n\r\n     const getTime = () => {\r\n        if (pj.lastSeen < 0) {\r\n            setTime('N/A')\r\n            return \r\n        }\r\n        let t = (Date.now()- pj.lastSeen) / 1000\r\n    \r\n        t = Math.floor(t)\r\n        if (t > 59) {\r\n            setTime(Math.floor(t / 60) + 'm')\r\n            return\r\n        }\r\n            setTime(t + 's')\r\n        \r\n    }\r\n  \r\n    useEffect(() => {\r\n        \r\n      \r\n        \r\n        let i =setInterval(getTime,1000)\r\n        \r\n        return function cleanup(){\r\n            clearInterval(i)\r\n        }\r\n       \r\n        \r\n    })\r\n\r\n   \r\n    const style = () => {\r\n     //   console.log('Selected',selected, 'Active',active)\r\n        let s: CSSProperties = {\r\n            color: 'Gainsboro',\r\n            textAlign: 'center'\r\n\r\n        }\r\n        if (active) {\r\n            s.color = 'black'\r\n            s.background = 'lightgray'\r\n\r\n        } else if (selected) {\r\n            s.color = 'black'\r\n            \r\n        }\r\n        return s\r\n    }\r\n    const bStyle = (b = 'On', goodWords = ['On'],):CSSProperties => {\r\n        return  {\r\n            textAlign: 'center',\r\n            margin:'auto',\r\n            color: goodWords.includes(b)? darkMode?'white' :'black' : 'red'\r\n            \r\n        }\r\n        \r\n    }\r\n    \r\n\r\n    const blendRegion =()=>{\r\n        let color = ''\r\n        let regions = [pj.edgeBlendingUpper, pj.edgeBlendingRight, pj.edgeBlendingLower, pj.edgeBlendingLeft]\r\n        for(let i=0; i < regions.length; i++){\r\n            switch(regions[i]){\r\n                case 'On':\r\n                    color+= ' green'\r\n                    break;\r\n                case 'Off':\r\n                    color+= ' black'\r\n                    break\r\n                case 'Unknown':\r\n                    color+= ' yellow'\r\n                    break\r\n                default:\r\n                    color+=' red'\r\n            }\r\n        }\r\n      \r\n        return (\r\n            <p style={{ padding: 10,  margin:'auto', textAlign: 'center', borderStyle: 'solid', borderColor: color}}key={pj.id+'brbox'}> {pj.edgeBlending}\r\n             <BorderColorIcon  style={{fontSize:'15', marginLeft: '5', marginTop: 'auto', color:pj.edgeBlendingMarker==='On'?'red':'gray'}} /></p>\r\n        )\r\n    }\r\n    const getID=()=>{\r\n        return <Button> {pj.name==='Unknown'?pj.id:pj.name+'('+pj.id+')'}</Button>\r\n    }\r\n\r\n    return (\r\n        <TableRow key={pj.id}>\r\n            <TableCell onClick={e => handleTableSelect(pj.id)} style={style()} key={pj.id + 'id'}>{getID()}</TableCell>\r\n            <TableCell style={bStyle(pj.shutter, ['Open'])} key={pj.id + 'shutter'}>{pj.shutter}</TableCell>\r\n            <TableCell style={bStyle(pj.edgeBlending, ['On', 'User'])} key={pj.id+\"blend\"}> {blendRegion()} </TableCell>\r\n            <TableCell style={bStyle(pj.edgeBlendingMarker, ['Off'])}key={pj.id+'blendmarker'}>{pj.edgeBlendingMarker}</TableCell>\r\n            <TableCell style={bStyle(pj.testPattren, ['Off'])}key={pj.id+'test'}>{pj.testPattren}</TableCell>\r\n            <TableCell style={bStyle(pj.lampStatus, ['Lamp On'])} key={pj.id+'lamp'}>{pj.lampStatus}</TableCell>\r\n            <TableCell style={bStyle(pj.hdmiResolution,['1920x1200p'])} key={pj.id+'hdmi'}>{pj.hdmiResolution}/{pj.hdmiSignalLevel}/{pj.hdmiVerticalFrequency}</TableCell>\r\n            <TableCell style={bStyle(pj.inputSignalName_Main,['1920x1200/60RB'])} key={pj.id+'signal_name_main'}>{pj.inputSignalName_Main}</TableCell>\r\n            <TableCell style={bStyle()} key={pj.id + 'last'}>{time}</TableCell>\r\n        </TableRow>\r\n\r\n    )\r\n}\r\n\r\nexport default PJ\r\n\r\n//<Button className='PJ' style={{padding:'5px', margin:'5px'}} variant=\"outlined\" color=\"primary\" key={pj} >{pj}</Button>\r\n/*\r\n<TableCell style={style()}key={pj.id+'id'}>{pj.id}</TableCell>\r\n<TableCell key={pj.id+'shutter'}>{pj.shutter+''}</TableCell>\r\n<TableCell key={pj.id+'power'}>{pj.power+''}</TableCell>\r\n<TableCell key={pj.id+'online'}>{pj.online+''}</TableCell>\r\n<TableCell key={pj.id+'last'}>{(Date.now()-pj.lastSeen)/1000}</TableCell>\r\n*/","import { Button,  makeStyles, Typography, } from \"@material-ui/core\";\r\nimport { CSSProperties } from \"react\";\r\n\r\nimport { PJ_OBJ } from \"../util/constants\";\r\n\r\n\r\n\r\ninterface PJCardProps{\r\n    pj_tupple: {pj:PJ_OBJ,selected: boolean, active: boolean}\r\n    handlePJCard: (pjID: number) => void;\r\n}\r\nexport default function PJCard(props:PJCardProps){\r\n    const {pj_tupple, handlePJCard} = props\r\n    let pj = pj_tupple.pj\r\n\r\n    //const classes = useStyles();\r\n\r\n    const cardStyle: CSSProperties={\r\n      \r\n        background: pj_tupple.active? 'gray': 'white',\r\n        border: pj_tupple.selected? 'thick solid cornflowerBlue' : 0,\r\n        color: pj_tupple.active || pj_tupple.selected? 'lightwhite': 'black',   \r\n        width: 80,\r\n        height: 50\r\n    }\r\n    \r\n    return(\r\n       \r\n       <Button variant='contained'  style={cardStyle} onClick={()=>handlePJCard(pj.id)}>{pj.id}\r\n       </Button>\r\n       \r\n       \r\n    )\r\n}\r\n/*\r\n <Card className={classes.root} variant=\"outlined\" style={cardStyle} key={pj.id+'card'}>\r\n            <CardContent>\r\n                <Typography className={classes.title} color={'primary'}>\r\n                    {pj.name? pj.name: ''}\r\n                </Typography>\r\n                <Typography  className={classes.title} color={'primary'}>\r\n                ({pj.id})\r\n                </Typography>\r\n            </CardContent>\r\n        </Card>\r\n        */","import { TableCell, TableRow } from \"@material-ui/core\";\r\nimport { PJ_OBJ } from \"../util/constants\";\r\nimport BorderColorIcon from '@material-ui/icons/BorderColor';\r\n\r\ninterface tableProps{\r\n    pj_tupple:  {pj:PJ_OBJ,selected: boolean, active: boolean}\r\n}\r\n\r\nexport default function ProgrammerTable(props: tableProps){\r\n    const {pj_tupple} = props\r\n    let pj = pj_tupple.pj\r\n\r\n    const blendRegion =()=>{\r\n        let color = ''\r\n        let regions = [pj.edgeBlendingUpper, pj.edgeBlendingRight, pj.edgeBlendingLower, pj.edgeBlendingLeft]\r\n        for(let i=0; i < regions.length; i++){\r\n            switch(regions[i]){\r\n                case 'On':\r\n                    color+= ' green'\r\n                    break;\r\n                case 'Off':\r\n                    color+= ' black'\r\n                    break\r\n                case 'Unknown':\r\n                    color+= ' yellow'\r\n                    break\r\n                default:\r\n                    color+=' red'\r\n            }\r\n        }\r\n      \r\n        return (\r\n            <p key={pj.id+'bp'} style={{ padding: 10,  margin:'auto', textAlign: 'center', borderStyle: 'solid', borderColor: color}}> {pj.edgeBlending}\r\n             <BorderColorIcon key={pj.id+'blend'} style={{fontSize:'15', marginLeft: '5', marginTop: 'auto', color:pj.edgeBlendingMarker==='On'?'red':'gray'}} /></p>\r\n        )\r\n    }\r\n    return (\r\n        <TableRow key={pj.id+'row'}>\r\n            <TableCell key={pj.id+'name'} component='th' scope='row'>\r\n                {pj.name}\r\n            </TableCell>\r\n            <TableCell key={pj.id+'id'}>{pj.id}</TableCell>\r\n            <TableCell key={pj.id+'shutter'}>{pj.shutter}</TableCell>\r\n            <TableCell key={pj.id+'blendregion'}>{blendRegion()}</TableCell>\r\n            <TableCell key={pj.id+'markers'}>{pj.edgeBlendingMarker}</TableCell>\r\n            <TableCell key={pj.id+'test'}>{pj.testPattren}</TableCell>\r\n            <TableCell key={pj.id+'lamp'}>{pj.lampStatus}</TableCell>\r\n            <TableCell key={pj.id+'sig'}>{pj.hdmiResolution}/{pj.hdmiSignalLevel}/{pj.hdmiVerticalFrequency}</TableCell>\r\n            <TableCell key={pj.id+'osd'}>{pj.osdPostion}</TableCell>\r\n\r\n        </TableRow>\r\n    )\r\n}","import PJ from \"./PJ\"\r\nimport * as C from '../util/constants'\r\nimport { Paper, makeStyles, Table, TableBody, TableCell, TableContainer, TableHead, TableRow, Container, Grid, useMediaQuery, GridSize } from '@material-ui/core'\r\nimport { prefres } from \"../prefrences\"\r\nimport { CSSProperties, useMemo, useState } from \"react\"\r\nimport PJCard from \"./PJCard\"\r\nimport ProgrammerTable from \"./ProgrammerTable\"\r\n\r\ninterface Programmer_Props {\r\n    selected: number[],\r\n    active: number[],\r\n    world: number[],\r\n    prefs: prefres,\r\n    status: C.RIG_STATUS,\r\n    pjs: Record<number, C.PJ_OBJ>,\r\n    handleTableSelect: (id: number) => void\r\n}\r\nconst useStyles = makeStyles({\r\n    root: {\r\n        flexGrow: 1,\r\n    },\r\n    paper: {\r\n        height: 140,\r\n        width: 100,\r\n    },\r\n    table: {\r\n        minWidth: 300,\r\n        maxHeight: 400\r\n    },\r\n    \r\n})\r\nexport default function Programmer(props: Programmer_Props) {\r\n    const { active, world, selected, prefs, pjs, status, handleTableSelect } = props\r\n    const classes = useStyles()\r\n\r\n\r\n    // const pj = useMemo(()=>getPJ(pjID),[pjID])\r\n\r\n    const _getPJs = useMemo(() => {\r\n        world.sort()\r\n        // console.log('Programmer Making PJs')\r\n        return world.map(s => {\r\n\r\n            let pj = pjs[s] ? pjs[s] : {\r\n                id: s,\r\n                online: 'false',\r\n                shutter: 'Unknown',\r\n                power: 'Unknown',\r\n                lastSeen: -1,\r\n                error: 'NOT SEEN',\r\n                lampStatus: 'Unknown',\r\n                edgeBlending: 'Unknown',\r\n                edgeBlendingMarker: 'Unknown',\r\n                testPattren: 'Unknown',\r\n                backColor: 'Unknown',\r\n                edgeBlendingLeft: 'Unknown',\r\n                edgeBlendingLower: 'Unknown',\r\n                edgeBlendingRight: 'Unknown',\r\n                edgeBlendingUpper: 'Unknown',\r\n                hdmiResolution: 'Unknown',\r\n                hdmiSignalLevel: 'Unknown',\r\n                hdmiVerticalFrequency: 'Unknown',\r\n                osdPostion: 'Unknown',\r\n                inputSignalName_Main: 'Unknown',\r\n                name: 'Unknown'\r\n            }\r\n            if ((prefs.showOnlySelected && selected.includes(s)) || !prefs.showOnlySelected) {\r\n                return <PJ key={'pj id_' + pj.id} pj={pj} handleTableSelect={handleTableSelect} selected={selected.includes(s)} darkMode={prefs.darkMode} active={active.includes(s)} />\r\n            }\r\n            return <></>\r\n\r\n        })\r\n    }, [world, active, selected, handleTableSelect, prefs.darkMode, prefs.showOnlySelected, pjs])\r\n    const getPJs = useMemo(() => {\r\n        console.groupCollapsed('Recomputing PJ List')\r\n        console.log('Active', active)\r\n        console.log('Selected', selected)\r\n        console.groupEnd();\r\n        world.sort()\r\n        let pjList: { pj: C.PJ_OBJ, selected: boolean, active: boolean }[] = []\r\n        world.forEach(s => {\r\n            let pj = pjs[s] ? pjs[s] :\r\n                {\r\n                    id: s,\r\n                    online: 'false',\r\n                    shutter: 'Unknown',\r\n                    power: 'Unknown',\r\n                    lastSeen: -1,\r\n                    error: 'NOT SEEN',\r\n                    lampStatus: 'Unknown',\r\n                    edgeBlending: 'Unknown',\r\n                    edgeBlendingMarker: 'Unknown',\r\n                    testPattren: 'Unknown',\r\n                    backColor: 'Unknown',\r\n                    edgeBlendingLeft: 'Unknown',\r\n                    edgeBlendingLower: 'Unknown',\r\n                    edgeBlendingRight: 'Unknown',\r\n                    edgeBlendingUpper: 'Unknown',\r\n                    hdmiResolution: 'Unknown',\r\n                    hdmiSignalLevel: 'Unknown',\r\n                    hdmiVerticalFrequency: 'Unknown',\r\n                    osdPostion: 'Unknown',\r\n                    inputSignalName_Main: 'Unknown',\r\n                    name: 'Unknown'\r\n                }\r\n            if ((prefs.showOnlySelected && selected.includes(s)) || !prefs.showOnlySelected) {\r\n                pjList.push({ pj, selected: selected.includes(s), active: active.includes(s) })\r\n            }\r\n\r\n        })\r\n        return pjList\r\n\r\n    }, [world, pjs, prefs, selected, active])\r\n\r\n    \r\n    const [spacing, setSpacing] = useState( useMediaQuery('(min-width:600px)')? 2 : 0)\r\n    \r\n    const getCards = () => {\r\n       \r\n        return getPJs.map(pj_tupple => {\r\n            return <Grid key={'g_' + pj_tupple.pj.id} item xs={spacing as GridSize} style={{margin: 'auto'}}>\r\n                <PJCard handlePJCard={handleTableSelect} pj_tupple={pj_tupple} />\r\n            </Grid>\r\n        })\r\n    }\r\n\r\n    const getRows = () => {\r\n        return getPJs.map(pj_tupple => {\r\n\r\n            return <ProgrammerTable key={pj_tupple.pj.id+'card'} pj_tupple={pj_tupple} />\r\n        })\r\n    }\r\n    const getStyle = (good = true) => {\r\n        let s: CSSProperties = {\r\n            width: '50',\r\n            textAlign: 'center'\r\n        }\r\n        if (!good)\r\n            s.backgroundColor = prefs.darkMode ? 'red' : 'red'\r\n\r\n        return s\r\n    }\r\n    return (\r\n        <>  {prefs.programmerTableView?\r\n            <TableContainer key='pjtablecon' component={Paper}>\r\n                <Table key='pjtablet' className={classes.table} size='small'>\r\n                    <TableHead key='pjtablehead'>\r\n                        <TableRow key='pjtableheadrow'>\r\n                            <TableCell key='pjtable_name'>Name</TableCell>\r\n                            <TableCell key='pjtable_id'>ID</TableCell>\r\n                            <TableCell key='pjtable_shutter'>Shutter</TableCell>\r\n                            <TableCell key='pjtable_blend'>Blend</TableCell>\r\n                            <TableCell key='pjtable_mark'>Blend Marker</TableCell>\r\n                            <TableCell key='pjtable_test'>Test Pattren</TableCell>\r\n                            <TableCell key='pjtable_lamp'>Lamp</TableCell>\r\n                            <TableCell key='pjtable_hdmi'>HDMI</TableCell>\r\n                            <TableCell key='pjtable_osd'>OSD</TableCell>\r\n                        </TableRow>\r\n                    </TableHead>\r\n                    <TableBody>\r\n                        {getRows()}\r\n                    </TableBody>\r\n                </Table>\r\n            </TableContainer>\r\n        :\r\n\r\n            <Grid key='programmer' className={classes.root} spacing={2} container>\r\n                {getCards()}\r\n            </Grid>\r\n}\r\n        </>\r\n    )\r\n}\r\n/**\r\n<TableContainer key='p-tc' component={Paper}>\r\n<Table key='p-t' className={classes.table}>\r\n    <TableHead key='p-th'>\r\n        <TableRow key='p-r'>\r\n            <TableCell style={getStyle()} key='p_pj'> PJ </TableCell>\r\n            <TableCell style={getStyle(status.shutter)} key='p_s'> Shutter</TableCell>\r\n            <TableCell style={getStyle(status.blend)} key='p_b'> Blend</TableCell>\r\n            <TableCell style={getStyle(status.blendMarker)} key='p_bm'> Blend Marker</TableCell>\r\n            <TableCell style={getStyle(status.testPattren)} key='p_test'> Test Pattern</TableCell>\r\n            <TableCell style={getStyle(status.lampStatus)} key='p_lamp'> Lamp Status</TableCell>\r\n            <TableCell style={getStyle(status.hdmiInput)} key='p_hdmi'> HDMI Input</TableCell>\r\n            <TableCell style={getStyle(status.signalName)} key='p_signal name'> Signal Name</TableCell>\r\n            <TableCell style={getStyle()} key='p_ls'> Last Seen</TableCell>\r\n\r\n        </TableRow>\r\n    </TableHead>\r\n    <TableBody>\r\n        {getPJs}\r\n    </TableBody>\r\n</Table>\r\n</TableContainer>\r\n*/","import * as C from './constants'\r\n//const puppeteer = require('puppeteer');\r\n\r\nasync function goFetch(query: string){\r\n    let fetchString = C.pjServer+'api/'+query\r\n   // console.log(fetchString)\r\n    try{\r\n    let res = await fetch(fetchString,{\r\n       mode: 'no-cors'\r\n    })\r\n    \r\n   // console.table(res.body)\r\n    if(res.ok){\r\n      //  console.log(await res.text())\r\n        //return await res.json()\r\n        return await res.json()\r\n    }\r\n}catch(e){\r\n    console.log(e)\r\n}\r\n    \r\n    \r\n}\r\n\r\nexport async function getPJ(target:number) {\r\n    let pj = await goFetch('status/?pj='+target)\r\n    if(pj){\r\n        return pj as unknown as C.PJ_OBJ\r\n    }\r\n    return undefined\r\n    \r\n}\r\n\r\nexport async function getPJs(){\r\n    let pjs = await goFetch('status/?pj=all')\r\n    if(pjs){\r\n        return pjs as unknown as Record<number,C.PJ_OBJ>\r\n    }\r\n}\r\nexport async function getRigStatus(){\r\n   // console.log('Getting Rig Status')\r\n    let status = await goFetch('status/?rigstatus=all')\r\n    if(status){\r\n        return status as unknown as C.RIG_STATUS\r\n    }\r\n}\r\n/*\r\nexport async function setConfig(item: C.ConfigHeaders, value: string){\r\n    await goFetch('config/?'+item+\"=\"+value)\r\n}*/\r\n\r\nexport async function setConfig(query: string){\r\n    await goFetch('config/?'+query)\r\n}\r\nexport async function setter(target: number, command:  C.ControlKeys) {\r\n    console.log('Setting ',target,command)\r\n    await goFetch('set/?pj='+target+'&command='+command)\r\n}\r\nexport async function  powerOff(target: number) {\r\n     return await setter(target, C.ControlCommands.POWER_OFF)\r\n}\r\n\r\nexport async function powerOn(target: number) {\r\n    return await setter(target,C.ControlCommands.POWER_ON)\r\n}\r\n\r\nexport async function shutterOn(target:number){\r\n    console.log('Sutter On')\r\n    return await setter(target,C.ControlCommands.SHUTTER_OPEN)\r\n}\r\nexport async function shutterOff(target:number) {\r\n    return await setter(target,C.ControlCommands.SHUTTER_CLOSED)\r\n}\r\n\r\nexport async function menu(target:number) {\r\n    \r\n}\r\n","import { Dialog, DialogTitle , TextField, Select, MenuItem, InputLabel, Button} from \"@material-ui/core\";\r\nimport React, { CSSProperties, useState } from \"react\";\r\nimport {PROJECTOR_MAKES, PROJECTOR_MAKE, Patch} from '../util/constants'\r\ninterface PatchAdd_Props{\r\n    open: boolean,\r\n    handleClose: ()=>void,\r\n    addPJs: (amount: number, startID: number, baseIP: string, port: number, auth: string, make: PROJECTOR_MAKE)=>void,\r\n    currentPatch: Patch\r\n}\r\n\r\nconst style: CSSProperties={\r\n    width: '90%',margin: 'auto', marginBottom: '5px'\r\n    \r\n}\r\nexport default function PatchAddDialog(props: PatchAdd_Props){\r\n    const {open,handleClose, addPJs, currentPatch}= props\r\n\r\n    const getMaxID=()=>{\r\n        let i = -1\r\n        Object.values(currentPatch).forEach(pj=>{\r\n            if(pj.id> i)\r\n                i = pj.id\r\n        })\r\n        if(i===-1)\r\n            return 100\r\n        \r\n            return i\r\n    }\r\n\r\n    const [make, setMake]= useState<PROJECTOR_MAKE>(PROJECTOR_MAKES.PANASONIC)\r\n    const [Amount, setAmount] = useState({value:1,err:''})\r\n    const [StartID, setID] = useState({value:getMaxID()+1,err:''})\r\n    const [BaseIP, setBaseIP]= useState({value:'192.168.10.',err:''})\r\n    const [UserName, setUserName] = useState('admin1')\r\n    const [Pass, setPass] = useState('')\r\n    const [Port, setPort] = useState({value:1024, err:''})\r\n    //const [hasErrors, setHasErrors]= useState(false)\r\n\r\n   \r\n    const getListItems=()=>{\r\n        return Object.values(PROJECTOR_MAKES).map(key=>{\r\n            //console.log(key)\r\n            return <MenuItem key={key} value={key}>{key}</MenuItem>\r\n        })\r\n    }\r\n    const handleSubmit=()=>{\r\n        let auth = ''\r\n        if(make === PROJECTOR_MAKES.PANASONIC){\r\n            auth = UserName+\":\"+Pass\r\n        }\r\n        addPJs(Amount.value,StartID.value,BaseIP.value,Port.value, auth,make)\r\n    }\r\n    const handleMake=(e: React.ChangeEvent<{value:unknown}>)=>{\r\n        setMake(e.target.value as PROJECTOR_MAKE)\r\n    }\r\n    const getBaseStart=()=>{\r\n        return parseInt(BaseIP.value.split('.')[3])\r\n    }\r\n    const checkOverlap=(startID: number, amount: number)=>{\r\n        for(let i = startID; i<amount+startID; i++){\r\n            let t = false\r\n            Object.values(currentPatch).forEach(pj=>{\r\n                if(pj.id === i)\r\n                    t = true\r\n            })\r\n            if(t)\r\n                return true\r\n        }\r\n        return false\r\n    }\r\n    const handleAmount=(e: React.ChangeEvent<HTMLTextAreaElement | HTMLInputElement>)=>{\r\n        let value = parseInt(e.target.value)\r\n        let err= ''\r\n        if(value<1 || isNaN(value)){\r\n            err='Invalid Number'\r\n        } else if(checkOverlap(StartID.value, value)){\r\n            err='Will Overlap Other IDs'\r\n        }\r\n\r\n        setAmount({value,err})\r\n    }\r\n    \r\n    const handleID=(e: React.ChangeEvent<HTMLTextAreaElement | HTMLInputElement>)=>{\r\n        let value = parseInt(e.target.value)\r\n        let err= ''\r\n        if(value<1 || isNaN(value)){\r\n            err='Invalid Number'\r\n        } else if(getBaseStart()+Amount.value >254){\r\n            err='Will Land Outside Base IP Range'\r\n        } else if(checkOverlap(value, Amount.value)){\r\n            err='Will Overlap Other IDs'\r\n        }\r\n        setID({value,err})\r\n    }\r\n    const handlePort=(e: React.ChangeEvent<HTMLTextAreaElement | HTMLInputElement>)=>{\r\n        let value = parseInt(e.target.value)\r\n        let err= ''\r\n        if(value<1 || isNaN(value)){\r\n            err='Invalid Number'\r\n        }\r\n        setPort({value,err})\r\n    }\r\n    const handleBaseIP=(value: string)=>{\r\n        \r\n        let err= ''\r\n        let s = value.split('.')\r\n        if(s.length===4){\r\n            for(let i =0; i<4;i++){\r\n                if(parseInt(s[i])<0 || parseInt(s[i])>(254-Amount.value)){\r\n                    err ='Invalid Number Range: '+s[i]\r\n                }\r\n            }\r\n        } else{\r\n            err= 'Invalid Number of .'\r\n        }\r\n        console.log(value)\r\n        \r\n        setBaseIP({value,err})\r\n    }\r\n\r\n    const handlePass=(value: string)=>{\r\n        setPass(value)\r\n    }\r\n    const handleUser=(value:string)=>{\r\n        setUserName(value)\r\n    }\r\n    return( \r\n        <Dialog fullWidth={true} style={{padding: '10%'}} onClose={handleClose} aria-labelledby=\"simple-dialog-title\" open={open}>\r\n        <DialogTitle id=\"simple-dialog-title\">Add Projectors</DialogTitle>\r\n        <InputLabel style={style} id=\"pjMake\">Model</InputLabel>\r\n        <Select style={style} id='pjMake' onChange={handleMake} value={make}>\r\n        {getListItems()}\r\n        </Select>\r\n        <br></br>\r\n        <TextField style={style} error={Amount.err? true: false} variant=\"filled\" type={'number'}label={'Amount'} value={Amount.value} onChange={handleAmount} helperText={Amount.err}> </TextField>\r\n        <br></br>\r\n        <TextField style={style} error={StartID.err? true: false} value={StartID.value} helperText={StartID.err} variant=\"filled\" type={'number'} label={'StartID'} onChange={handleID} > </TextField>\r\n        <br></br>\r\n        <TextField style={style} error={BaseIP.err? true: false} value={BaseIP.value} helperText={BaseIP.err} variant=\"filled\" type={'text'}label={'BaseIP'} onChange={(e)=>handleBaseIP(e.target.value)} > </TextField>\r\n        <br></br>\r\n        <TextField style={style} error={Port.err? true: false} value={Port.value} helperText={Port.err} variant=\"filled\" type={'number'}label={'Port'} onChange={handlePort} > </TextField>\r\n        <br></br>\r\n        <TextField style={style}  value={UserName}  variant=\"filled\" label={'Username'} type={'text'} onChange={(e)=>handleUser(e.target.value)}> </TextField>\r\n        <br></br>\r\n        <TextField style={style}  value={Pass}  variant=\"filled\" label={'Password'}type={'text'} onChange={(e)=>handlePass(e.target.value)}> </TextField>\r\n\r\n        <Button style={{width:'20%', margin: 'auto', marginBottom:'2%'}} disabled={Amount.err || BaseIP.err || StartID.err? true: false} variant=\"contained\" color=\"primary\" onClick={handleSubmit}>Submit</Button>\r\n      </Dialog>\r\n    )\r\n}","import * as C from \"../util/constants\";\r\nimport { DataGrid } from '@material-ui/data-grid';\r\nimport { Button, Paper, makeStyles, ButtonGroup } from '@material-ui/core'\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport { useState } from \"react\";\r\nimport { v4 } from 'uuid'\r\nimport Alert from './Alert'\r\nimport PatchAddDialog from './PatchAddDialog'\r\n\r\ninterface Patch_props {\r\n  patch: C.Patch\r\n  setPatch?: (p: C.Patch) => void\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  fab: {\r\n    position: 'absolute',\r\n    bottom: theme.spacing(2),\r\n    right: theme.spacing(2),\r\n  },\r\n\r\n}));\r\nconst columns = [\r\n  { field: 'uuid', headerName: 'uuid', width: 100, hide: true },\r\n  { field: 'id', headerName: 'ID', width: 90 },\r\n  { field: 'ip_address', headerName: 'IP Address', width: 170 },\r\n  { field: 'port', headerName: 'Port', width: 130 },\r\n  { field: 'auth', headerName: 'Auth', width: 130 },\r\n  { field: 'make', headerName: 'Make', width: 130 },\r\n\r\n];\r\n\r\nexport default function Patch(props: Patch_props) {\r\n  const { patch, setPatch } = props\r\n  const [addWindowOpen, setAddWindowOpen] = useState(false)\r\n  const [editWindowOpen, setEditWindowOpen] = useState(false)\r\n  const [selected, setSelected] = useState<number[]>([])\r\n  const [deleteWindowOpen, setDeleteWindowOpen] = useState(false)\r\n  const classes = useStyles()\r\n  let newPJs: C.Patch = {}\r\n\r\n  const addPJs = (amount: number, startID: number, baseIP: string, port: number, auth: string, make: C.PROJECTOR_MAKE) => {\r\n    setAddWindowOpen(false)\r\n    console.log('Got PJs to make!')\r\n    for (let id = startID; id < amount + startID; id++) {\r\n      let ip_address = baseIP + id\r\n      //console.log('Patch', patch)\r\n      if (Object.values(patch).filter(pj => {\r\n        if (pj.id === id) {\r\n          console.log('Conflicting ID', id);\r\n          return true\r\n        }\r\n        if (pj.ip_address === ip_address) {\r\n          console.log('Conflicting IP', ip_address);\r\n          return true\r\n        }\r\n        return false\r\n      }\r\n      ).length > 0) {\r\n        console.log('Conflicting PJ')\r\n        newPJs[v4()] = { ip_address: '-', port, auth, make, id: 0 }\r\n      } else {\r\n        // console.log('new PJ!')\r\n        newPJs[v4()] = { ip_address, id, port, auth, make }\r\n      }\r\n    }\r\n    //console.log(newPJs)\r\n    let newPatch = Object.assign(patch, newPJs) as C.Patch\r\n    if (newPatch && setPatch) {\r\n      setPatch(newPatch)\r\n    }\r\n  }\r\n  /*\r\n  const getRows = () => {\r\n    return Object.entries(patch).map(e => {\r\n      let pj = e[1]\r\n      //@ts-ignore\r\n      pj.channel = pj.id\r\n      //@ts-ignore\r\n      pj.id = e[0]\r\n\r\n      return pj\r\n\r\n    })\r\n  }\r\n  */\r\n\r\n  const handleDelete = (c: C.ControlKeys) => {\r\n\r\n    let newPatch = Object.assign(patch) as C.Patch\r\n    Object.entries(newPatch).forEach(e => {\r\n      if (selected.includes(e[1].id)) {\r\n        delete newPatch[e[0]]\r\n        let newSelect = Object.assign(selected) as number[]\r\n        delete newSelect[e[1].id]\r\n        setSelected(newSelect)\r\n      }\r\n    })\r\n\r\n\r\n    //const i = Object.assign(newPatch)\r\n    if (newPatch && setPatch) {\r\n      //console.log('Deleting',Object.values(patch).length-Object.values(newPatch).length)\r\n      setPatch(newPatch)\r\n      setSelected([])\r\n    }\r\n\r\n  }\r\n  const getSelectedString = () => {\r\n    let s = ''\r\n    for (let i = 0; i < selected.length; i++) {\r\n      s += selected[i] + ' '\r\n      if (i % 9 === 0) {\r\n        s += '\\r'\r\n      }\r\n    }\r\n    return s\r\n  }\r\n\r\n\r\n\r\n  return (\r\n    <>\r\n      <Paper style={{ height: 700, width: '100%' }}>\r\n        {patch ?\r\n          <DataGrid rows={Object.values(patch)} columns={columns} checkboxSelection selectionModel={selected} onSelectionModelChange={(e) => setSelected(e.selectionModel as number[])} />\r\n          : <></>\r\n        }\r\n\r\n        <ButtonGroup color='primary' className={classes.fab} >\r\n          <Button aria-label=\"add\" onClick={(e) => setAddWindowOpen(true)}> <AddIcon /></Button>\r\n          <Button aria-label=\"edit\" disabled={selected.length < 1} onClick={(e) => setEditWindowOpen(true)}> <EditIcon /></Button>\r\n          <Button aria-label=\"edit\" disabled={selected.length < 1} onClick={(e) => setDeleteWindowOpen(true)}> <DeleteIcon /></Button>\r\n        </ButtonGroup>\r\n\r\n\r\n      </Paper>\r\n      <Alert open={deleteWindowOpen} handleCommand={handleDelete} handleClose={() => setDeleteWindowOpen(false)} command={C.ControlCommands.MENU} header='Delete Selected' message={'Are you srue you want to delete: \\r \\n' + getSelectedString()} ></Alert>\r\n      <PatchAddDialog open={addWindowOpen} handleClose={() => setAddWindowOpen(false)} addPJs={addPJs} currentPatch={patch} />\r\n    </>\r\n  )\r\n}","\r\nexport type update ={version:string,date:string, notes:string[]}\r\nexport type updates =update[]\r\nconst updateLog: updates=[\r\n    {version: '0.1.4.', date: '9/5/21', notes:[\r\n        'Added About'\r\n    ]},\r\n    {version: '0.1.4.1', date: '9/5/21', notes:[\r\n        'More About', 'Less Mess'\r\n    ]}\r\n]\r\n\r\nexport default updateLog","\r\nimport { Card, Dialog, Paper, Typography, makeStyles, CardContent, Theme, createStyles, AppBar } from '@material-ui/core';\r\nimport { Note } from '@material-ui/icons';\r\nimport updateLog from '../util/UpdateLog'\r\ninterface About_Props{\r\n    open: boolean\r\n    handleClose: ()=>void\r\n}\r\nconst useStyles = makeStyles((theme: Theme)=> createStyles({\r\n    root: {\r\n      minWidth: 275,\r\n      flexGrow: 1,\r\n    },\r\n    bullet: {\r\n      display: 'inline-block',\r\n      margin: '0 2px',\r\n      transform: 'scale(0.8)',\r\n    },\r\n    menuButton: {\r\n        marginRight: theme.spacing(2),\r\n    },\r\n    title: {\r\n      fontSize: 14,\r\n    },\r\n    pos: {\r\n      marginBottom: 12,\r\n    },\r\n  }));\r\nexport default function About(props: About_Props){\r\n    const {open,handleClose}=props;\r\n    const classes = useStyles();\r\n    const bull = <span className={classes.bullet}>•</span>;\r\n    const getNotes=(notes: string[])=>{\r\n        return notes.map(note=>{\r\n           return <Typography key={note} variant='body2'>\r\n                {bull}{note}\r\n            </Typography>\r\n        })\r\n    }\r\n    const getUpdates=()=>{\r\n        return updateLog.map(update=>{\r\n            return <Card className={classes.root} key={update.version}>\r\n                <CardContent>\r\n                    <Typography variant='h6' component='h2'>\r\n                        {update.version}\r\n                    </Typography>\r\n                    <Typography className={classes.pos}>\r\n                        {update.date}\r\n                    </Typography>\r\n                    {getNotes(update.notes)}\r\n               \r\n                </CardContent>\r\n                \r\n                </Card>\r\n        })\r\n    }\r\n    return(\r\n        <Dialog open={open} onClose={handleClose}>\r\n            <div className={classes.root}>\r\n                <AppBar position='static'>\r\n                <Typography variant='h4'>vanPJ</Typography>\r\n              <Typography className={classes.pos} >Logic.Lighting | MIT Licence</Typography>\r\n                    </AppBar>\r\n          <Paper style={{width: '50%'}}>  \r\n              \r\n        {getUpdates()}\r\n        </Paper>\r\n        </div>\r\n        </Dialog>\r\n    )\r\n}","import { Dialog, AppBar, Toolbar, Typography, IconButton, Button, Paper, Slide, Switch, TextField, FormControlLabel, makeStyles } from \"@material-ui/core\";\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport InfoIcon from '@material-ui/icons/Info';\r\nimport { useState, forwardRef, useEffect } from \"react\";\r\nimport * as C from \"../util/constants\";\r\nimport { setConfig } from \"../util/getter\";\r\nimport Patch from \"./Patch\";\r\nimport { SocketPatcher } from \"../util/SocketListener\";\r\nimport { Socket } from \"socket.io-client\";\r\nimport About from \"./About\";\r\n//import { socket } from \"../LoadPage\";\r\nconst useStyles = makeStyles((theme) => ({\r\n  appBar: {\r\n    position: 'relative',\r\n  },\r\n  title: {\r\n    marginLeft: theme.spacing(2),\r\n    flex: 1,\r\n  },\r\n  root: {\r\n    '& .MuiTextField-root': {\r\n      margin: theme.spacing(1),\r\n      width: '25ch',\r\n    },\r\n  },\r\n}));\r\n\r\nconst Transition = forwardRef(function Transition(props, ref) {\r\n  //@ts-ignore\r\n  return (<Slide direction=\"up\" ref={ref} {...props} />);\r\n});\r\n\r\ninterface ConfigDialog_Props {\r\n  open: boolean\r\n  handleClose: () => void\r\n  config: C.Config\r\n  socket: Socket | undefined\r\n}\r\nexport default function ConfigDialog(props: ConfigDialog_Props) {\r\n  const { open, handleClose, config, socket } = props\r\n  const [polling, setPolling] = useState(config.Polling)\r\n  const [pollingInterval, setPollingInterval] = useState(config.Polling_Interval/1000)\r\n  const classes = useStyles();\r\n  const [patch, setPatch] = useState<C.Patch>(config.Patch)\r\n  const [aboutOpen, setAboutOpen] =useState(false)\r\n\r\n  useEffect(() => {\r\n    setPollingInterval(config.Polling_Interval/1000)\r\n    setPolling(config.Polling)\r\n    setPatch(config.Patch)\r\n  }, [config])\r\n \r\n\r\n  const handleSubmit = (event: any) => {\r\n    event?.preventDefault();\r\n    // console.log(event)\r\n\r\n    let form = document.querySelector('form')\r\n    if (form) {\r\n      const data = new FormData(form);\r\n      let query = ''\r\n      for (var pair of data.entries()) {\r\n      \r\n        let t = pair[0] as C.ConfigHeaders\r\n       \r\n        let v = pair[1].toString()\r\n        switch(t){\r\n          case C.ConfigHeaders.POLLING:\r\n           \r\n            break;\r\n          case C.ConfigHeaders.POLLING_INTERVAL:\r\n            query += t + '=' + pollingInterval*1000 + '&'\r\n            break;\r\n          default:\r\n            query += t + '=' + v + '&'\r\n            break;\r\n        }\r\n\r\n      }\r\n      //Hard adds Polling to ensure it is accounted for\r\n      query += C.ConfigHeaders.POLLING + '=' + polling\r\n      \r\n      setConfig(query)\r\n      if(socket)\r\n        SocketPatcher(socket, patch)\r\n    }\r\n  }\r\n  const handlePollingInterval=(value: number)=>{\r\n    if(value>10){\r\n      setPollingInterval(value)\r\n    }\r\n  }\r\n  const handlePatchUpdate=(p: C.Patch)=>{\r\n    console.log(p)\r\n    setPatch(p)\r\n  }\r\n  return (\r\n    \r\n    //@ts-ignore\r\n    <Dialog fullScreen open={open} onClose={handleClose} TransitionComponent={Transition}>\r\n\r\n      <form className={classes.root} onSubmit={handleSubmit}>\r\n        <AppBar className={classes.appBar}>\r\n          <Toolbar style={{ paddingBottom: 0, marginBottom: 0, height: 30}}>\r\n            <IconButton edge=\"start\" color=\"inherit\" onClick={handleClose} aria-label=\"close\">\r\n              <CloseIcon />\r\n            </IconButton>\r\n            <Typography variant=\"h6\" className={classes.title}>\r\n              Server Configuration\r\n              <span style={{ fontSize: 10, marginLeft:30 }}> &nbsp;&nbsp;&nbsp; Last Update: {config.LastUpdated}</span> \r\n            </Typography>\r\n           \r\n            <Button autoFocus color=\"inherit\" type={'submit'} onClick={handleClose}>\r\n              Save\r\n            </Button>\r\n            <IconButton color='inherit' onClick={()=>setAboutOpen(true)}><InfoIcon></InfoIcon></IconButton>\r\n           \r\n          </Toolbar>\r\n         \r\n        </AppBar>\r\n\r\n        <Paper key='config_paper'>\r\n\r\n\r\n\r\n          <TextField key='location' style={{width:'25%'}}label={'Location'} name={C.ConfigHeaders.LOCATION} defaultValue={config.Location} />\r\n\r\n          <FormControlLabel name={C.ConfigHeaders.POLLING} value={polling} labelPlacement=\"top\"\r\n            control={<Switch checked={polling} value={polling} onChange={(e) => setPolling(!polling)} name={C.ConfigHeaders.POLLING} />}\r\n            label=\"Polling\"\r\n          />\r\n\r\n          <TextField key='polling_interval' style={{width:'25%'}} disabled={!polling} type='number' label={'Poll Interval'} onChange={(e)=> handlePollingInterval(parseInt(e.target.value))} name={C.ConfigHeaders.POLLING_INTERVAL} value={pollingInterval} />\r\n        </Paper>\r\n\r\n\r\n        <Paper key='patch'>\r\n          <Patch patch={patch} setPatch={handlePatchUpdate} />\r\n        </Paper>\r\n      </form>\r\n     \r\n      <About open={aboutOpen} handleClose={()=>setAboutOpen(false)}></About>\r\n    </Dialog>\r\n   \r\n      \r\n  \r\n    \r\n  )\r\n}","\r\nimport { Socket } from 'socket.io-client'\r\nimport * as C from './constants'\r\n//import {socket} from '../LoadPage'\r\ntype RIG_STATUS = React.Dispatch<React.SetStateAction<C.RIG_STATUS>>\r\ntype PJS = React.Dispatch<React.SetStateAction<C.PJs>>\r\ntype CONFIG = React.Dispatch<React.SetStateAction<C.Config>>\r\ntype POLLING_PROGRESS = React.Dispatch<React.SetStateAction<number>>\r\n\r\nexport default function SocketListener(\r\n    socket: Socket,\r\n    setStatus: RIG_STATUS,\r\n    setPJs: PJS,\r\n    setConfig: CONFIG,\r\n    setPollingProgress: POLLING_PROGRESS,\r\n) {\r\n   \r\n    socket.on('connected', () => {\r\n        console.log('Connected!')\r\n        // socket.emit('Hello')\r\n    })\r\n    socket.on('Hello', () => {\r\n        //console.log('Hello!')\r\n    })\r\n    socket.on(C.ioCommands.EMITTING_PJS, (pjs: C.PJs) => {\r\n        setPJs(pjs)\r\n         console.log('Got new PJs!')\r\n    })\r\n    socket.on(C.ioCommands.EMITTING_STATUS, (status: C.RIG_STATUS) => {\r\n       // console.log('Status Updated')\r\n        setStatus(status)\r\n    })\r\n    socket.on(C.ioCommands.REQUEST_UPDATE, () => {\r\n        console.log('Requesting Update!')\r\n        socket?.emit(C.ioCommands.REQUESTING_UPDATE)\r\n    })\r\n\r\n    socket.on(C.ioCommands.REQUEST_CONFIG, () => {\r\n        console.log('Requesting Config')\r\n       // socket?.emit(C.ioCommands.REQUESTING_CONFIG)\r\n    })\r\n    socket.on(C.ioCommands.EMITTING_CONFIG, (config: C.Config) => {\r\n        console.groupCollapsed('Got New Config')\r\n        console.log('Config', config)\r\n        console.log('Patch', config.Patch)\r\n        console.groupEnd()\r\n        setConfig(config)\r\n        /*\r\n        if(config.Groups[0] && config.Groups[0].group)\r\n            setWorld(config.Groups[0].group)\r\n            */\r\n    })\r\n    socket.on(C.ioCommands.EMITTING_POLLING_PROGRESS, (progress: number) => {\r\n        setPollingProgress(progress)\r\n    })\r\n}\r\n    \r\n\r\n\r\n\r\nexport function SocketPatcher(socket: Socket, patch: C.Patch) {\r\n    socket.emit(C.ioCommands.EMITTING_PATCH, patch)\r\n}   ","import {Button, Dialog, DialogActions, DialogTitle, DialogContent, DialogContentText, TextField } from \"@material-ui/core\";\r\nimport { useState } from \"react\";\r\ninterface Alert_Props{\r\n    open: boolean,\r\n    handleInput: (text: string)=>void,\r\n    handleClose: ()=>void,\r\n    header: string,\r\n    message: string\r\n}\r\nexport default function Alert(props: Alert_Props){\r\n    const {open,handleInput, handleClose, header, message} = props\r\n    const [text, setText] = useState('')\r\n\r\n    const handleClick=(approval: boolean)=>{\r\n        if(approval){\r\n            handleInput(text)\r\n        }\r\n        handleClose()\r\n\r\n    }\r\n    return (\r\n        <Dialog\r\n        open={open}\r\n        onClose={handleClose}\r\n        aria-labelledby=\"alert-dialog-title\"\r\n        aria-describedby=\"alert-dialog-description\"\r\n      >\r\n        <DialogTitle id=\"alert-dialog-title\">{header}</DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText id=\"alert-dialog-description\">\r\n            <span style={{width:'50'}}>{message}</span>\r\n          </DialogContentText>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <TextField value={text} onChange={(e)=>setText(e.target.value)}></TextField>\r\n          <Button onClick={(e)=>handleClick(false)} color=\"primary\">\r\n            Cancle\r\n          </Button>\r\n          <Button onClick={(e)=>handleClick(true)} color=\"primary\" autoFocus>\r\n            Okay\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n        \r\n    )\r\n}","import {Accordion, AccordionSummary,AccordionDetails,Typography, Button} from '@material-ui/core'\r\nimport * as C from '../util/constants'\r\nimport {useState} from 'react'\r\n\r\ninterface worlds_props{\r\n    setWorld: (g: string)=> void\r\n    name: string\r\n    groups: C.Groups\r\n    selected?: number\r\n}\r\nexport default function Worlds( props: worlds_props){\r\n    const [expanded, setExpanded]= useState(false)\r\n    const {setWorld, name, groups, selected} = props\r\n\r\n    const getWorlds = ()=>{\r\n        return Object.entries(groups).map(group=>{\r\n            let s = false\r\n            if(selected ===parseInt(group[0]))\r\n              s = true\r\n\r\n            return <Button key={group[0]} onClick={(e)=>setWorld(group[0])} variant={s?'outlined':'text'}>{group[1].name}</Button>\r\n        })\r\n    }\r\n    return (\r\n        <div {...props}>\r\n          {getWorlds()}\r\n          </div>\r\n    )\r\n}\r\n\r\n/*\r\n <Accordion key={'world'+name} expanded={expanded} onChange={()=>setExpanded(!expanded)}>\r\n        <AccordionSummary\r\n          expandIcon={<ExpandMoreIcon />}\r\n          aria-controls=\"panel1bh-content\"\r\n          id=\"panel1bh-header\"\r\n        >\r\n          <Typography>{name}</Typography>\r\n          \r\n        </AccordionSummary>\r\n        <AccordionDetails>\r\n          {getWorlds()}\r\n        </AccordionDetails>\r\n      </Accordion>\r\n      */","import { Button, ButtonGroup, Container, createStyles, Fade, Grow, makeStyles, Paper, Theme } from \"@material-ui/core\";\r\nimport Worlds from \"./Worlds\";\r\nimport { ButtonStyle, Config, Groups } from '../util/constants'\r\nimport { useState } from \"react\";\r\n\r\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\"\r\n\r\nimport ExpandLessIcon from '@material-ui/icons/ExpandLess'\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n    createStyles({\r\n        root: {\r\n           \r\n        },\r\n        container: {\r\n            display: 'flex',\r\n        },\r\n        paper: {\r\n            margin: theme.spacing(1),\r\n        },\r\n    }),\r\n);\r\n\r\ninterface WorldBox_Props {\r\n    handleWorldSelection: (g: string) => void,\r\n    handleGroupSelection: (g: string) => void,\r\n    config: Config,\r\n    world: number\r\n}\r\nexport default function WorldBox(props: WorldBox_Props) {\r\n    const { handleWorldSelection, handleGroupSelection, config, world } = props;\r\n    const [worldOpen, setWorldOpen] = useState(false)\r\n    const [groupOpen, setGroupOpen] = useState(false)\r\n    const classes = useStyles();\r\n\r\n    const handleWorld = (w: boolean) => {\r\n        setWorldOpen(!w)\r\n        if (!w) {\r\n            setGroupOpen(false)\r\n        }\r\n    }\r\n    const handleGroup = (g: boolean) => {\r\n        setGroupOpen(!g)\r\n        if (!g) {\r\n            setWorldOpen(false)\r\n        }\r\n    }\r\n    const getStyle=()=>{\r\n        if(!worldOpen && !groupOpen) {\r\n           return  {\r\n            width: '90%', margin: 'auto', height: '23'\r\n        }} \r\n        return {\r\n            width: '90%', margin: 'auto'\r\n        }\r\n        \r\n    }\r\n    return (\r\n     \r\n            <Paper style={getStyle()}>\r\n                <ButtonGroup style={{marginTop:'1px', marginBottom:'2px'}} >\r\n                    <Button key='world_button' \r\n                        onClick={() => handleWorld(worldOpen)}> Worlds\r\n                        {worldOpen ? <ExpandLessIcon /> : <ExpandMoreIcon />} </Button>\r\n                    <Button key='group_button' onClick={() => handleGroup(groupOpen)}>Groups\r\n                        {groupOpen ? <ExpandLessIcon /> : <ExpandMoreIcon />}\r\n                    </Button>\r\n                </ButtonGroup>\r\n                <div className={classes.container}>\r\n                    <Fade key='world_Grow' in={worldOpen}>\r\n\r\n\r\n                        <Worlds key=\"world_box\" setWorld={handleWorldSelection} groups={config.Groups} name={'Worlds'} selected={world} />\r\n                    </Fade>\r\n                    <Fade key='group_box' in={groupOpen}>\r\n                        <Worlds setWorld={handleGroupSelection} groups={config.Groups} name={'Groups'} />\r\n                    </Fade>\r\n                </div>\r\n            </Paper>\r\n     \r\n    )\r\n}\r\n//\r\n/*\r\n <Container key='groups_Worlds' style={{width:'80%'}}>\r\n\r\n\r\n        </Container>\r\n        */","\r\nimport { useEffect, useState } from 'react';\r\nimport './App.css';\r\nimport * as C from './util/constants'\r\n//import { getPJ } from './util/getter';\r\n//import PJ from './components/PJ'\r\nimport Numberpad from './components/numberpad';\r\nimport CommandPad from './components/CommandPad'\r\nimport Worlds from './components/Worlds'\r\nimport {  TextField, Container,  Grid,LinearProgress } from '@material-ui/core'\r\nimport { processCMD } from './util/CMD';\r\nimport Programmer from './components/Programmer';\r\nimport  * as Prefs from './prefrences';\r\nimport SocketListener from './util/SocketListener';\r\nimport ConfigDialog from './components/ConfigDialog';\r\nimport { Socket } from 'socket.io-client';\r\nimport InputPopup from './components/InputPopup';\r\nimport WorldBox from './components/WorldBox';\r\n\r\n\r\n// setSocketConnect(true)\r\n//import {socket}  from './LoadPage'\r\ninterface App_Prps{\r\n  prefs: Prefs.prefres\r\n  openConfig: boolean\r\n  handleCloseConfig: ()=>void\r\n  socket: Socket | undefined\r\n}\r\n\r\n//let socket: Socket | undefined = undefined\r\n\r\nfunction App(Props: App_Prps ) {\r\n  const {prefs,openConfig,handleCloseConfig,socket} = Props\r\n  const [cmd, setCMD] = useState('')\r\n  const [vartiable, setVartiable] = useState<string|undefined>(undefined)\r\n  const [active, setActive] = useState<number[]>([])\r\n  const [activeIndex, setActiveIndex] = useState(-1)\r\n  const [clearPresses, setClearPressed] = useState(0)\r\n  const [selected, setSelected] = useState<number[]>([])\r\n  const [groupNameOpen, setGroupNameOpen] = useState(false)\r\n  const [config, setConfig] =useState(C.defaultConfig)\r\n  const [world, setWorld] = useState(0) //Default 0 - All\r\n  const [pjs, setPJs] = useState<C.PJs>({})\r\n  const [pollingProgress, setPollingProgress] = useState(100)\r\n  const [command, setCommand]=useState<C.ControlKeys | undefined>(undefined)\r\n  const [lastPJClicked, setLastPJClicked] = useState<number | undefined>(undefined)\r\n  const [rigStatus, setStatus] = useState<C.RIG_STATUS>({\r\n    online: false,\r\n    power: false,\r\n    shutter: false,\r\n    blendMarker: false,\r\n    blend: false,\r\n    testPattren: false,\r\n    lampStatus: false,\r\n    hdmiInput: false,\r\n    signalName: false\r\n\r\n  })\r\n  \r\n \r\n\r\n  useEffect(() => {\r\n  \r\n   if(socket)\r\n   SocketListener(socket,setStatus, setPJs,setConfig,setPollingProgress)\r\n   \r\n    if(command){\r\n      console.log('Emmiting CMD',command, active)\r\n\r\n      socket?.emit(C.ioCommands.EMITTING_CMD,{cmd: command, pjIDs: active, vartiable: vartiable})\r\n      if (prefs.clearProgrammerAfterCMD) {\r\n        setActive([])\r\n        setSelected([])\r\n      }\r\n      setCommand(undefined)\r\n    }\r\n    \r\n  \r\n // let i =setInterval(pollPJs,10000)\r\n    //console.log(selected)\r\n    return function cleanup(){\r\n     \r\n     // socket?.disconnect()\r\n      //setSocketConnect(false)\r\n    }\r\n  \r\n   \r\n  },[active,command, prefs,socket, vartiable, pjs])\r\n\r\n\r\n  document.onkeyup = ((e) => {\r\n   if(openConfig) return\r\n  \r\n    let key = e.key\r\n  //  console.log(key)\r\n    if (C.keys.includes(key)) {\r\n      handlePad(key)\r\n      return\r\n    }\r\n    switch (key) {\r\n      case 't':\r\n        handlePad(C.commands.THRU)\r\n        break;\r\n      case 'c':\r\n        handlePad(C.commands.CLEAR)\r\n        break;\r\n      case '=':\r\n        handlePad('+')\r\n        break;\r\n      case 'Backspace':\r\n        handlePad(C.commands.DEL)\r\n        break;\r\n      case 'Enter':\r\n        //processCMD();\r\n        handlePad(C.commands.ENTER)\r\n        break;\r\n      case 'i':\r\n        handleCommand(C.ControlCommands.SHUTTER_CLOSED)\r\n        break;\r\n      case 'o':\r\n        handleCommand(C.ControlCommands.SHUTTER_OPEN)\r\n        break;\r\n      \r\n      case 'ArrowUp':\r\n        handlePad(C.commands.IF_PROG)\r\n        break;\r\n      case 'ArrowRight':\r\n        handlePad(C.commands.NEXT)\r\n        break;\r\n      case 'ArrowLeft':\r\n        handlePad(C.commands.BACK)\r\n        break;\r\n    }\r\n\r\n  })\r\n  \r\n  const handleNext = () => {\r\n    //console.log('Nexting')\r\n    if (selected.length < 1) {\r\n      return\r\n    }\r\n    let i = activeIndex\r\n    if (activeIndex+1 < selected.length) {\r\n      i += 1\r\n    }\r\n    if (activeIndex + 1 >= selected.length) {\r\n      i =0\r\n    }\r\n    let a: number[] = []\r\n    a.push(selected[i])\r\n    setActiveIndex(i)\r\n    setActive(a)\r\n  }\r\n  const handleBack = () => {\r\n    if (selected.length < 1) {\r\n      return\r\n    }\r\n    let i = activeIndex\r\n    if (activeIndex-1 >=0) {\r\n      i -= 1\r\n    }\r\n    if (activeIndex-1 <0) {\r\n      i =selected.length-1\r\n    }\r\n    let a: number[] = []\r\n    a.push(selected[i])\r\n    setActiveIndex(i)\r\n    setActive(a)\r\n  }\r\n  \r\n  const handlePad = (e: string) => {\r\n    //console.log(e)\r\n    if (e === C.commands.CLEAR) {\r\n      setClearPressed((clearPresses + 1))\r\n      //console.log('Clear', clearPresses)\r\n      switch (clearPresses) {\r\n        case 0:\r\n          setCMD('')\r\n          break;\r\n        case 1:\r\n          setActive([])\r\n          setActiveIndex(-1)\r\n          break;\r\n        case 2:\r\n          setSelected([])\r\n          break;\r\n      }\r\n      return\r\n    }\r\n    setClearPressed(0)\r\n    switch (e) {\r\n\r\n      case C.ioCommands.STORE_GROUP:\r\n        setGroupNameOpen(true)\r\n        break;\r\n      case C.commands.DEL:\r\n        //console.log(cmd.slice(-6) === ' THRU ')\r\n        // console.log(cmd.includes('THRU'))\r\n        if (cmd.length >= 6 && cmd.slice(-6) === ' ' + C.commands.THRU + ' ') {\r\n          let t = cmd.slice(0, cmd.length - 6)\r\n          setCMD(t)\r\n        } else {\r\n          setCMD(cmd.slice(0, (cmd.length - 1)))\r\n        }\r\n        break;\r\n      case C.commands.THRU:\r\n        if (cmd.length > 0)\r\n          setCMD(cmd + ' THRU ')\r\n        break;\r\n      case C.commands.ENTER:\r\n        handleCMD()\r\n        break;\r\n      case '-':\r\n        if (cmd[cmd.length - 1] !== ' ') {\r\n          setCMD(cmd + e)\r\n        }\r\n        break\r\n      case C.commands.NEXT:\r\n        handleNext();\r\n        break;\r\n      case C.commands.BACK:\r\n        handleBack()\r\n        break;\r\n      case C.commands.IF_PROG:\r\n        setActive(selected);\r\n        setActiveIndex(-1)\r\n        break;\r\n      default:\r\n      \r\n        setCMD(cmd + e)\r\n       // console.log('setting CMD',cmd)\r\n    }\r\n  //  console.log('CMD',cmd)\r\n  }\r\n  const handleTableSelect=(id:number)=>{\r\n   // let s = [...selected]\r\n    let a = [...active]\r\n    if(a.includes(id)){\r\n      setActive(a.filter(pj=> pj !== id))\r\n    } else{\r\n     \r\n      \r\n     /*\r\n      document.onkeydown= (e)=>{\r\n        if(e.key==='Shift' && lastPJClicked){\r\n          if(id>lastPJClicked){\r\n            for(let i=lastPJClicked; i<=id; i++){\r\n              if(!a.includes(i)){\r\n                a.push(i)\r\n              }\r\n            }\r\n\r\n          }else if(lastPJClicked>id){\r\n            for(let i=id; i<=lastPJClicked; i++){\r\n              if(!a.includes(i)){\r\n                a.push(i)\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n      */\r\n      a.push(id)\r\n      setActive(a)\r\n      setLastPJClicked(id)\r\n     // s.push(id)\r\n      //console.log(s)\r\n     // setSelected(s)\r\n    }\r\n  }\r\n\r\n  const handleCMD =() => {\r\n   \r\n    let s = processCMD(cmd, active, getGroup(world))\r\n    finalCMD(s)\r\n    setCMD('')\r\n    \r\n  }\r\n  const finalCMD= (n:number[])=>{\r\n   // console.log(n)\r\n    setActive(n)\r\n    let diffrentPJs: number[] =[]\r\n  //  console.log(n)\r\n    n.forEach(id=>{\r\n      if(!selected.includes(id)){\r\n        diffrentPJs.push(id)\r\n      }\r\n    })\r\n    \r\n    setSelected(diffrentPJs.concat(selected))\r\n    \r\n  }\r\n  const handleCommand=(command: C.ControlKeys, text?:string)=>{\r\n    handleCMD()\r\n    setCommand(command)\r\n    setVartiable(text)\r\n  }\r\n  const getGroup=(groupID:string | number)=>{\r\n    let g  = config.Groups[parseInt(groupID.toString())]?.group \r\n    return  g? g :[]\r\n  }\r\n  const handleGroupSelection=(groupID: string)=>{\r\n    let group = getGroup(groupID)\r\n    if(group)\r\n    finalCMD(group)\r\n  }\r\n  const handleWorldSelection=(groupID:string)=>{\r\n    setWorld(parseInt(groupID))\r\n  }\r\n\r\n  const getStatusBar=()=>{\r\n\r\n    if(pollingProgress===100)\r\n     return <LinearProgress style={{width:'99%', margin:'auto'}}  variant=\"determinate\" value={0} />\r\n\r\n     return <LinearProgress style={{width:'99%', margin:'auto'}}  variant=\"determinate\" value={pollingProgress} />\r\n  }\r\n\r\n  const handleGroupName=(text: string)=>{\r\n    socket?.emit(C.ioCommands.STORE_GROUP,{name:text, group:active})\r\n  }\r\n\r\n  return (\r\n    <div className=\"App\">\r\n\r\n      <link rel=\"stylesheet\" href=\"https://fonts.googleapis.com/css?family=Roboto:300,400,500,700&display=swap\" />\r\n      <link rel=\"stylesheet\" href=\"https://fonts.googleapis.com/icon?family=Material+Icons\" />\r\n      {getStatusBar()}\r\n      <Container style={{position: 'relative', bottom:'3px', textAlign:'left', float:'left'}}>\r\n      </Container>\r\n      <Grid container spacing={6} className='inputArea' >\r\n        <Grid item >\r\n          <Numberpad handlePad={handlePad} />\r\n        </Grid>\r\n        <Grid item>\r\n          <CommandPad  handleCommand={handleCommand} active={active} pjs={pjs} />\r\n        </Grid>\r\n      </Grid>\r\n      <TextField\r\n        id=\"cmd\"\r\n\r\n        style={{ margin: 8, width: '90%' }}\r\n        value={cmd}\r\n        helperText=\"Command Line\"\r\n        fullWidth\r\n        margin=\"normal\"\r\n        InputLabelProps={{\r\n          shrink: true,\r\n        }}\r\n        variant=\"outlined\"\r\n        \r\n      />\r\n     \r\n      <WorldBox handleGroupSelection={handleGroupSelection} handleWorldSelection={handleWorldSelection} config={config} world={world} />\r\n      <br key=\"programmer break\"></br>\r\n      <Container key='programmer'>\r\n        <Programmer handleTableSelect={handleTableSelect} key={'pg'} prefs={prefs} world={getGroup(world)} status={rigStatus} selected={selected} active={active} \r\n        pjs={pjs} />\r\n       \r\n       \r\n        <br key='stats break'></br>\r\n      \r\n\r\n      </Container>\r\n      <ConfigDialog socket={socket} open={openConfig} handleClose={()=>handleCloseConfig()} config={config}/>\r\n      <InputPopup open={groupNameOpen} handleInput={handleGroupName} handleClose={()=>setGroupNameOpen(false)} header={'Group Name'} message={active.toString()} />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","\r\nimport Cookies from 'js-cookie'\r\nexport interface prefres{\r\n    darkMode: boolean,\r\n    clearProgrammerAfterCMD: boolean,\r\n    showOnlySelected: boolean,\r\n    programmerTableView: boolean\r\n}\r\nconst cookieName= 'prefs'\r\n//const prefersDarkMode = useMediaQuery('(prefers-color-scheme: dark)');\r\nexport const defaultPrefs: prefres={\r\n    darkMode: true, //prefersDarkMode,\r\n    clearProgrammerAfterCMD: false,\r\n    showOnlySelected: false,\r\n    programmerTableView: false\r\n}\r\n\r\nexport const setCookie=(prefs: prefres)=>{\r\n    Cookies.set(cookieName,prefs)\r\n}\r\nconst getCookie =()=>{\r\n    return Cookies.get(cookieName)\r\n    /*\r\n    let c = Cookies.get(cookieName)\r\n    if(c){\r\n        return JSON.parse(c) \r\n       // return c as unknown as prefres\r\n    } else {\r\n        setCookie(defaultPrefs)\r\n        return defaultPrefs\r\n    }\r\n    */\r\n}\r\n\r\nexport function getPrefrences(darkMode=true):prefres{\r\n    let c = getCookie()\r\n    if(c){\r\n        return JSON.parse(c)\r\n    }else{\r\n        let d = defaultPrefs\r\n        d.darkMode = darkMode\r\n        setCookie(d)\r\n        return d\r\n    }\r\n     \r\n    //return getCookie()\r\n}\r\n\r\n\r\n\r\nexport function setCookie_DarkMode(mode: boolean){\r\n    let c = getPrefrences()\r\n    c.darkMode=mode\r\n    setCookie(c)\r\n\r\n}\r\nexport function setCookie_ClearProgrammerAfterCMD(mode: boolean){\r\n    let c = getPrefrences()\r\n    c.clearProgrammerAfterCMD = mode\r\n    setCookie(c)\r\n}\r\nexport function setCookie_ShowOnlySelected(mode:boolean){\r\n    let c =getPrefrences()\r\n    console.log(mode)\r\n    c['showOnlySelected'] = mode\r\n    setCookie(c)\r\n}\r\n\r\nexport function getDarkMode(){\r\n    return getPrefrences().darkMode\r\n}\r\n\r\nexport function getClearProgrammerAfterCMD(){\r\n    return getPrefrences().clearProgrammerAfterCMD\r\n}\r\nexport function getShowOnlySelected(){\r\n    return getPrefrences().showOnlySelected\r\n}\r\n\r\nexport function getProgrammerTableView(){\r\n    return getPrefrences().programmerTableView\r\n}","import { Button, Menu, MenuItem, FormControlLabel, Switch  } from '@material-ui/core'\r\n//import {SettingsIcon} from '@material-ui/icons/Settings';\r\nimport SettingsIcon from \"@material-ui/icons/Settings\";\r\nimport { useState, useRef} from 'react'\r\nimport { prefres } from '../prefrences';\r\nimport * as C from '../util/constants'\r\n\r\n\r\ninterface menu_props {\r\n  handleSettings: (e: prefres) => void,\r\n  prefs: prefres,\r\n  handleOpenConfig: ()=>void\r\n}\r\nexport default function ControlMenu(props: menu_props) {\r\n\r\n // const value = useContext(Settings)\r\n  //console.log(value)\r\n  const { prefs, handleSettings, handleOpenConfig } = props\r\n  const divRef = useRef(null)\r\n\r\n  const [open, setOpen] = useState(false)\r\n  \r\n\r\n  const handleOpen = () => {\r\n    setOpen(true)\r\n\r\n\r\n  }\r\n  const handleClose = (e: C.menuCommands | undefined) => {\r\n    setOpen(false)\r\n  }\r\n\r\n  const handleChange = (e: C.menuCommands) => {\r\n    \r\n    let p = Object.assign({},prefs)\r\n    switch (e) {\r\n      case C.menuCommands.CLEAR_SELECTED_ON_CMD:\r\n        p.clearProgrammerAfterCMD = !prefs.clearProgrammerAfterCMD\r\n        break;\r\n      case C.menuCommands.IF_SELECTED:\r\n        p.showOnlySelected = !prefs.showOnlySelected\r\n        break;\r\n      case C.menuCommands.DARK_MODE:\r\n        p.darkMode = !prefs.darkMode\r\n        break;\r\n      case C.menuCommands.PROGRAMMER_TABLE_VIEW:\r\n        p.programmerTableView = !prefs.programmerTableView\r\n        break;\r\n    }\r\n    handleSettings(p)\r\n  }\r\n  let button =\r\n    <Button ref={divRef} aria-controls=\"simple-menu\" aria-haspopup=\"true\" onClick={() => handleOpen()}>\r\n      <SettingsIcon />\r\n    </Button>\r\n  if(process.env.NODE_ENV === 'development'){\r\n    document.title = 'PJ Dev'\r\n  }\r\n  return (\r\n    <div>\r\n\r\n      {button}\r\n\r\n\r\n      <Menu\r\n        id=\"simple-menu\"\r\n        keepMounted\r\n        //@ts-ignore\r\n        anchorEl={divRef.current}\r\n        open={open}\r\n        onClose={() => handleClose(undefined)}\r\n      >\r\n        <MenuItem >\r\n          <FormControlLabel\r\n            control={<Switch key={C.menuCommands.CLEAR_SELECTED_ON_CMD} checked={prefs.clearProgrammerAfterCMD}\r\n              onClick={(e) => handleChange(C.menuCommands.CLEAR_SELECTED_ON_CMD)} name=\"clearSelectedOnPress\" />}\r\n            label=\"Clear Programmer On CMD\"\r\n          />\r\n        </MenuItem>\r\n        <MenuItem>\r\n\r\n          <FormControlLabel\r\n            control={<Switch key={C.menuCommands.IF_SELECTED} checked={prefs.showOnlySelected}\r\n              onChange={(e) => handleChange(C.menuCommands.IF_SELECTED)} name=\"showonlyselected\" />}\r\n            label=\"Show Only Selected\"\r\n          />\r\n        </MenuItem>\r\n        <MenuItem>\r\n\r\n          <FormControlLabel\r\n            control={<Switch key={C.menuCommands.DARK_MODE} checked={prefs.darkMode}\r\n              onChange={(e) => handleChange(C.menuCommands.DARK_MODE)} name=\"darkMode\" />}\r\n            label=\"Dark Mode\"\r\n          />\r\n       \r\n        </MenuItem>\r\n        <MenuItem>\r\n\r\n          <FormControlLabel\r\n            control={<Switch key={C.menuCommands.PROGRAMMER_TABLE_VIEW} checked={prefs.programmerTableView}\r\n              onChange={(e) => handleChange(C.menuCommands.PROGRAMMER_TABLE_VIEW)} name=\"Programmer Table View\" />}\r\n            label=\"Programmer Table View\"\r\n          />\r\n       \r\n        </MenuItem>\r\n        <MenuItem>\r\n        <Button onClick={(e)=>{setOpen(false); handleOpenConfig()}}>Edit Config</Button>\r\n        </MenuItem>\r\n      </Menu>\r\n     \r\n      <span style={{textAlign:'center', fontSize: 10}}> Projector Controler v{process.env.REACT_APP_VERSION}{process.env.NODE_ENV==='development'?' Beta':''}</span>\r\n    </div>\r\n  )\r\n\r\n}","import { CircularProgress } from \"@material-ui/core\";\r\n\r\nexport default function Disconnected(){\r\n    return (\r\n      \r\n            <div style={{width:'100%', textAlign:'center'}} >\r\n     \r\n            <CircularProgress  color=\"secondary\" />\r\n            <p>Can't connect to server</p>\r\n            \r\n            </div>\r\n   \r\n    )\r\n}","import React, { useEffect, useState } from 'react';\r\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\r\nimport { createMuiTheme, createStyles, makeStyles, ThemeProvider, Theme } from '@material-ui/core/styles';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport App from './App';\r\nimport * as Pref from './prefrences';\r\nimport ControlMenu from './components/ControlMenu';\r\nimport socketIOClinet , { Socket }  from 'socket.io-client'\r\nimport { Backdrop } from '@material-ui/core';\r\nimport Disconnected from './components/Disconnected';\r\nexport const Settings = React.createContext(Pref.defaultPrefs)\r\n\r\nexport let socket =socketIOClinet()\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    backdrop: {\r\n      zIndex: theme.zIndex.drawer + 1,\r\n      color: '#fff',\r\n    },\r\n  }),\r\n);\r\nexport default function LoadPage() {\r\n    const prefersDarkMode = useMediaQuery('(prefers-color-scheme: dark)');\r\n    // const prefersDarkMode = getDarkMode()  \r\n    const classes = useStyles()\r\n    const [prefres, setPrefs] = useState(Pref.defaultPrefs)\r\n    const [openConfig,setOpenConfig] = useState(false)\r\n    const [socketConnected,setSocketConnected]= useState(false)\r\n\r\n    useEffect(()=>{\r\n    if(!socketConnected){\r\n      try{\r\n   \r\n          console.log('Connecting Socket...')\r\n       // let s = socketIOClinet()\r\n    \r\n        socket.on('connect',()=>{\r\n           // socket = s\r\n            setSocketConnected(true)\r\n        })\r\n        socket.on('disconnect',()=>{\r\n           // socket = undefined\r\n            setSocketConnected(false)\r\n        })\r\n      \r\n      }catch(e){\r\n\r\n      }\r\n    }\r\n    return function cleanup(){\r\n     \r\n    }\r\n\r\n    },[socketConnected])\r\n\r\n    useEffect(() => {\r\n  \r\n        setPrefs(Pref.getPrefrences(prefersDarkMode))\r\n      \r\n    }, [prefersDarkMode])\r\n\r\n    const theme = createMuiTheme({\r\n        palette: {\r\n            type: prefres.darkMode ? 'dark' : 'light',\r\n        }\r\n    })\r\n   \r\n    const handlePrefs = (p: Pref.prefres) => {\r\n       // console.log(prefres)\r\n        setPrefs(p)\r\n      //  console.log(prefres)\r\n        Pref.setCookie(p)\r\n    }\r\n    return (\r\n        <ThemeProvider theme={theme}>\r\n            <Settings.Provider value={prefres}/>\r\n            <CssBaseline />\r\n            <Backdrop className={classes.backdrop} open={!socketConnected} >\r\n                <Disconnected/>\r\n            </Backdrop>\r\n                <ControlMenu handleOpenConfig={()=> setOpenConfig(true)}handleSettings={handlePrefs} prefs={prefres} />\r\n                <App socket={socket} prefs={prefres} openConfig={openConfig} handleCloseConfig={()=>setOpenConfig(false)}/>\r\n              \r\n                \r\n            \r\n        </ThemeProvider>\r\n    );\r\n}","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n    window.location.hostname === 'localhost' ||\r\n      // [::1] is the IPv6 localhost address.\r\n      window.location.hostname === '[::1]' ||\r\n      // 127.0.0.0/8 are considered localhost for IPv4.\r\n      window.location.hostname.match(\r\n        /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n      )\r\n  );\r\n  \r\n  export function register(config) {\r\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n      // The URL constructor is available in all browsers that support SW.\r\n      const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n      if (publicUrl.origin !== window.location.origin) {\r\n        // Our service worker won't work if PUBLIC_URL is on a different origin\r\n        // from what our page is served on. This might happen if a CDN is used to\r\n        // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n        return;\r\n      }\r\n  \r\n      window.addEventListener('load', () => {\r\n        const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n  \r\n        if (isLocalhost) {\r\n          // This is running on localhost. Let's check if a service worker still exists or not.\r\n          checkValidServiceWorker(swUrl, config);\r\n  \r\n          // Add some additional logging to localhost, pointing developers to the\r\n          // service worker/PWA documentation.\r\n          navigator.serviceWorker.ready.then(() => {\r\n            console.log(\r\n              'This web app is being served cache-first by a service ' +\r\n                'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n            );\r\n          });\r\n        } else {\r\n          // Is not localhost. Just register service worker\r\n          registerValidSW(swUrl, config);\r\n        }\r\n      });\r\n    }\r\n  }\r\n  \r\n  function registerValidSW(swUrl, config) {\r\n    navigator.serviceWorker\r\n      .register(swUrl)\r\n      .then(registration => {\r\n        registration.onupdatefound = () => {\r\n          const installingWorker = registration.installing;\r\n          if (installingWorker == null) {\r\n            return;\r\n          }\r\n          installingWorker.onstatechange = () => {\r\n            if (installingWorker.state === 'installed') {\r\n              if (navigator.serviceWorker.controller) {\r\n                // At this point, the updated precached content has been fetched,\r\n                // but the previous service worker will still serve the older\r\n                // content until all client tabs are closed.\r\n                console.log(\r\n                  'New content is available and will be used when all ' +\r\n                    'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n                );\r\n  \r\n                // Execute callback\r\n                if (config && config.onUpdate) {\r\n                  config.onUpdate(registration);\r\n                }\r\n              } else {\r\n                // At this point, everything has been precached.\r\n                // It's the perfect time to display a\r\n                // \"Content is cached for offline use.\" message.\r\n                console.log('Content is cached for offline use.');\r\n  \r\n                // Execute callback\r\n                if (config && config.onSuccess) {\r\n                  config.onSuccess(registration);\r\n                }\r\n              }\r\n            }\r\n          };\r\n        };\r\n      })\r\n      .catch(error => {\r\n        console.error('Error during service worker registration:', error);\r\n      });\r\n  }\r\n  \r\n  function checkValidServiceWorker(swUrl, config) {\r\n    // Check if the service worker can be found. If it can't reload the page.\r\n    fetch(swUrl, {\r\n      headers: { 'Service-Worker': 'script' },\r\n    })\r\n      .then(response => {\r\n        // Ensure service worker exists, and that we really are getting a JS file.\r\n        const contentType = response.headers.get('content-type');\r\n        if (\r\n          response.status === 404 ||\r\n          (contentType != null && contentType.indexOf('javascript') === -1)\r\n        ) {\r\n          // No service worker found. Probably a different app. Reload the page.\r\n          navigator.serviceWorker.ready.then(registration => {\r\n            registration.unregister().then(() => {\r\n              window.location.reload();\r\n            });\r\n          });\r\n        } else {\r\n          // Service worker found. Proceed as normal.\r\n          registerValidSW(swUrl, config);\r\n        }\r\n      })\r\n      .catch(() => {\r\n        console.log(\r\n          'No internet connection found. App is running in offline mode.'\r\n        );\r\n      });\r\n  }\r\n  \r\n  export function unregister() {\r\n    if ('serviceWorker' in navigator) {\r\n      navigator.serviceWorker.ready\r\n        .then(registration => {\r\n          registration.unregister();\r\n        })\r\n        .catch(error => {\r\n          console.error(error.message);\r\n        });\r\n    }\r\n  }\r\n  ","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport LoadPage from './LoadPage'\r\nimport * as serviceWorker from './serviceWorker';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n \r\n    <LoadPage/>\r\n  \r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://cra.link/PWA\r\nserviceWorker.register();\r\n"],"sourceRoot":""}