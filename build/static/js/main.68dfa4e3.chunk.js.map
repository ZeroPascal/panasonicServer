{"version":3,"sources":["util/constants.ts","components/numberpad.tsx","components/BlendDialog.tsx","components/CommandInterfaces/DropdownStyle.ts","components/CommandInterfaces/Testpattern.tsx","components/MenuDialog.tsx","components/Alert.tsx","components/CommandInterfaces/LensCal.tsx","components/LensDialog.tsx","components/CommandInterfaces/Power.tsx","components/CommandInterfaces/Shutter.tsx","components/CommandInterfaces/BackColor.tsx","components/CommandInterfaces/OSDPostion.tsx","components/CommandInterfaces/OSDRotation.tsx","components/CommandInterfaces/PJPostion.tsx","components/CommandInterfaces/QuickSlider.tsx","components/ProjectorSetupDialog.tsx","components/CommandPad.tsx","util/CMD.ts","components/PJCard.tsx","components/ProgrammerTable.tsx","components/Programmer.tsx","util/getter.ts","components/PatchAddDialog.tsx","components/Patch.tsx","util/UpdateLog.ts","components/About.tsx","components/ConfigDialog.tsx","util/SocketListener.ts","components/InputPopup.tsx","components/Worlds.tsx","components/WorldBox.tsx","App.tsx","prefrences.ts","components/ControlMenu.tsx","components/Disconnected.tsx","LoadPage.tsx","serviceWorker.js","reportWebVitals.js","index.js"],"names":["pjServer","process","ioCommands","commands","menuCommands","THRU","DEL","CLEAR","NEXT","IF_PROG","BACK","ENTER","STORE_GROUP","ControlCommands","PROJECTOR_MAKES","ConfigHeaders","keys","defaultConfig","Patch","Location","LastUpdated","Date","Polling","Polling_Interval","Groups","0","name","group","ButtonStyle","width","height","marginBottom","Numberpad","props","handlePad","getButtons","C","map","key","w","Button","variant","style","margin","padding","touchAction","size","onClick","e","Paper","elevation","className","buttons","groups","i","length","g","slice","push","ButtonGroup","buttonGroups","BlendDialog","open","handleClose","handleCommand","buttonStyle","buttonGroupStyle","justifyContent","textAlign","Dialog","onClose","aria-labelledby","DialogTitle","id","EDGE_BLENDING_ON","EDGE_BLENDING_OFF","EDGE_BLENDING_MARKERS_ON","EDGE_BLENDING_MARKERS_OFF","EDGE_BLENDING_UPPER_ON","EDGE_BLENDING_UPPER_OFF","EDGE_BLENDING_RIGHT_ON","EDGE_BLENDING_RIGHT_OFF","EDGE_BLENDING_LOWER_ON","EDGE_BLENDING_LOWER_OFF","EDGE_BLENDING_LEFT_ON","EDGE_BLENDING_LEFT_OFF","dropdownStyle","makeStyles","theme","formControl","spacing","minWidth","selectEmpty","marginTop","useStyles","Testpattern","classes","FormControl","InputLabel","Select","labelId","value","onChange","target","MenuItem","TEST_PATTERN_OFF","TEST_PATTERN_WHITE","TEST_PATTERN_BLACK","TEST_PATTERN_FOCUS_RED","TEST_PATTERN_FOCUS_WHITE","MenuDialog","MENU","MENU_DEFAULT_KEY","MENU_UP_KEY","MENU_LEFT_KEY","MENU_ENTER_KEY","MENU_RIGHT_KEY","MENU_DOWN_KEY","OSD_ON","OSD_OFF","FREEZE_ON","FREEZE_OFF","Alert","command","header","message","handleClick","approval","aria-describedby","DialogContent","DialogContentText","DialogActions","color","autoFocus","LensCal","useState","openHomeAlert","setOpenHomeAlert","openCalAlert","setOpenCalAlert","LENS_POSTION_HOME","shift","setShift","focus","setFocus","zoom","setZoom","getButton","cmd","text","Accordion","expanded","AccordionSummary","expandIcon","aria-controls","Typography","AccordionDetails","Container","marginLeft","paddingLeft","LENS_SHIFT_H_FN","LENS_SHIFT_H_NN","LENS_SHIFT_H_SN","LENS_SHIFT_H_SP","LENS_SHIFT_H_NP","LENS_SHIFT_H_FP","LENS_SHIFT_V_FN","LENS_SHIFT_V_NN","LENS_SHIFT_V_SN","LENS_SHIFT_V_SP","LENS_SHIFT_V_NP","LENS_SHIFT_V_FP","LENS_FOCUS_FN","LENS_FOCUS_NN","LENS_FOCUS_SN","LENS_FOCUS_SP","LENS_FOCUS_NP","LENS_FOCUS_FP","LENS_ZOOM_FN","LENS_ZOOM_NN","LENS_ZOOM_SN","LENS_ZOOM_SP","LENS_ZOOM_NP","LENS_ZOOM_FP","Power","openPowerOnAlert","setOpenPowerOnAlert","openPowerOffAlert","setOpenPowerOffAlert","POWER_OFF","POWER_ON","Shutter","SHUTTER_CLOSED","SHUTTER_OPEN","BackColor","BACK_COLOR_BLUE","BACK_COLOR_BLACK","BACK_COLOR_DEFAULT_LOGO","BACK_COLOR_USER_LOGO","OSDPostion","OSD_POSITION_UPPER_LEFT","OSD_POSITION_CENTER_LEFT","OSD_POSITION_LOWER_LEFT","OSD_POSITION_TOP_CENTER","OSD_POSITION_CENTER","OSD_POSITION_LOWER_CENTER","OSD_POSITION_UPPER_RIGHT","OSD_POSITION_LOWER_RIGHT","OSDRotation","OSD_ROTATION_OFF","OSD_ROTATION_CLOCKWISE","OSD_ROTATION_COUNTERCLOCKWISE","PJPositon","PROJECTOR_INSTALL_METHOD_FRONT_AUTO","PROJECTOR_INSTALL_METHOD_FRONT_CEILING","PROJECTOR_INSTALL_METHOD_FRONT_DESK","PROJECTOR_INSTALL_METHOD_REAR_AUTO","PROJECTOR_INSTALL_METHOD_REAR_CEILING","PROJECTOR_INSTALL_METHOD_REAR_DESK","QuickSlider","min","max","label","setValue","Box","gutterBottom","Slider","event","newValue","console","log","ProjectorSetup","pj","active","setName","ID","setID","useEffect","popUp","PROJECTOR_NAME","PROJECTOR_ID","LIGHT_OUTPUT","TextField","CommandPad","pjs","menuOpen","setMenuOpen","blendOpen","setBlendOpen","lensOpen","setLensOpen","pjSetupOpen","setPJSetupOpen","s","_world","_groups","parse","cmdArray","parsed","groupEnd","parseThru","GROUP","parseGroup","parseNegative","parsePostive","parseNumber","Number","parseInt","isFinite","error","sub","concat","n","pop","Math","negative","x","table","PJCard","pj_tupple","handlePJCard","cardStyle","background","border","selected","ProgrammerTable","handlePJSelect","TableRow","TableCell","component","scope","shutter","regions","edgeBlendingUpper","edgeBlendingRight","edgeBlendingLower","edgeBlendingLeft","borderStyle","borderColor","edgeBlending","fontSize","edgeBlendingMarker","blendRegion","testPattren","lampStatus","hdmiResolution","hdmiSignalLevel","hdmiVerticalFrequency","osdPostion","root","flexGrow","paper","maxHeight","Programmer","world","prefs","handleTableSelect","getPJs","useMemo","sort","pjList","forEach","online","power","lastSeen","backColor","inputSignalName_Main","showOnlySelected","includes","useMediaQuery","programmerTableView","TableContainer","Table","TableHead","TableBody","Grid","container","item","xs","goFetch","query","a","fetchString","fetch","mode","res","ok","json","PatchAddDialog","addPJs","currentPatch","PANASONIC","make","setMake","err","Amount","setAmount","Object","values","getMaxID","StartID","BaseIP","setBaseIP","UserName","setUserName","Pass","setPass","Port","setPort","checkOverlap","startID","amount","t","fullWidth","type","isNaN","helperText","split","handleBaseIP","disabled","auth","fab","position","bottom","right","columns","field","headerName","hide","patch","setPatch","addWindowOpen","setAddWindowOpen","setEditWindowOpen","setSelected","deleteWindowOpen","setDeleteWindowOpen","newPJs","rows","checkboxSelection","selectionModel","onSelectionModelChange","aria-label","c","newPatch","assign","entries","newSelect","getSelectedString","baseIP","port","ip_address","filter","v4","updateLog","version","date","notes","createStyles","bullet","display","transform","menuButton","marginRight","title","pos","About","bull","AppBar","update","Card","CardContent","note","appBar","flex","Transition","forwardRef","ref","Slide","direction","ConfigDialog","config","socket","polling","setPolling","pollingInterval","setPollingInterval","aboutOpen","setAboutOpen","fullScreen","TransitionComponent","onSubmit","preventDefault","form","document","querySelector","data","FormData","pair","v","toString","POLLING","POLLING_INTERVAL","setConfig","emit","EMITTING_PATCH","SocketPatcher","Toolbar","paddingBottom","IconButton","edge","LOCATION","defaultValue","FormControlLabel","labelPlacement","control","Switch","checked","p","handleInput","startText","setText","Worlds","setWorld","groupEditCMD","getWorlds","WorldBox","handleWorldSelection","handleGroupSelection","handleGroupConfig","worldOpen","setWorldOpen","groupOpen","setGroupOpen","configOpen","setConfigOpen","divRef","useRef","handleConfigSelect","generalMessage","DELETE_GROUP","LABEL_GROUP","getHelperText","Fade","in","float","current","Menu","keepMounted","anchorEl","removeFocus","activeElement","HTMLElement","blur","App","Props","openConfig","handleCloseConfig","setCMD","undefined","vartiable","setVartiable","setActive","activeIndex","setActiveIndex","clearPresses","setClearPressed","groupNameOpen","setGroupNameOpen","groupName","setGroupName","setPJs","pollingProgress","setPollingProgress","setCommand","setGroupEditCMD","selectedGroup","setSelectedGroup","setLastPJClicked","blendMarker","blend","hdmiInput","signalName","rigStatus","setStatus","on","EMITTING_PJS","EMITTING_STATUS","status","REQUEST_UPDATE","REQUESTING_UPDATE","REQUEST_CONFIG","EMITTING_CONFIG","groupCollapsed","EMITTING_POLLING_PROGRESS","progress","SocketListener","EMITTING_CMD","pjIDs","clearProgrammerAfterCMD","onkeyup","clear0","clear1","clear2","handleCMD","handleNext","handleBack","trippleTapClearOnOne","cmdLine","cmds","trim","processed","newSelected","handleSelected","processCMD","getGroup","finalCMD","groupID","handleGroupAndWorld","UPDATE_GROUP","handleGroupUpdate","rel","href","LinearProgress","InputLabelProps","shrink","cookieName","defaultPrefs","darkMode","setCookie","Cookies","set","getCookie","get","getPrefrences","JSON","d","ControlMenu","handleSettings","handleOpenConfig","setOpen","handleChange","CLEAR_SELECTED_ON_CMD","IF_SELECTED","DARK_MODE","PROGRAMMER_TABLE_VIEW","TRIPPLE_TAP_CLEAR_ON_ONE","button","aria-haspopup","Disconnected","CircularProgress","Settings","React","createContext","Pref","socketIOClinet","backdrop","zIndex","drawer","LoadPage","prefersDarkMode","prefres","setPrefs","setOpenConfig","socketConnected","setSocketConnected","createMuiTheme","palette","ThemeProvider","Provider","CssBaseline","Backdrop","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","onUpdate","onSuccess","catch","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById","URL","origin","addEventListener","headers","response","contentType","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.68dfa4e3.chunk.js","sourcesContent":["import { CSSProperties } from \"react\";\n\n\nexport let pjServer = 'http://localhost:3000/'\n//export let pjServer = 'http://192.168.10.249:3000/'\nif(process.env.NODE_ENV ==='production'){\n    pjServer = process.env.REACT_APP_SERVER? process.env.REACT_APP_SERVER : 'localhost:3000';\n}\n\n\nexport const fetchSettings: RequestInit = {\n    method:'get',\n    headers:{\n        \n    }\n   \n}\n\n\nexport type PJs = Record<number,PJ_OBJ>\n\nexport enum ioCommands {\n    REQUEST_UPDATE = 'REQUEST_UPDATE',\n    REQUESTING_UPDATE = 'REQUESTING_UPDATE',\n    EMITTING_PJS = 'EMITTING_PJS',\n    EMITTING_STATUS = 'EMITTING_STATUS',\n    REQUEST_CONFIG = 'REQUEST_CONFIG',\n    EMITTING_CONFIG = 'EMITTING_CONFIG',\n    REQUESTING_CONFIG = 'REQUESTING_CONFIG', \n    EMITTING_PATCH = 'EMITTING_PATCH',\n    EMITTING_POLLING_PROGRESS = 'EMITTING_POLLING_PROGRESS',\n    EMITTING_CMD = 'EMITTING_CMD',\n    STORE_GROUP = 'STORE_GROUP',\n    UPDATE_GROUP = 'UPDATE_GROUP',\n    LABEL_GROUP= 'LABEL_GROUP',\n    DELETE_GROUP='DELETE_GROUP'\n    \n}\nexport type PJ_OBJ = {\n    id: number,\n    power: string,\n    name: string,\n    shutter: string,\n    online: string,\n    lastSeen: number,\n    lampStatus: string,\n    edgeBlending: string,\n    edgeBlendingMarker: string,\n    edgeBlendingUpper: string,\n    edgeBlendingLower: string,\n    edgeBlendingRight: string,\n    edgeBlendingLeft: string,\n    testPattren: string,\n    backColor: string,\n    hdmiSignalLevel: string,\n    hdmiResolution: string,\n    hdmiVerticalFrequency: string,\n    osdPostion: string,\n    inputSignalName_Main: string,\n    error: string\n\n}\nexport interface RIG_STATUS{\n    online: boolean,\n    power: boolean,\n    shutter: boolean,\n    blend: boolean,\n    blendMarker: boolean,\n    testPattren: boolean,\n    lampStatus: boolean,\n    hdmiInput:boolean,\n    signalName: boolean\n}\n\nexport enum commands{\n    THRU = 'THRU',\n    DEL = 'DEL',\n    CLEAR = 'CLEAR',\n    ENTER = 'ENTER',\n    NEXT = 'NEXT',\n    BACK = 'BACK',\n    IF_PROG = 'IF_PROG',\n    GROUP = 'GROUP'\n\n}\n\nexport enum menuCommands{\n    CLEAR_SELECTED_ON_CMD = 'CLEAR_SELECTED_ON_CMD',\n    IF_SELECTED = 'IF_SELECTED',\n    DARK_MODE = 'DARK_MODE',\n    PROGRAMMER_TABLE_VIEW ='PROGRAMMER_TABLE_VIEW',\n    TRIPPLE_TAP_CLEAR_ON_ONE ='TRIPPLE_TAP_CLEAR_ON_ONE'\n}\nexport const _keys= ['7','8','9','4','5','6','1','2','3','-','0','+',commands.THRU,commands.DEL, commands.CLEAR, commands.NEXT, commands.IF_PROG, commands.BACK, commands.ENTER, ioCommands.STORE_GROUP]\n\nexport const keys= ['7','8','9','4','5','6','1','2','3','-','0','+',commands.THRU,commands.DEL, commands.CLEAR, commands.BACK, commands.IF_PROG, commands.NEXT, commands.ENTER]\n\nexport enum ControlCommands {\n    POWER_OFF = 'POWER_OFF',\n    POWER_ON = 'POWER_ON',\n    SHUTTER_CLOSED = 'SHUTTER_CLOSED',\n    SHUTTER_OPEN = 'SHUTTER_OPEN',\n    EDGE_BLENDING_OFF = 'EDGE_BLENDING_OFF',\n    EDGE_BLENDING_ON = 'EDGE_BLENDING_ON',\n    EDGE_BLENDING_MARKERS_ON = 'EDGE_BLENDING_MARKERS_ON',\n    EDGE_BLENDING_MARKERS_OFF = 'EDGE_BLENDING_MARKERS_OFF',\n    TEST_PATTERN_OFF = 'TEST_PATTERN_OFF',\n    TEST_PATTERN_WHITE = 'TEST_PATTERN_WHITE',\n    TEST_PATTERN_BLACK = 'TEST_PATTERN_BLACK',\n    TEST_PATTERN_FOCUS_RED = 'TEST_PATTERN_FOCUS_RED',\n    TEST_PATTERN_FOCUS_WHITE= 'TEST_PATTERN_FOCUS_WHITE',\n    MENU = 'MENU',\n    MENU_DOWN_KEY = 'MENU_DOWN_KEY',\n    MENU_UP_KEY = 'MENU_UP_KEY',\n    MENU_RIGHT_KEY = 'MENU_RIGHT_KEY',\n    MENU_LEFT_KEY = 'MENU_LEFT_KEY',\n    MENU_DEFAULT_KEY = 'MENU_DEFAULT_KEY',\n    MENU_ENTER_KEY = 'MENU_ENTER_KEY',\n    EDGE_BLENDING_UPPER_ON = 'EDGE_BLENDING_UPPER_ON',\n    EDGE_BLENDING_UPPER_OFF = 'EDGE_BLENDING_UPPER_OFF',\n    EDGE_BLENDING_LOWER_OFF = 'EDGE_BLENDING_LOWER_OFF',\n    EDGE_BLENDING_LOWER_ON = 'EDGE_BLENDING_LOWER_ON',\n    EDGE_BLENDING_RIGHT_OFF = 'EDGE_BLENDING_RIGHT_OFF',\n    EDGE_BLENDING_RIGHT_ON = 'EDGE_BLENDING_RIGHT_ON',\n    EDGE_BLENDING_LEFT_OFF = 'EDGE_BLENDING_LEFT_OFF',\n    EDGE_BLENDING_LEFT_ON = 'EDGE_BLENDING_LEFT_ON',\n    OSD_POSITION_UPPER_LEFT = 'OSD_POSITION_UPPER_LEFT',\n    OSD_POSITION_CENTER_LEFT = 'OSD_POSITION_CENTER_LEFT',\n    OSD_POSITION_LOWER_LEFT = 'OSD_POSITION_LOWER_LEFT',\n    OSD_POSITION_TOP_CENTER = 'OSD_POSITION_TOP_CENTER',\n    OSD_POSITION_CENTER = 'OSD_POSITION_CENTER',\n    OSD_POSITION_LOWER_CENTER = 'OSD_POSITION_LOWER_CENTER',\n    OSD_POSITION_UPPER_RIGHT = 'OSD_POSITION_UPPER_RIGHT',\n    OSD_POSITION_CENTER_RIGHT = 'OSD_POSITION_CENTER_RIGHT',\n    OSD_POSITION_LOWER_RIGHT = 'OSD_POSITION_LOWER_RIGHT',\n    PROJECTOR_NAME = 'PROJECTOR_NAME',\n    NUMBER_KEY_0 = 'NUMBER_KEY_0',\n    NUMBER_KEY_1 = 'NUMBER_KEY_1',\n    NUMBER_KEY_2 = 'NUMBER_KEY_2',\n    NUMBER_KEY_3 = 'NUMBER_KEY_3',\n    NUMBER_KEY_4 = 'NUMBER_KEY_4',\n    NUMBER_KEY_5 = 'NUMBER_KEY_5',\n    NUMBER_KEY_6 = 'NUMBER_KEY_6',\n    NUMBER_KEY_7 = 'NUMBER_KEY_7',\n    NUMBER_KEY_8 = 'NUMBER_KEY_8',\n    NUMBER_KEY_9 = 'NUMBER_KEY_9',\n    LENS_POSTION_HOME = 'LENS_POSTION_HOME',\n    LENS_CALIBRATION = 'LENS_CALIBRATION',\n    LENS_SHIFT_H_SP = 'LENS_SHIFT_H_SP',\n    LENS_SHIFT_H_SN = 'LENS_SHIFT_H_SN',\n    LENS_SHIFT_H_NP = 'LENS_SHIFT_H_NP',\n    LENS_SHIFT_H_NN = 'LENS_SHIFT_H_NN',\n    LENS_SHIFT_H_FP = 'LENS_SHIFT_H_FP',\n    LENS_SHIFT_H_FN = 'LENS_SHIFT_H_FN',\n    LENS_SHIFT_V_SP = 'LENS_SHIFT_V_SP',\n    LENS_SHIFT_V_SN = 'LENS_SHIFT_V_SN',\n    LENS_SHIFT_V_NP = 'LENS_SHIFT_V_NP',\n    LENS_SHIFT_V_NN = 'LENS_SHIFT_V_NN',\n    LENS_SHIFT_V_FP = 'LENS_SHIFT_V_FP',\n    LENS_SHIFT_V_FN = 'LENS_SHIFT_V_FN',\n    LENS_FOCUS_SP = 'LENS_FOCUS_SP',\n    LENS_FOCUS_SN = 'LENS_FOCUS_SN',\n    LENS_FOCUS_NP = 'LENS_FOCUS_NP',\n    LENS_FOCUS_NN = 'LENS_FOCUS_NN',\n    LENS_FOCUS_FP = 'LENS_FOCUS_FP',\n    LENS_FOCUS_FN = 'LENS_FOCUS_FN',\n    LENS_ZOOM_SP = 'LENS_ZOOM_SP',\n    LENS_ZOOM_SN = 'LENS_ZOOM_SN',\n    LENS_ZOOM_NP = 'LENS_ZOOM_NP',\n    LENS_ZOOM_NN = 'LENS_ZOOM_NN',\n    LENS_ZOOM_FP = 'LENS_ZOOM_FP',\n    LENS_ZOOM_FN = 'LENS_ZOOM_FN',\n    BACK_COLOR_BLUE = 'BACK_COLOR_BLUE',\n    BACK_COLOR_BLACK = 'BACK_COLOR_BLACK',\n    BACK_COLOR_USER_LOGO = 'BACK_COLOR_USER_LOGO',\n    BACK_COLOR_DEFAULT_LOGO = 'BACK_COLOR_DEFAULT_LOGO',\n    PROJECTOR_ID = 'PROJECTOR_ID',\n    OSD_ON = 'OSD_ON',\n    OSD_OFF = 'OSD_OFF',\n    FREEZE_OFF = 'FREEZE_OFF',\n    FREEZE_ON = 'FREEZE_ON',\n    CEILING_MOUNT_ON ='CEILING_MOUNT_ON',\n    CEILING_MOUNT_OFF='CEILING_MOUNT_OFF',\n    STANDBY_MODE_NETWORK='STANDBY_MODE_NETWORK',\n    AUTO_SHUTDOWN_OFF='AUTO_SHUTDOWN_OFF',\n    POWER_HOG_ON='POWER_HOG_ON',\n    INPUT_SELECT_COMPUTER1 = 'INPUT_SELECT_COMPUTER1',\n    INPUT_SELECT_COMPUTER2 = 'INPUT_SELECT_COMPUTER2',\n    INPUT_SELECT_VIDEO = 'INPUT_SELECT_VIDEO',\n    INPUT_SELECT_YC = 'INPUT_SELECT_YC',\n    INPUT_SELECT_DVI = 'INPUT_SELECT_DVI',\n    INPUT_SELECT_HDMI1  = 'INPUT_SELECT_HDMI1',\n    INPUT_SELECT_HDMI2 = 'INPUT_SELECT_HDMI2',\n    INPUT_SELECT_SDI1 = 'INPUT_SELECT_SDI1',\n    INPUT_SELECT_DIGITALLINK = 'INPUT_SELECT_DIGITALLINK',\n    PROJECTOR_INSTALL_METHOD_FRONT_DESK = 'PROJECTOR_INSTALL_METHOD_FRONT_DESK',\n    PROJECTOR_INSTALL_METHOD_REAR_DESK ='PROJECTOR_INSTALL_METHOD_REAR_DESK',\n    PROJECTOR_INSTALL_METHOD_FRONT_CEILING = 'PROJECTOR_INSTALL_METHOD_FRONT_CEILING',\n    PROJECTOR_INSTALL_METHOD_REAR_CEILING='PROJECTOR_INSTALL_METHOD_REAR_CEILING',\n    PROJECTOR_INSTALL_METHOD_FRONT_AUTO = 'PROJECTOR_INSTALL_METHOD_FRONT_AUTO',\n    PROJECTOR_INSTALL_METHOD_REAR_AUTO ='PROJECTOR_INSTALL_METHOD_REAR_AUTO',\n    OSD_ROTATION_OFF = 'OSD_ROTATION_OFF',\n    OSD_ROTATION_CLOCKWISE = 'OSD_ROTATION_CLOCKWISE',\n    OSD_ROTATION_COUNTERCLOCKWISE= 'OSD_ROTATION_COUNTERCLOCKWISE',\n    LIGHT_OUTPUT = 'LIGHT_OUTPUT'\n\n\n}\n\n//export type HandleCommand = (command: ControlKeys, text?: string) => void\nexport type ControlKeys = keyof typeof ControlCommands\n\nexport enum PROJECTOR_MAKES {\n    PANASONIC = 'PANASONIC',\n    BARCO = 'BARCO'\n}\n\n\n\nexport type PROJECTOR_MAKE = keyof typeof PROJECTOR_MAKES\n\n\nexport enum ConfigHeaders{\n    LOCATION = 'LOCATION',\n    LAST_UPDATED = 'LAST_UPDATED',\n    POLLING = 'POLLING',\n    POLLING_INTERVAL = 'POLLING_INTERVAL',\n    PATCH = 'PATCH'\n    \n}\ninterface Projector{\n    ip_address: string,\n    port: number,\n    auth: string,\n    make: keyof typeof PROJECTOR_MAKES,\n    id: number\n}\nexport type Patch = Record<string,Projector>\nexport type Group = {name: string, group: number[]}\nexport type Groups = Record<number, Group>\nexport interface Config {\n    Patch: Patch,\n    Location: string,\n    LastUpdated: string,\n    Polling: boolean,\n    Polling_Interval: number,\n    Groups: Groups\n}\n\n\nexport type ConfigKeys = keyof typeof ConfigHeaders\nexport const defaultConfig: Config = {\n    Patch: {},\n    Location: '',\n    LastUpdated: Date(),\n    Polling: false,\n    Polling_Interval: 60000,\n    Groups: {0:{name:'All',group:[]}}\n}\n\nexport type HandleCommand = (cmd: ControlKeys, text?: string )=> void\n\nexport const ButtonStyle: CSSProperties={\n\n    width: '150px',\n    height: '50px',\n    marginBottom: 1\n\n}","import {Button, ButtonGroup, Paper} from '@material-ui/core'\nimport './numberpad.css'\n\nimport * as C from '../util/constants'\ninterface numberpad_props{\n    handlePad: (e: string)=>void\n}\nexport default function Numberpad(props:numberpad_props){\n    const {handlePad} =props\n    \n    const getButtons=()=>{\n     \n        return C.keys.map(key=>{\n            let w = key === C.ioCommands.STORE_GROUP? '125px' : '75px'\n            return <Button variant=\"contained\" style={{margin: 2, padding: '10px', width: w, touchAction: 'manuplation'}} size={'large'} key={key} onClick={(e)=>handlePad(key)} >{key}</Button>     \n        })\n    }\n\n    const buttonGroups=()=>{\n        let buttons = getButtons()\n        let groups =[]\n        let chunk = 3\n        for(let i=0; i<=buttons.length-chunk; i+=chunk){\n           \n            let g = buttons.slice(i,chunk+i)\n           \n            groups.push(\n                <ButtonGroup key={'pad_group'+i}>\n                   {g}\n                </ButtonGroup>\n             \n            )\n        }\n        return groups\n    }\n    return (\n        <Paper style={{touchAction: 'manuplation'}}elevation={1} className='pad'>\n            \n            {buttonGroups()}\n            {getButtons()[C.keys.length-1]}\n            \n        </Paper>\n\n    )\n}","import { Dialog, DialogTitle, Button, ButtonGroup } from \"@material-ui/core\";\nimport { CSSProperties } from \"react\";\nimport { ControlKeys, ControlCommands } from '../util/constants'\ninterface BlendDialog_Props {\n    open: boolean,\n    handleClose: () => void,\n    handleCommand: (e: ControlKeys) => void\n}\n\nexport default function BlendDialog(props: BlendDialog_Props) {\n    const { open, handleClose, handleCommand } = props\n    const buttonStyle: CSSProperties = {\n        padding: '20px',\n        width: '140px'\n\n       \n    }\n    const buttonGroupStyle: CSSProperties = {\n        justifyContent: 'center',\n        textAlign: 'center',\n        margin: 'auto'\n       \n        \n    }\n    return (\n        <Dialog key='blend_dialog'  onClose={handleClose} aria-labelledby=\"simple-dialog-title\" open={open}>\n            <DialogTitle style={buttonGroupStyle} key='menu_dialog_title' id=\"simple-dialog-title\">Blending</DialogTitle>\n            <div key='blend_div' style={{width:300, justifyContent: 'center', textAlign: 'center'}}>\n            <ButtonGroup style={buttonGroupStyle} key='blend_main_keys' variant=\"outlined\">\n                <Button style={buttonStyle} key='blend_on' onClick={(e) => handleCommand(ControlCommands.EDGE_BLENDING_ON)} >Edge Blend On</Button>\n                <Button style={buttonStyle} key='blend_off' onClick={(e) => handleCommand(ControlCommands.EDGE_BLENDING_OFF)} >Edge Blend Off</Button>\n            </ButtonGroup>\n\n            <br></br>\n\n            <ButtonGroup style={buttonGroupStyle} key='makers_main_keys' variant=\"outlined\">\n                <Button style={buttonStyle} key='markers_on' onClick={(e) => handleCommand(ControlCommands.EDGE_BLENDING_MARKERS_ON)} >Markers On</Button>\n                <Button style={buttonStyle} key='markers_off' onClick={(e) => handleCommand(ControlCommands.EDGE_BLENDING_MARKERS_OFF)} >Markers Off</Button>\n            </ButtonGroup>\n\n            <br></br>\n\n            <ButtonGroup style={buttonGroupStyle} key='upper_keys' variant=\"outlined\">\n                <Button style={buttonStyle} key='upper_on' onClick={(e) => handleCommand(ControlCommands.EDGE_BLENDING_UPPER_ON)} >Uppere On</Button>\n                <Button style={buttonStyle} key='upper_off' onClick={(e) => handleCommand(ControlCommands.EDGE_BLENDING_UPPER_OFF)} >Uppper Off</Button>\n            </ButtonGroup>\n\n            <ButtonGroup style={buttonGroupStyle} key='right_keys' variant=\"outlined\">\n                <Button style={buttonStyle} key='right_on' onClick={(e) => handleCommand(ControlCommands.EDGE_BLENDING_RIGHT_ON)} >Right On</Button>\n                <Button style={buttonStyle} key='right_off' onClick={(e) => handleCommand(ControlCommands.EDGE_BLENDING_RIGHT_OFF)} >Right Off</Button>\n            </ButtonGroup>\n\n            <ButtonGroup style={buttonGroupStyle} key='lower_keys' variant=\"outlined\">\n                <Button style={buttonStyle} key='lower_on' onClick={(e) => handleCommand(ControlCommands.EDGE_BLENDING_LOWER_ON)} >Lower On</Button>\n                <Button style={buttonStyle} key='lower_off' onClick={(e) => handleCommand(ControlCommands.EDGE_BLENDING_LOWER_OFF)} >Lower Off</Button>\n            </ButtonGroup>\n\n            <ButtonGroup style={buttonGroupStyle} key='left_keys' variant=\"outlined\">\n                <Button style={buttonStyle} key='left_on' onClick={(e) => handleCommand(ControlCommands.EDGE_BLENDING_LEFT_ON)} >Left On</Button>\n                <Button style={buttonStyle} key='left_off' onClick={(e) => handleCommand(ControlCommands.EDGE_BLENDING_LEFT_OFF)} >Left Off</Button>\n            </ButtonGroup>\n            </div>\n        </Dialog>\n    );\n}","import { makeStyles } from \"@material-ui/core\";\n\nexport const dropdownStyle= makeStyles((theme) => ({\n    formControl: {\n      margin: theme.spacing(1),\n      minWidth: 120,\n    },\n    selectEmpty: {\n      marginTop: theme.spacing(2),\n    },\n  }));","import { ControlKeys, ControlCommands } from '../../util/constants'\nimport { FormControl, InputLabel, Select, MenuItem, } from '@material-ui/core'\nimport { dropdownStyle } from './DropdownStyle'\n\ninterface TestPatterProps {\n    handleCommand: (e: ControlKeys) => void\n}\n\n\nconst useStyles = dropdownStyle\nexport default function Testpattern(props: TestPatterProps) {\n    const { handleCommand } = props\n    const classes = useStyles()\n\n    return (\n        <>\n            <FormControl className={classes.formControl}>\n                <InputLabel id='test_pattren'>Test Pattren</InputLabel>\n                <Select labelId='test_pattren' id='test_pattren_select'\n                    value={''} onChange={((e) => handleCommand(e.target.value as ControlKeys))}>\n                    <MenuItem value={ControlCommands.TEST_PATTERN_OFF}>Off</MenuItem>\n                    <MenuItem value={ControlCommands.TEST_PATTERN_WHITE}>White</MenuItem>\n                    <MenuItem value={ControlCommands.TEST_PATTERN_BLACK}>Black</MenuItem>\n                    <MenuItem value={ControlCommands.TEST_PATTERN_FOCUS_RED}>Focus Red</MenuItem>\n                    <MenuItem value={ControlCommands.TEST_PATTERN_FOCUS_WHITE}>Focus White</MenuItem>\n                </Select>\n\n            </FormControl>\n        </>)\n}","    import { Dialog, DialogTitle, Button, ButtonGroup} from \"@material-ui/core\";\nimport { CSSProperties } from \"react\";\nimport {  ControlCommands, HandleCommand } from '../util/constants'\n\nimport Testpattern from \"./CommandInterfaces/Testpattern\";\n\ninterface MenuDialog_Props {\n    open: boolean,\n    handleClose: () => void,\n    handleCommand: HandleCommand\n}\n\nexport default function MenuDialog(props: MenuDialog_Props) {\n    const { open, handleClose, handleCommand } = props\n   \n    const buttonStyle: CSSProperties = {\n        padding: '20px',\n        width: '100px',\n       \n    }\n    const buttonGroupStyle: CSSProperties = {\n        justifyContent: 'center',\n        textAlign: 'center'\n        \n    }\n    return (\n        <Dialog key='menu_dialog' onClose={handleClose} aria-labelledby=\"simple-dialog-title\" open={open}>\n            <DialogTitle style={buttonGroupStyle} key='menu_dialog_title' id=\"simple-dialog-title\">Menu Commands</DialogTitle>\n            <ButtonGroup style={buttonGroupStyle} key='menu_main_keys' variant=\"outlined\">\n                <Button style={buttonStyle} key='menu' onClick={(e) => handleCommand(ControlCommands.MENU)} >Menu</Button>\n                <Button style={buttonStyle} key='enter' onClick={(e) => handleCommand(ControlCommands.MENU_DEFAULT_KEY)} >Default</Button>\n            </ButtonGroup>\n\n            <br></br>\n\n            <ButtonGroup style={buttonGroupStyle} key='menu_row1_keys' variant=\"outlined\">\n                <Button style={buttonStyle} key='up' onClick={(e) => handleCommand(ControlCommands.MENU_UP_KEY)} >Up</Button>\n            </ButtonGroup>\n\n            <ButtonGroup style={buttonGroupStyle} key='menu_row2_keys' variant=\"outlined\">\n                <Button style={buttonStyle} key='left' onClick={(e) => handleCommand(ControlCommands.MENU_LEFT_KEY)} >Left</Button>\n                <Button style={buttonStyle} key='enter' onClick={(e) => handleCommand(ControlCommands.MENU_ENTER_KEY)} >Enter</Button>\n                <Button style={buttonStyle} key='right' onClick={(e) => handleCommand(ControlCommands.MENU_RIGHT_KEY)} >Right</Button>\n            </ButtonGroup>\n\n            <ButtonGroup style={buttonGroupStyle} key='menu_row3_keys' variant=\"outlined\">\n                <Button style={buttonStyle} key='down' onClick={(e) => handleCommand(ControlCommands.MENU_DOWN_KEY)} >Down</Button>\n            </ButtonGroup>\n\n            <ButtonGroup style={buttonGroupStyle} key='menu_row4_keys' variant=\"outlined\">\n                <Button style={buttonStyle} key='osd on' onClick={(e)=>handleCommand(ControlCommands.OSD_ON)}>OSD ON</Button>\n                <Button style={buttonStyle} key='osd off' onClick={(e)=>handleCommand(ControlCommands.OSD_OFF)}>OSD OFF</Button>\n                <Button style={buttonStyle} key='freeze on' onClick={(e)=>handleCommand(ControlCommands.FREEZE_ON)}>Freeze ON</Button>\n                <Button style={buttonStyle} key='freeze off' onClick={(e)=>handleCommand(ControlCommands.FREEZE_OFF)}>Freeze Off</Button>\n            </ButtonGroup>\n\n\n           <Testpattern handleCommand={handleCommand} />\n           \n\n        </Dialog>\n    );\n}\n\n/*\n\n            <ButtonGroup style={buttonGroupStyle} key='ceiling_mount_keys' variant='outlined'>\n                <Button style={buttonStyle} key='ceiling_mount_on' onClick={(e)=>handleCommand(ControlCommands.CEILING_MOUNT_ON)}>Ceiling On</Button>\n                <Button style={buttonStyle} key='ceiling_mount_off' onClick={(e)=>handleCommand(ControlCommands.CEILING_MOUNT_OFF)}>Ceiling Off</Button>\n            </ButtonGroup>\n            <ButtonGroup style={buttonGroupStyle} key='ceiling_mount_keys' variant='outlined'>\n                <Button style={buttonStyle} key='power_hog' onClick={(e)=>handleCommand(ControlCommands.POWER_HOG_ON)}>Barco POWER HOG</Button>\n               \n            </ButtonGroup>\n            */","import {Button, Dialog, DialogActions, DialogTitle, DialogContent, DialogContentText } from \"@material-ui/core\";\nimport { ControlKeys } from \"../util/constants\";\ninterface Alert_Props{\n    open: boolean,\n    handleCommand: (cmd: ControlKeys)=>void,\n    handleClose: ()=>void,\n    command: ControlKeys,\n    header: string,\n    message: string\n}\nexport default function Alert(props: Alert_Props){\n    const {open,handleCommand, command, handleClose, header, message} = props\n\n    const handleClick=(approval: boolean)=>{\n        if(approval){\n            handleCommand(command)\n        }\n        handleClose()\n\n    }\n    return (\n        <Dialog\n        open={open}\n        onClose={handleClose}\n        aria-labelledby=\"alert-dialog-title\"\n        aria-describedby=\"alert-dialog-description\"\n      >\n        <DialogTitle id=\"alert-dialog-title\">{header}</DialogTitle>\n        <DialogContent>\n          <DialogContentText id=\"alert-dialog-description\">\n            <span style={{width:'50'}}>{message}</span>\n          </DialogContentText>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={(e)=>handleClick(false)} color=\"primary\">\n            Cancle\n          </Button>\n          <Button onClick={(e)=>handleClick(true)} color=\"primary\" autoFocus>\n            Okay\n          </Button>\n        </DialogActions>\n      </Dialog>\n        \n    )\n}","import { ButtonGroup, Button } from \"@material-ui/core\";\nimport { useState } from \"react\";\nimport { ControlKeys, ControlCommands, ButtonStyle } from \"../../util/constants\";\nimport Alert from \"../Alert\";\n\ninterface Props{\n    handleCommand: (e: ControlKeys) => void\n}\nexport default function LensCal(props: Props){\n    const {handleCommand} = props\n    const [openHomeAlert, setOpenHomeAlert]= useState(false)\n    const [openCalAlert, setOpenCalAlert]= useState(false)\n    return(\n        <div style={{margin:'auto'}}>\n        <ButtonGroup key='shutters' color=\"primary\" variant=\"outlined\">\n        <Button  key='home'  style={ButtonStyle}  onClick={(e) => setOpenHomeAlert(true)} >Lens Home</Button>\n        <Button  key='cal' style={ButtonStyle}  onClick={(e) => setOpenCalAlert(true)} >Lens Cal</Button>\n    </ButtonGroup>\n    <Alert open={openHomeAlert} handleCommand={handleCommand} handleClose={()=>setOpenHomeAlert(false)}\n        header='Home Lense' message='Are you sure?' command={ControlCommands.LENS_POSTION_HOME}/>\n        <Alert open={openCalAlert} handleCommand={handleCommand} handleClose={()=>setOpenCalAlert(false)}\n        header='Cal Lens' message='Are you sure?' command={ControlCommands.LENS_POSTION_HOME}/>\n        </div>\n    )\n}","import { Dialog, DialogTitle, Button, ButtonGroup, Accordion, AccordionSummary, Typography, AccordionDetails, Container } from \"@material-ui/core\";\nimport ExpandMore from \"@material-ui/icons/ExpandMore\";\nimport { CSSProperties, useState } from \"react\";\nimport { ControlKeys, ControlCommands } from '../util/constants'\nimport LensCal from \"./CommandInterfaces/LensCal\";\ninterface MenuDialog_Props {\n    open: boolean,\n    handleClose: () => void,\n    handleCommand: (e: ControlKeys) => void\n}\n\nexport default function MenuDialog(props: MenuDialog_Props) {\n    const { open, handleClose, handleCommand } = props\n    const [shift, setShift] =useState(false)\n    const [focus, setFocus] = useState(false)\n    const [zoom, setZoom] = useState(false)\n   \n    const buttonStyle: CSSProperties = {\n        padding: '20px',\n        width: '50px',\n        touchAction: 'manipulation'\n       \n    }\n    const buttonGroupStyle: CSSProperties = {\n        justifyContent: 'center',\n        textAlign: 'center'\n        \n    }\n    const close=()=>{\n        setShift(false)\n        setZoom(false)\n        setFocus(false)\n        handleClose()\n    }\n    const getButton=(cmd: ControlKeys, text: string)=>{\n        return <Button style={buttonStyle} key={text} onClick={(e)=>handleCommand(cmd)}>{text}</Button>\n    }\n    return (\n        <Dialog key='lens_dialog' onClose={close} aria-labelledby=\"simple-dialog-title\" open={open}>\n            <DialogTitle style={buttonGroupStyle} key='menu_dialog_title' id=\"simple-dialog-title\">Lens Commands</DialogTitle>\n            <LensCal handleCommand={handleCommand} />\n            <Accordion key=\"shift\" style={{width:'100%'}} expanded={shift} onChange={()=>setShift(!shift)}>\n                <AccordionSummary expandIcon={<ExpandMore/>} aria-controls='shift' id='shift-panel' >\n                    <Typography> Shift</Typography>\n                </AccordionSummary>\n                <AccordionDetails>\n                    <Container style={{width: '70%', marginLeft: '0', paddingLeft:'0'}}>\n            <ButtonGroup style={buttonGroupStyle} key='h_shif' variant=\"outlined\">\n            {getButton(ControlCommands.LENS_SHIFT_H_FN, '<<<')}\n            {getButton(ControlCommands.LENS_SHIFT_H_NN, '<<')}\n            {getButton(ControlCommands.LENS_SHIFT_H_SN, '<')}\n                {getButton(ControlCommands.LENS_SHIFT_H_SP, '>')}\n                {getButton(ControlCommands.LENS_SHIFT_H_NP, '>>')}\n                {getButton(ControlCommands.LENS_SHIFT_H_FP, '>>>')}\n            </ButtonGroup>\n           \n            <br></br>\n          \n            <ButtonGroup style={buttonGroupStyle} key='v_shift' variant=\"outlined\">\n            {getButton(ControlCommands.LENS_SHIFT_V_FN, '^^^')}\n            {getButton(ControlCommands.LENS_SHIFT_V_NN, '^^')}\n            {getButton(ControlCommands.LENS_SHIFT_V_SN, '^')}\n                {getButton(ControlCommands.LENS_SHIFT_V_SP, 'v')}\n                {getButton(ControlCommands.LENS_SHIFT_V_NP, 'vv')}\n                {getButton(ControlCommands.LENS_SHIFT_V_FP, 'vvv')}\n            </ButtonGroup>\n            </Container>\n            </AccordionDetails>\n            </Accordion>\n            <br></br>\n            <Accordion key=\"shift\" expanded={focus} onChange={()=>setFocus(!focus)}>\n                <AccordionSummary expandIcon={<ExpandMore/>} aria-controls='focus' id='focus-panel' >\n                    <Typography> Focus</Typography>\n                </AccordionSummary>\n                <AccordionDetails>\n                <Container style={{width: '70%', marginLeft: '0', paddingLeft:'0'}}>\n            <ButtonGroup style={buttonGroupStyle} key='foucs' variant=\"outlined\">\n            {getButton(ControlCommands.LENS_FOCUS_FN, '<<<\\r')}\n            {getButton(ControlCommands.LENS_FOCUS_NN, '<<\\r')}\n            {getButton(ControlCommands.LENS_FOCUS_SN, '<\\r')}\n            {getButton(ControlCommands.LENS_FOCUS_SP, '>\\r')}\n            {getButton(ControlCommands.LENS_FOCUS_NP, '>>\\r')}\n            {getButton(ControlCommands.LENS_FOCUS_FP, '>>>\\r')}\n            </ButtonGroup>\n            </Container>\n            </AccordionDetails>\n            </Accordion>\n            <br></br>\n            <Accordion key=\"zoom\" expanded={zoom} onChange={()=>setZoom(!zoom)}>\n                <AccordionSummary expandIcon={<ExpandMore/>} aria-controls='zoom' id='zoom-panel' >\n                    <Typography> Zoom</Typography>\n                </AccordionSummary>\n                <AccordionDetails>\n                <Container style={{width: '70%', marginLeft: '0', paddingLeft:'0'}}>\n            <ButtonGroup style={buttonGroupStyle} key='zoom' variant=\"outlined\">\n            {getButton(ControlCommands.LENS_ZOOM_FN, '---')}\n            {getButton(ControlCommands.LENS_ZOOM_NN, '--')}\n            {getButton(ControlCommands.LENS_ZOOM_SN, '-')}\n            {getButton(ControlCommands.LENS_ZOOM_SP, '+')}\n            {getButton(ControlCommands.LENS_ZOOM_NP, '++')}\n            {getButton(ControlCommands.LENS_ZOOM_FP, '+++')}\n            </ButtonGroup>\n            </Container>\n            </AccordionDetails>\n            </Accordion>\n\n\n        </Dialog>\n    );\n}","import { ButtonGroup, Button } from \"@material-ui/core\";\nimport { useState } from \"react\";\nimport { ControlKeys, ControlCommands, ButtonStyle } from \"../../util/constants\";\nimport Alert from \"../Alert\";\n\ninterface PowerProps{\n    handleCommand: (e: ControlKeys) => void\n}\nexport default function Power(props: PowerProps){\n    const {handleCommand} = props\n    const [openPowerOnAlert, setOpenPowerOnAlert]= useState(false)\n    const [openPowerOffAlert, setOpenPowerOffAlert]= useState(false)\n    return(\n        <>\n        <ButtonGroup key='shutters' color=\"primary\" variant=\"outlined\">\n        <Button  key='power off'  style={ButtonStyle}  onClick={(e) => setOpenPowerOffAlert(true)} >Power Off</Button>\n        <Button  key='power on' style={ButtonStyle}  onClick={(e) => setOpenPowerOnAlert(true)} >Power On</Button>\n    </ButtonGroup>\n    <Alert open={openPowerOffAlert} handleCommand={handleCommand} handleClose={()=>setOpenPowerOffAlert(false)}\n        header='Power Off' message='Are you sure?' command={ControlCommands.POWER_OFF}/>\n        <Alert open={openPowerOnAlert} handleCommand={handleCommand} handleClose={()=>setOpenPowerOnAlert(false)}\n        header='Power On' message='Are you sure?' command={ControlCommands.POWER_ON}/>\n        </>\n    )\n}","import { ButtonGroup, Button } from \"@material-ui/core\"\nimport { ControlKeys, ControlCommands, ButtonStyle } from \"../../util/constants\"\n\ninterface ShutterProps{\n    handleCommand: (e: ControlKeys) => void\n}\nexport default function Shutter(props: ShutterProps){\n    const {handleCommand} = props\n    return (\n        <ButtonGroup key='power' color=\"primary\" variant=\"outlined\">\n        <Button  key='shutter_on' style={ButtonStyle} onClick={(e) => handleCommand(ControlCommands.SHUTTER_CLOSED)} >Shutter Closed(i)</Button>\n        <Button  key='sutter_off' style={ButtonStyle}  onClick={(e) => handleCommand(ControlCommands.SHUTTER_OPEN)} >Shutter Open(o)</Button>\n        </ButtonGroup>\n    )\n}","import {ControlKeys, ControlCommands} from '../../util/constants'\nimport {FormControl, InputLabel, Select, MenuItem} from '@material-ui/core'\nimport { dropdownStyle } from './DropdownStyle'\n\ninterface Props{\n    handleCommand: (e: ControlKeys) => void\n}\n\n\nconst useStyles = dropdownStyle\nexport default function BackColor(props: Props){\n    const {handleCommand} = props\n    const classes = useStyles()\n\n    return (\n        <>\n    <FormControl className={classes.formControl}>\n    <InputLabel id='backcolor'>Back Color</InputLabel>\n    <Select labelId='backcolor' id='backcolor'\n     value={''} onChange={((e)=> handleCommand(e.target.value as ControlKeys))}>\n         <MenuItem value={ControlCommands.BACK_COLOR_BLUE}>Blue</MenuItem>\n         <MenuItem value={ControlCommands.BACK_COLOR_BLACK}>Black</MenuItem>\n         <MenuItem value={ControlCommands.BACK_COLOR_DEFAULT_LOGO}>Default Logo</MenuItem>\n         <MenuItem value={ControlCommands.BACK_COLOR_USER_LOGO}>User Logo</MenuItem>\n     </Select>\n     \n</FormControl>\n</> )\n}","import {ControlKeys, ControlCommands} from '../../util/constants'\nimport {FormControl, InputLabel, Select, MenuItem} from '@material-ui/core'\nimport { dropdownStyle } from './DropdownStyle'\n\ninterface OSDProps{\n    handleCommand: (e: ControlKeys) => void\n}\n\n\nconst useStyles = dropdownStyle\nexport default function OSDPostion(props: OSDProps){\n    const {handleCommand} = props\n    const classes = useStyles()\n\n    return (\n        <>\n    <FormControl className={classes.formControl}>\n    <InputLabel id='osd_position'>OSD Position</InputLabel>\n    <Select labelId='osd_position' id='osd_postion'\n     value={''} onChange={((e)=> handleCommand(e.target.value as ControlKeys))}>\n         <MenuItem value={ControlCommands.OSD_POSITION_UPPER_LEFT}>Upper Left</MenuItem>\n         <MenuItem value={ControlCommands.OSD_POSITION_CENTER_LEFT}>Center Left</MenuItem>\n         <MenuItem value={ControlCommands.OSD_POSITION_LOWER_LEFT}>Lower Left</MenuItem>\n         <MenuItem value={ControlCommands.OSD_POSITION_TOP_CENTER}>Top Center</MenuItem>\n         <MenuItem value={ControlCommands.OSD_POSITION_CENTER}>Center</MenuItem>\n         <MenuItem value={ControlCommands.OSD_POSITION_LOWER_CENTER}>Lower Center</MenuItem>\n         <MenuItem value={ControlCommands.OSD_POSITION_UPPER_RIGHT}>Upper Right</MenuItem>\n         <MenuItem value={ControlCommands.OSD_POSITION_LOWER_RIGHT}>Lower Right</MenuItem>\n     </Select>\n     \n</FormControl>\n</> )\n}","import {ControlKeys, ControlCommands, HandleCommand} from '../../util/constants'\nimport {FormControl, InputLabel, Select, MenuItem} from '@material-ui/core'\nimport { dropdownStyle } from './DropdownStyle'\n\ninterface Props{\n    handleCommand: HandleCommand\n}\n\n\nconst useStyles = dropdownStyle\nexport default function OSDRotation(props: Props){\n    const {handleCommand} = props\n    const classes = useStyles()\n\n    return (\n        <>\n    <FormControl className={classes.formControl}>\n    <InputLabel id='osdRotation'>OSD Rotation</InputLabel>\n    <Select labelId='osdRotation' id='osdRotation'\n     value={''} onChange={((e)=> handleCommand(e.target.value as ControlKeys))}>\n         <MenuItem value={ControlCommands.OSD_ROTATION_OFF}>Off</MenuItem>\n         <MenuItem value={ControlCommands.OSD_ROTATION_CLOCKWISE}>Clockwise</MenuItem>\n         <MenuItem value={ControlCommands.OSD_ROTATION_COUNTERCLOCKWISE}>Counter Clockwise</MenuItem>\n     </Select>\n     \n</FormControl>\n</> )\n}","import {ControlKeys, ControlCommands} from '../../util/constants'\nimport {FormControl, InputLabel, Select, MenuItem} from '@material-ui/core'\nimport { dropdownStyle } from './DropdownStyle'\n\ninterface OSDProps{\n    handleCommand: (e: ControlKeys) => void\n}\n\n\nconst useStyles = dropdownStyle\nconst id = 'pj_postion'\nexport default function PJPositon(props: OSDProps){\n    const {handleCommand} = props\n    const classes = useStyles()\n    \n    return (\n        <>\n    <FormControl className={classes.formControl}>\n    <InputLabel id={id}>PJ Position</InputLabel>\n    <Select labelId={id} id={id}\n     value={''} onChange={((e)=> handleCommand(e.target.value as ControlKeys))}>\n         <MenuItem key='fa' value={ControlCommands.PROJECTOR_INSTALL_METHOD_FRONT_AUTO}>Front/Auto</MenuItem>\n         <MenuItem key='fc' value={ControlCommands.PROJECTOR_INSTALL_METHOD_FRONT_CEILING}>Front/Ceiling</MenuItem>\n         <MenuItem key='fd' value={ControlCommands.PROJECTOR_INSTALL_METHOD_FRONT_DESK}>Front/Desk</MenuItem>\n         <MenuItem key='ra' value={ControlCommands.PROJECTOR_INSTALL_METHOD_REAR_AUTO}>Rear/Auto</MenuItem>\n         <MenuItem key='rc' value={ControlCommands.PROJECTOR_INSTALL_METHOD_REAR_CEILING}>Rear/Ceiling</MenuItem>\n         <MenuItem key='rd' value={ControlCommands.PROJECTOR_INSTALL_METHOD_REAR_DESK}>Rear/Desk</MenuItem>\n     </Select>\n     \n</FormControl>\n</> )\n}","import { Box, Slider,Typography } from \"@material-ui/core\";\nimport { ChangeEvent, useState } from \"react\";\nimport { ControlKeys, HandleCommand } from \"../../util/constants\";\n\ninterface slider_props{\n    handleCommand: HandleCommand\n    cmd: ControlKeys\n    min: number\n    max: number\n    label: string\n}\nexport default function QuickSlider(props: slider_props){\n    const {handleCommand,cmd, min,max, label}=props\n    const [value, setValue] =useState(max)\n    const handleChange=(event: ChangeEvent<{}>, newValue: number | number[])=>{\n        console.log('sliddder',newValue)\n        setValue(newValue as number)\n        handleCommand(cmd,newValue+'')\n\n    }\n    return(\n    <Box style={{width:200}}>\n        <Typography id=\"input-slider\" gutterBottom>\n        {label}\n      </Typography>\n        <Slider value={value} min={min} max={max} onChange={handleChange}/>\n    </Box>\n\n    )\n}","import { Dialog, DialogTitle, Button, TextField, Container, Fade } from \"@material-ui/core\";\nimport { CSSProperties, useState, useEffect } from \"react\";\nimport { ControlKeys, ControlCommands, HandleCommand, PJ_OBJ } from '../util/constants'\nimport BackColor from \"./CommandInterfaces/BackColor\";\nimport OSDPostion from \"./CommandInterfaces/OSDPostion\";\nimport OSDRotation from \"./CommandInterfaces/OSDRotation\";\nimport PJPositon from \"./CommandInterfaces/PJPostion\";\nimport QuickSlider from \"./CommandInterfaces/QuickSlider\";\ninterface Props {\n    open: boolean,\n    handleClose: () => void,\n    handleCommand: HandleCommand,\n    active: number[],\n    pj: PJ_OBJ\n}\n\nexport default function ProjectorSetup(props: Props) {\n    const { open, handleClose, handleCommand, pj, active } = props\n    const [name, setName] = useState( '' )\n    const [ID, setID] = useState('')\n    const buttonStyle: CSSProperties = {\n        padding: '20px',\n        width: '100px',\n        margin: 'auto'\n       \n    }\n    const buttonGroupStyle: CSSProperties = {\n        justifyContent: 'center',\n        textAlign: 'center'\n        \n    }\n\n    useEffect(()=>{\n        if(pj && pj.name){\n            setName(pj.name)\n        }\n    },[pj])\n\n\n    const handleClick=(cmd: ControlKeys)=>{\n        switch (cmd){\n            case ControlCommands.PROJECTOR_NAME:\n                handleCommand(cmd, name)\n                break\n            case ControlCommands.PROJECTOR_ID:\n                handleCommand(cmd, ID)\n                break;\n        }\n       \n        handleClose()\n    }\n    \n    const getButton=(cmd: ControlKeys, text: string, popUp: boolean)=>{\n\n        return <Button style={buttonStyle} key={text} onClick={(e)=>handleClick(cmd)}>{text}</Button>\n    }\n    return (\n        <Dialog key='setup_dialog' onClose={handleClose} aria-labelledby=\"simple-dialog-title\" open={open} >\n            <DialogTitle style={buttonGroupStyle} key='menu_dialog_title' id=\"simple-dialog-title\">PJ Setup</DialogTitle>\n            <span style={{width:300}}/>\n        <OSDPostion handleCommand={handleCommand}/>   \n        <OSDRotation handleCommand={handleCommand}/>\n        <PJPositon handleCommand={handleCommand}/> \n        <BackColor handleCommand={handleCommand}/>\n        <QuickSlider handleCommand={handleCommand} min={50} max={1000} cmd={ControlCommands.LIGHT_OUTPUT} label='Light Output'/>\n        {active.length ===1?<>\n        <Container key='name'>    \n            <TextField key='pj_name_input' label='PJ Name' value={name} onChange={(e)=>setName(e.target.value)}></TextField>\n            {getButton(ControlCommands.PROJECTOR_NAME, 'Store Name', true)}\n        </Container>    \n        <Container key='id'>\n            <TextField key='pj_id_input' label='PJ Input' value={ID} onChange={(e)=>setID(e.target.value)}></TextField>\n            {getButton(ControlCommands.PROJECTOR_ID, 'Store ID', true)}\n        </Container>\n        </>:<></>}\n        \n        </Dialog>\n    );\n}","import { Button, Paper, ButtonGroup, } from \"@material-ui/core\";\nimport {useState} from 'react'\nimport { ButtonStyle, HandleCommand, PJs} from \"../util/constants\";\nimport BlendDialog from \"./BlendDialog\";\nimport MenuDialog from './MenuDialog'\nimport LensDialog from './LensDialog'\nimport Power from './CommandInterfaces/Power'\nimport Shutter from \"./CommandInterfaces/Shutter\";\nimport ProjectorSetupDialog from \"./ProjectorSetupDialog\";\nimport { useEffect } from \"react\";\n\ninterface command_props{\n    handleCommand: HandleCommand\n    active: number[]\n    pjs: PJs\n}\nexport default function CommandPad(props:command_props){\n    const {handleCommand, active, pjs } = props\n    const [menuOpen, setMenuOpen] = useState(false)\n    const [blendOpen, setBlendOpen] = useState(false)\n    const [lensOpen,setLensOpen] = useState(false)\n    const [pjSetupOpen,setPJSetupOpen] =useState(false)\n\n    useEffect(()=>{\n        if(active.length!==1 || !pjs[active[0]]){\n            setPJSetupOpen(false)\n        }\n    },[active, pjs])\n    \n    const getPJ=()=>{\n        return pjs[active[0]]\n    }\n    return(\n       <>\n        <Paper  key='commandKeys' style={{width:'300px'}}>\n           <Shutter handleCommand={handleCommand}/>\n            <br></br>\n           <Power handleCommand={handleCommand}/>\n            <ButtonGroup color=\"primary\" variant=\"outlined\">\n                <Button color=\"primary\" key='menu' variant=\"contained\" style={ButtonStyle}  onClick={(e) => setMenuOpen(!menuOpen)} >Menu</Button>\n                <Button color=\"primary\" key='blend' variant=\"contained\" style={ButtonStyle}  onClick={(e) => setBlendOpen(!blendOpen)} >Blend</Button>\n            </ButtonGroup>\n            <ButtonGroup color='primary' variant='outlined'>\n                <Button key='lens' variant=\"contained\" style={ButtonStyle} onClick={((e)=>setLensOpen(!lensOpen))}>Lens</Button>\n                (<Button key='pj_setup' variant=\"contained\"  style={ButtonStyle} onClick={((e)=>setPJSetupOpen(!pjSetupOpen))}>PJ Setup</Button>)\n            </ButtonGroup>\n            \n            <MenuDialog open={menuOpen} handleClose={()=>setMenuOpen(false)} handleCommand={handleCommand}/>\n            <BlendDialog open={blendOpen} handleClose={()=>setBlendOpen(false)} handleCommand={handleCommand}/>\n            <LensDialog open={lensOpen} handleClose={()=>setLensOpen(false)} handleCommand={handleCommand} />\n            <ProjectorSetupDialog open={pjSetupOpen} handleClose={()=>setPJSetupOpen(false)} active={active} pj={getPJ()} handleCommand={handleCommand} />\n        </Paper>\n       \n        </>\n    )\n}\n","\nimport * as C from './constants'\n\n\n\nconst log=(s:string)=>{\n    console.log(s)\n}\nlet _world : number[] =[]\nlet _groups :C.Groups = {}\nexport function processCMD(cmdLine: string, selected: number[], world: number[], groups: C.Groups) {\n    _world = world\n    _groups= groups\n    cmdLine = cmdLine.trim()\n    let cmds = cmdLine.split(' ')\n    console.group('CMDs '+cmds)\n  \n    let processed = parse(cmds)\n    log('Parsed: '+processed)\n    processed = handleSelected(processed,selected)\n    log('Filtred: '+processed)\n\n    processed = processed.filter(p=> world.includes(p))\n    log('Worlds: '+processed)\n    console.groupEnd()\n    return processed\n}\n\nfunction handleSelected(processed: number[], selected: number[]):number[]{\n    let newSelected = selected\n    \n    for(let i=0; i<processed.length; i++){\n        let p = processed[i]\n        if(p<0 && newSelected.includes(p*-1)){\n            newSelected = newSelected.filter((n)=> n!== (p*-1))\n        } else if(!newSelected.includes(p) && p>0){\n            newSelected.push(p)\n        }\n    }\n    return newSelected\n    \n}\n\nfunction parse(cmdArray: string[], parsed: number[] = []): number[] {\n    \n    if (cmdArray.length === 0){ \n        //log('Parsing Tree Complete')\n        console.groupEnd()\n        return parsed;\n    }\n    console.group('Parsing: '+cmdArray+ ' |  '+parsed)\n    switch (cmdArray[0]) {\n        case C.commands.THRU:\n            log('Parsing THRU')\n            return parseThru(cmdArray, parsed)\n        case C.commands.GROUP:\n            log('Parsing GROUP')\n            return parseGroup(cmdArray,parsed)\n        case '-':\n            log('Parsing Negative')\n            return parseNegative(cmdArray, parsed)\n        case '+':\n            log('Parsing Postive')\n            return parsePostive(cmdArray,parsed)\n        default:\n            log('Parsing Number')\n            return parseNumber(cmdArray, parsed)\n    }\n}\nfunction parseNumber(cmdArray: string[], parsed: number[]): number[] {\n    if (!cmdArray) return []\n    let i = Number.parseInt(cmdArray[0])\n    \n    if (isFinite(i)) {\n        parsed.push(i)\n     //   log('parsedNumber: '+i+' | '+parsed)\n        return parse(cmdArray.slice(1), parsed)\n    }\n    console.error('Invalid Number', i)\n    return parsed\n\n}\n\nfunction parsePostive(cmdArray:string[], parsed: number[]):number[]{\n    if(!cmdArray) return []\n    let i = 1\n  //  log('CMD Lenght: '+cmdArray.length)\n  //  log(i+' '+cmdArray[i])\n    while(cmdArray[i+1] !=='+' && cmdArray[i+1] !== '-' && i< cmdArray.length){\n        i++\n      //  log(i+' '+cmdArray[i]+' '+(cmdArray[i]==='+'))\n    }\n    let slice = []\n    if(i===1){\n        slice = cmdArray.slice(1,2)\n    } else{\n        slice = cmdArray.slice(1,i+1)\n    }\n    log(cmdArray+' | Postive Slice ('+ cmdArray[i] + ' @ '+i+') '+slice)\n    let sub = parse(slice)\n\n    \n //   log('Sub '+sub+ ' | '+cmdArray[i+1]+' i:'+ i + ' ' +cmdArray.slice(i+1))\n    return parse(cmdArray.slice(i+1),parsed.concat(sub))\n}\n\nfunction parseNegative(cmdArray: string[], parsed: number[]): number[] {\n  \n        if(!cmdArray) return []\n        let i = 1\n   //     log('CMD Lenght: '+cmdArray.length)\n   //    log(i+' '+cmdArray[i])\n        while(cmdArray[i+1] !=='+' && cmdArray[i+1] !== '-' && i< cmdArray.length){\n            i++\n     //       log(i+' '+cmdArray[i]+' '+(cmdArray[i]==='+'))\n        }\n        let slice = []\n        if(i===1){\n            slice = cmdArray.slice(1,2)\n        } else{\n            slice = cmdArray.slice(1,i+1)\n        }\n        log(cmdArray+' | Negative Slice ('+ cmdArray[i] + ' @ '+i+') '+slice)\n        let sub = parse(slice)\n \n        for(let n=0; n<sub.length;n++){\n            sub[n] = sub[n]*-1\n        }\n     //   log('Sub '+sub+ ' | '+cmdArray[i+1]+' i:'+ i + ' ' +cmdArray.slice(i+1))\n        return parse(cmdArray.slice(i+1),parsed.concat(sub))\n\n}\nfunction parseThru(cmdArray: string[], parsed:number[]):number[] {\n    if(cmdArray.length ===0) return []\n    let i = parsed.pop()\n    if(!i) { \n        console.error('Invalid THRU Placement. Number Must Procced THRU CMD')\n        return []\n    }\n  //  log(''+cmdArray.slice(1))\n    let n = parse(cmdArray.slice(1,2))[0]\n    if(!n){\n        n = Math.max(..._world)\n        //console.error('Invaild THRU Placement. Number Must Follow THRU CMD', n)\n        //return []\n    }\n    let sub = []\n    let negative = 1\n    if(i<0){\n        i = i*-1\n        negative = -1\n    }\n    if(i<n){\n        for(let x = i; x<=n;x++){\n            sub.push(x*negative)\n        }\n    } else{\n        for(let x=n; x<=i; x++){\n            sub.push(x*negative)\n        }\n    }\n    return parse(cmdArray.slice(2),parsed.concat(sub))\n\n}\nfunction parseGroup(cmdArray: string[], parsed:number[]):number[]{\n    if(cmdArray.length < 1) return []\n    log(cmdArray+' '+parseInt(cmdArray[0])+'')\n    let g = _groups[parseInt(cmdArray[1])]\n    console.table(_groups)\n    if(!g) return []\n    log('Group '+g)\n    return parse(cmdArray.slice(3),parsed.concat(g.group))\n}","import { Button, } from \"@material-ui/core\";\nimport { CSSProperties } from \"react\";\n\nimport { PJ_OBJ } from \"../util/constants\";\n\n\n\ninterface PJCardProps{\n    pj_tupple: {pj:PJ_OBJ,selected: boolean, active: boolean}\n    handlePJCard: (pjID: number) => void;\n}\nexport default function PJCard(props:PJCardProps){\n    const {pj_tupple, handlePJCard} = props\n    let pj = pj_tupple.pj\n\n    //const classes = useStyles();\n\n    const cardStyle: CSSProperties={\n      \n        background: pj_tupple.active? 'gray': 'white',\n        border: pj_tupple.selected? 'thick solid cornflowerBlue' : 0,\n        color: pj_tupple.active || pj_tupple.selected? 'lightwhite': 'black',   \n        width: 80,\n        height: 50\n    }\n    \n    return(\n       \n       <Button variant='contained'  style={cardStyle} onClick={()=>handlePJCard(pj.id)}>{pj.id}\n       </Button>\n       \n       \n    )\n}\n/*\n <Card className={classes.root} variant=\"outlined\" style={cardStyle} key={pj.id+'card'}>\n            <CardContent>\n                <Typography className={classes.title} color={'primary'}>\n                    {pj.name? pj.name: ''}\n                </Typography>\n                <Typography  className={classes.title} color={'primary'}>\n                ({pj.id})\n                </Typography>\n            </CardContent>\n        </Card>\n        */","import { TableCell, TableRow } from \"@material-ui/core\";\nimport { PJ_OBJ } from \"../util/constants\";\nimport BorderColorIcon from '@material-ui/icons/BorderColor';\nimport { CSSProperties } from \"react\";\n\ninterface tableProps{\n    pj_tupple:  {pj:PJ_OBJ,selected: boolean, active: boolean}\n    handlePJSelect: (pjID: number)=> void\n}\n\nexport default function ProgrammerTable(props: tableProps){\n    const {pj_tupple, handlePJSelect} = props\n    let pj = pj_tupple.pj\n\n    const getNameFormat= ():CSSProperties =>{\n        return{\n        background: pj_tupple.active? 'gray': 'white',\n        border: pj_tupple.selected? 'thick solid cornflowerBlue' : 0,\n        color: pj_tupple.active || pj_tupple.selected? 'lightwhite': 'black',\n        }\n\n    }\n    const blendRegion =()=>{\n        let color = ''\n        let regions = [pj.edgeBlendingUpper, pj.edgeBlendingRight, pj.edgeBlendingLower, pj.edgeBlendingLeft]\n        for(let i=0; i < regions.length; i++){\n            switch(regions[i]){\n                case 'On':\n                    color+= ' green'\n                    break;\n                case 'Off':\n                    color+= ' black'\n                    break\n                case 'Unknown':\n                    color+= ' yellow'\n                    break\n                default:\n                    color+=' red'\n            }\n        }\n      \n        return (\n            <p key={pj.id+'bp'} style={{ padding: 10,  margin:'auto', textAlign: 'center', borderStyle: 'solid', borderColor: color}}> {pj.edgeBlending}\n             <BorderColorIcon key={pj.id+'blend'} style={{fontSize:'15', marginLeft: '5', marginTop: 'auto', color:pj.edgeBlendingMarker==='On'?'red':'gray'}} /></p>\n        )\n    }\n    return (\n        <TableRow key={pj.id+'row'}>\n            <TableCell style={getNameFormat()}key={pj.id+'name'} component='th' scope='row' onClick={()=>{handlePJSelect(pj_tupple.pj.id)}}>\n                {pj.name}\n            </TableCell>\n            <TableCell key={pj.id+'id'}>{pj.id}</TableCell>\n            <TableCell key={pj.id+'shutter'}>{pj.shutter}</TableCell>\n            <TableCell key={pj.id+'blendregion'}>{blendRegion()}</TableCell>\n            <TableCell key={pj.id+'markers'}>{pj.edgeBlendingMarker}</TableCell>\n            <TableCell key={pj.id+'test'}>{pj.testPattren}</TableCell>\n            <TableCell key={pj.id+'lamp'}>{pj.lampStatus}</TableCell>\n            <TableCell key={pj.id+'sig'}>{pj.hdmiResolution}/{pj.hdmiSignalLevel}/{pj.hdmiVerticalFrequency}</TableCell>\n            <TableCell key={pj.id+'osd'}>{pj.osdPostion}</TableCell>\n\n        </TableRow>\n    )\n}","\nimport * as C from '../util/constants'\nimport { Paper, makeStyles, Table, TableBody, TableCell, TableContainer, TableHead, TableRow,  Grid, useMediaQuery, GridSize } from '@material-ui/core'\nimport { prefres } from \"../prefrences\"\nimport {  useMemo, useState } from \"react\"\nimport PJCard from \"./PJCard\"\nimport ProgrammerTable from \"./ProgrammerTable\"\n\ninterface Programmer_Props {\n    selected: number[],\n    active: number[],\n    world: number[],\n    prefs: prefres,\n    status: C.RIG_STATUS,\n    pjs: Record<number, C.PJ_OBJ>,\n    handleTableSelect: (id: number) => void\n}\nconst useStyles = makeStyles({\n    root: {\n        flexGrow: 1,\n    },\n    paper: {\n        height: 140,\n        width: 100,\n    },\n    table: {\n        minWidth: 300,\n        maxHeight: 400\n    },\n    \n})\nexport default function Programmer(props: Programmer_Props) {\n    const { active, world, selected, prefs, pjs, handleTableSelect } = props\n    const classes = useStyles()\n\n\n    // const pj = useMemo(()=>getPJ(pjID),[pjID])\n/*\n    const _getPJs = useMemo(() => {\n        world.sort()\n        // console.log('Programmer Making PJs')\n        return world.map(s => {\n\n            let pj = pjs[s] ? pjs[s] : {\n                id: s,\n                online: 'false',\n                shutter: 'Unknown',\n                power: 'Unknown',\n                lastSeen: -1,\n                error: 'NOT SEEN',\n                lampStatus: 'Unknown',\n                edgeBlending: 'Unknown',\n                edgeBlendingMarker: 'Unknown',\n                testPattren: 'Unknown',\n                backColor: 'Unknown',\n                edgeBlendingLeft: 'Unknown',\n                edgeBlendingLower: 'Unknown',\n                edgeBlendingRight: 'Unknown',\n                edgeBlendingUpper: 'Unknown',\n                hdmiResolution: 'Unknown',\n                hdmiSignalLevel: 'Unknown',\n                hdmiVerticalFrequency: 'Unknown',\n                osdPostion: 'Unknown',\n                inputSignalName_Main: 'Unknown',\n                name: 'Unknown'\n            }\n            if ((prefs.showOnlySelected && selected.includes(s)) || !prefs.showOnlySelected) {\n                return <PJ key={'pj id_' + pj.id} pj={pj} handleTableSelect={handleTableSelect} selected={selected.includes(s)} darkMode={prefs.darkMode} active={active.includes(s)} />\n            }\n            return <></>\n\n        })\n    }, [world, active, selected, handleTableSelect, prefs.darkMode, prefs.showOnlySelected, pjs])\n    */\n    const getPJs = useMemo(() => {\n      //  console.groupCollapsed('Recomputing PJ List')\n       // console.log('Active', active)\n       // console.log('Selected', selected)\n        console.groupEnd();\n        world.sort()\n        let pjList: { pj: C.PJ_OBJ, selected: boolean, active: boolean }[] = []\n        world.forEach(s => {\n            let pj = pjs[s] ? pjs[s] :\n                {\n                    id: s,\n                    online: 'false',\n                    shutter: 'Unknown',\n                    power: 'Unknown',\n                    lastSeen: -1,\n                    error: 'NOT SEEN',\n                    lampStatus: 'Unknown',\n                    edgeBlending: 'Unknown',\n                    edgeBlendingMarker: 'Unknown',\n                    testPattren: 'Unknown',\n                    backColor: 'Unknown',\n                    edgeBlendingLeft: 'Unknown',\n                    edgeBlendingLower: 'Unknown',\n                    edgeBlendingRight: 'Unknown',\n                    edgeBlendingUpper: 'Unknown',\n                    hdmiResolution: 'Unknown',\n                    hdmiSignalLevel: 'Unknown',\n                    hdmiVerticalFrequency: 'Unknown',\n                    osdPostion: 'Unknown',\n                    inputSignalName_Main: 'Unknown',\n                    name: 'Unknown'\n                }\n            if ((prefs.showOnlySelected && selected.includes(s)) || !prefs.showOnlySelected) {\n                pjList.push({ pj, selected: selected.includes(s), active: active.includes(s) })\n            }\n\n        })\n        return pjList\n\n    }, [world, pjs, prefs, selected, active])\n\n    \n    const [spacing, setSpacing] = useState( useMediaQuery('(min-width:600px)')? 2 : 0)\n    \n    const getCards = () => {\n       \n        return getPJs.map(pj_tupple => {\n            return <Grid key={'g_' + pj_tupple.pj.id} item xs={spacing as GridSize} style={{margin: 'auto'}}>\n                <PJCard handlePJCard={handleTableSelect} pj_tupple={pj_tupple} />\n            </Grid>\n        })\n    }\n\n    const getRows = () => {\n        return getPJs.map(pj_tupple => {\n\n            return <ProgrammerTable handlePJSelect={handleTableSelect} key={pj_tupple.pj.id+'card'} pj_tupple={pj_tupple} />\n        })\n    }\n    /*\n    const getStyle = (good = true) => {\n        let s: CSSProperties = {\n            width: '50',\n            textAlign: 'center'\n        }\n        if (!good)\n            s.backgroundColor = prefs.darkMode ? 'red' : 'red'\n\n        return s\n    }*/\n    return (\n        <>  {prefs.programmerTableView?\n            <TableContainer key='pjtablecon' component={Paper}>\n                <Table key='pjtablet' className={classes.table} size='small'>\n                    <TableHead key='pjtablehead'>\n                        <TableRow key='pjtableheadrow'>\n                            <TableCell key='pjtable_name'>Name</TableCell>\n                            <TableCell key='pjtable_id'>ID</TableCell>\n                            <TableCell key='pjtable_shutter'>Shutter</TableCell>\n                            <TableCell key='pjtable_blend'>Blend</TableCell>\n                            <TableCell key='pjtable_mark'>Blend Marker</TableCell>\n                            <TableCell key='pjtable_test'>Test Pattren</TableCell>\n                            <TableCell key='pjtable_lamp'>Lamp</TableCell>\n                            <TableCell key='pjtable_hdmi'>HDMI</TableCell>\n                            <TableCell key='pjtable_osd'>OSD</TableCell>\n                        </TableRow>\n                    </TableHead>\n                    <TableBody>\n                        {getRows()}\n                    </TableBody>\n                </Table>\n            </TableContainer>\n        :\n\n            <Grid key='programmer' className={classes.root} spacing={2} container>\n                {getCards()}\n            </Grid>\n}\n        </>\n    )\n}\n/**\n<TableContainer key='p-tc' component={Paper}>\n<Table key='p-t' className={classes.table}>\n    <TableHead key='p-th'>\n        <TableRow key='p-r'>\n            <TableCell style={getStyle()} key='p_pj'> PJ </TableCell>\n            <TableCell style={getStyle(status.shutter)} key='p_s'> Shutter</TableCell>\n            <TableCell style={getStyle(status.blend)} key='p_b'> Blend</TableCell>\n            <TableCell style={getStyle(status.blendMarker)} key='p_bm'> Blend Marker</TableCell>\n            <TableCell style={getStyle(status.testPattren)} key='p_test'> Test Pattern</TableCell>\n            <TableCell style={getStyle(status.lampStatus)} key='p_lamp'> Lamp Status</TableCell>\n            <TableCell style={getStyle(status.hdmiInput)} key='p_hdmi'> HDMI Input</TableCell>\n            <TableCell style={getStyle(status.signalName)} key='p_signal name'> Signal Name</TableCell>\n            <TableCell style={getStyle()} key='p_ls'> Last Seen</TableCell>\n\n        </TableRow>\n    </TableHead>\n    <TableBody>\n        {getPJs}\n    </TableBody>\n</Table>\n</TableContainer>\n*/","import * as C from './constants'\n//const puppeteer = require('puppeteer');\n\nasync function goFetch(query: string){\n    let fetchString = C.pjServer+'api/'+query\n   // console.log(fetchString)\n    try{\n    let res = await fetch(fetchString,{\n       mode: 'no-cors'\n    })\n    \n   // console.table(res.body)\n    if(res.ok){\n      //  console.log(await res.text())\n        //return await res.json()\n        return await res.json()\n    }\n}catch(e){\n    console.log(e)\n}\n    \n    \n}\n\nexport async function getPJ(target:number) {\n    let pj = await goFetch('status/?pj='+target)\n    if(pj){\n        return pj as unknown as C.PJ_OBJ\n    }\n    return undefined\n    \n}\n\nexport async function getPJs(){\n    let pjs = await goFetch('status/?pj=all')\n    if(pjs){\n        return pjs as unknown as Record<number,C.PJ_OBJ>\n    }\n}\nexport async function getRigStatus(){\n   // console.log('Getting Rig Status')\n    let status = await goFetch('status/?rigstatus=all')\n    if(status){\n        return status as unknown as C.RIG_STATUS\n    }\n}\n/*\nexport async function setConfig(item: C.ConfigHeaders, value: string){\n    await goFetch('config/?'+item+\"=\"+value)\n}*/\n\nexport async function setConfig(query: string){\n    await goFetch('config/?'+query)\n}\nexport async function setter(target: number, command:  C.ControlKeys) {\n    console.log('Setting ',target,command)\n    await goFetch('set/?pj='+target+'&command='+command)\n}\nexport async function  powerOff(target: number) {\n     return await setter(target, C.ControlCommands.POWER_OFF)\n}\n\nexport async function powerOn(target: number) {\n    return await setter(target,C.ControlCommands.POWER_ON)\n}\n\nexport async function shutterOn(target:number){\n    console.log('Sutter On')\n    return await setter(target,C.ControlCommands.SHUTTER_OPEN)\n}\nexport async function shutterOff(target:number) {\n    return await setter(target,C.ControlCommands.SHUTTER_CLOSED)\n}\n\nexport async function menu(target:number) {\n    \n}\n","import { Dialog, DialogTitle , TextField, Select, MenuItem, InputLabel, Button} from \"@material-ui/core\";\nimport React, { CSSProperties, useState } from \"react\";\nimport {PROJECTOR_MAKES, PROJECTOR_MAKE, Patch} from '../util/constants'\ninterface PatchAdd_Props{\n    open: boolean,\n    handleClose: ()=>void,\n    addPJs: (amount: number, startID: number, baseIP: string, port: number, auth: string, make: PROJECTOR_MAKE)=>void,\n    currentPatch: Patch\n}\n\nconst style: CSSProperties={\n    width: '90%',margin: 'auto', marginBottom: '5px'\n    \n}\nexport default function PatchAddDialog(props: PatchAdd_Props){\n    const {open,handleClose, addPJs, currentPatch}= props\n\n    const getMaxID=()=>{\n        let i = -1\n        Object.values(currentPatch).forEach(pj=>{\n            if(pj.id> i)\n                i = pj.id\n        })\n        if(i===-1)\n            return 100\n        \n            return i\n    }\n\n    const [make, setMake]= useState<PROJECTOR_MAKE>(PROJECTOR_MAKES.PANASONIC)\n    const [Amount, setAmount] = useState({value:1,err:''})\n    const [StartID, setID] = useState({value:getMaxID()+1,err:''})\n    const [BaseIP, setBaseIP]= useState({value:'192.168.10.',err:''})\n    const [UserName, setUserName] = useState('admin1')\n    const [Pass, setPass] = useState('')\n    const [Port, setPort] = useState({value:1024, err:''})\n    //const [hasErrors, setHasErrors]= useState(false)\n\n   \n    const getListItems=()=>{\n        return Object.values(PROJECTOR_MAKES).map(key=>{\n            //console.log(key)\n            return <MenuItem key={key} value={key}>{key}</MenuItem>\n        })\n    }\n    const handleSubmit=()=>{\n        let auth = ''\n        if(make === PROJECTOR_MAKES.PANASONIC){\n            auth = UserName+\":\"+Pass\n        }\n        addPJs(Amount.value,StartID.value,BaseIP.value,Port.value, auth,make)\n    }\n    const handleMake=(e: React.ChangeEvent<{value:unknown}>)=>{\n        setMake(e.target.value as PROJECTOR_MAKE)\n    }\n    const getBaseStart=()=>{\n        return parseInt(BaseIP.value.split('.')[3])\n    }\n    const checkOverlap=(startID: number, amount: number)=>{\n        for(let i = startID; i<amount+startID; i++){\n            let t = false\n            Object.values(currentPatch).forEach(pj=>{\n                if(pj.id === i)\n                    t = true\n            })\n            if(t)\n                return true\n        }\n        return false\n    }\n    const handleAmount=(e: React.ChangeEvent<HTMLTextAreaElement | HTMLInputElement>)=>{\n        let value = parseInt(e.target.value)\n        let err= ''\n        if(value<1 || isNaN(value)){\n            err='Invalid Number'\n        } else if(checkOverlap(StartID.value, value)){\n            err='Will Overlap Other IDs'\n        }\n\n        setAmount({value,err})\n    }\n    \n    const handleID=(e: React.ChangeEvent<HTMLTextAreaElement | HTMLInputElement>)=>{\n        let value = parseInt(e.target.value)\n        let err= ''\n        if(value<1 || isNaN(value)){\n            err='Invalid Number'\n        } else if(getBaseStart()+Amount.value >254){\n            err='Will Land Outside Base IP Range'\n        } else if(checkOverlap(value, Amount.value)){\n            err='Will Overlap Other IDs'\n        }\n        setID({value,err})\n    }\n    const handlePort=(e: React.ChangeEvent<HTMLTextAreaElement | HTMLInputElement>)=>{\n        let value = parseInt(e.target.value)\n        let err= ''\n        if(value<1 || isNaN(value)){\n            err='Invalid Number'\n        }\n        setPort({value,err})\n    }\n    const handleBaseIP=(value: string)=>{\n        \n        let err= ''\n        let s = value.split('.')\n        if(s.length===4){\n            for(let i =0; i<4;i++){\n                if(parseInt(s[i])<0 || parseInt(s[i])>(254-Amount.value)){\n                    err ='Invalid Number Range: '+s[i]\n                }\n            }\n        } else{\n            err= 'Invalid Number of .'\n        }\n        console.log(value)\n        \n        setBaseIP({value,err})\n    }\n\n    const handlePass=(value: string)=>{\n        setPass(value)\n    }\n    const handleUser=(value:string)=>{\n        setUserName(value)\n    }\n    return( \n        <Dialog fullWidth={true} style={{padding: '10%'}} onClose={handleClose} aria-labelledby=\"simple-dialog-title\" open={open}>\n        <DialogTitle id=\"simple-dialog-title\">Add Projectors</DialogTitle>\n        <InputLabel style={style} id=\"pjMake\">Model</InputLabel>\n        <Select style={style} id='pjMake' onChange={handleMake} value={make}>\n        {getListItems()}\n        </Select>\n        <br></br>\n        <TextField style={style} error={Amount.err? true: false} variant=\"filled\" type={'number'}label={'Amount'} value={Amount.value} onChange={handleAmount} helperText={Amount.err}> </TextField>\n        <br></br>\n        <TextField style={style} error={StartID.err? true: false} value={StartID.value} helperText={StartID.err} variant=\"filled\" type={'number'} label={'StartID'} onChange={handleID} > </TextField>\n        <br></br>\n        <TextField style={style} error={BaseIP.err? true: false} value={BaseIP.value} helperText={BaseIP.err} variant=\"filled\" type={'text'}label={'BaseIP'} onChange={(e)=>handleBaseIP(e.target.value)} > </TextField>\n        <br></br>\n        <TextField style={style} error={Port.err? true: false} value={Port.value} helperText={Port.err} variant=\"filled\" type={'number'}label={'Port'} onChange={handlePort} > </TextField>\n        <br></br>\n        <TextField style={style}  value={UserName}  variant=\"filled\" label={'Username'} type={'text'} onChange={(e)=>handleUser(e.target.value)}> </TextField>\n        <br></br>\n        <TextField style={style}  value={Pass}  variant=\"filled\" label={'Password'}type={'text'} onChange={(e)=>handlePass(e.target.value)}> </TextField>\n\n        <Button style={{width:'20%', margin: 'auto', marginBottom:'2%'}} disabled={Amount.err || BaseIP.err || StartID.err? true: false} variant=\"contained\" color=\"primary\" onClick={handleSubmit}>Submit</Button>\n      </Dialog>\n    )\n}","import * as C from \"../util/constants\";\nimport { DataGrid } from '@material-ui/data-grid';\nimport { Button, Paper, makeStyles, ButtonGroup } from '@material-ui/core'\nimport AddIcon from '@material-ui/icons/Add';\nimport EditIcon from '@material-ui/icons/Edit';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport { useState } from \"react\";\nimport { v4 } from 'uuid'\nimport Alert from './Alert'\nimport PatchAddDialog from './PatchAddDialog'\n\ninterface Patch_props {\n  patch: C.Patch\n  setPatch?: (p: C.Patch) => void\n}\n\nconst useStyles = makeStyles((theme) => ({\n  fab: {\n    position: 'absolute',\n    bottom: theme.spacing(2),\n    right: theme.spacing(2),\n  },\n\n}));\nconst columns = [\n  { field: 'uuid', headerName: 'uuid', width: 100, hide: true },\n  { field: 'id', headerName: 'ID', width: 90 },\n  { field: 'ip_address', headerName: 'IP Address', width: 170 },\n  { field: 'port', headerName: 'Port', width: 130 },\n  { field: 'auth', headerName: 'Auth', width: 130 },\n  { field: 'make', headerName: 'Make', width: 130 },\n\n];\n\nexport default function Patch(props: Patch_props) {\n  const { patch, setPatch } = props\n  const [addWindowOpen, setAddWindowOpen] = useState(false)\n  const [editWindowOpen, setEditWindowOpen] = useState(false)\n  const [selected, setSelected] = useState<number[]>([])\n  const [deleteWindowOpen, setDeleteWindowOpen] = useState(false)\n  const classes = useStyles()\n  let newPJs: C.Patch = {}\n\n  const addPJs = (amount: number, startID: number, baseIP: string, port: number, auth: string, make: C.PROJECTOR_MAKE) => {\n    setAddWindowOpen(false)\n    console.log('Got PJs to make!')\n    for (let id = startID; id < amount + startID; id++) {\n      let ip_address = baseIP + id\n      //console.log('Patch', patch)\n      if (Object.values(patch).filter(pj => {\n        if (pj.id === id) {\n          console.log('Conflicting ID', id);\n          return true\n        }\n        if (pj.ip_address === ip_address) {\n          console.log('Conflicting IP', ip_address);\n          return true\n        }\n        return false\n      }\n      ).length > 0) {\n        console.log('Conflicting PJ')\n        newPJs[v4()] = { ip_address: '-', port, auth, make, id: 0 }\n      } else {\n        // console.log('new PJ!')\n        newPJs[v4()] = { ip_address, id, port, auth, make }\n      }\n    }\n    //console.log(newPJs)\n    let newPatch = Object.assign(patch, newPJs) as C.Patch\n    if (newPatch && setPatch) {\n      setPatch(newPatch)\n    }\n  }\n  /*\n  const getRows = () => {\n    return Object.entries(patch).map(e => {\n      let pj = e[1]\n      //@ts-ignore\n      pj.channel = pj.id\n      //@ts-ignore\n      pj.id = e[0]\n\n      return pj\n\n    })\n  }\n  */\n\n  const handleDelete = (c: C.ControlKeys) => {\n\n    let newPatch = Object.assign(patch) as C.Patch\n    Object.entries(newPatch).forEach(e => {\n      if (selected.includes(e[1].id)) {\n        delete newPatch[e[0]]\n        let newSelect = Object.assign(selected) as number[]\n        delete newSelect[e[1].id]\n        setSelected(newSelect)\n      }\n    })\n\n\n    //const i = Object.assign(newPatch)\n    if (newPatch && setPatch) {\n      //console.log('Deleting',Object.values(patch).length-Object.values(newPatch).length)\n      setPatch(newPatch)\n      setSelected([])\n    }\n\n  }\n  const getSelectedString = () => {\n    let s = ''\n    for (let i = 0; i < selected.length; i++) {\n      s += selected[i] + ' '\n      if (i % 9 === 0) {\n        s += '\\r'\n      }\n    }\n    return s\n  }\n\n\n\n  return (\n    <>\n      <Paper style={{ height: 700, width: '100%' }}>\n        {patch ?\n          <DataGrid rows={Object.values(patch)} columns={columns} checkboxSelection selectionModel={selected} onSelectionModelChange={(e) => setSelected(e.selectionModel as number[])} />\n          : <></>\n        }\n\n        <ButtonGroup color='primary' className={classes.fab} >\n          <Button aria-label=\"add\" onClick={(e) => setAddWindowOpen(true)}> <AddIcon /></Button>\n          <Button aria-label=\"edit\" disabled={selected.length < 1} onClick={(e) => setEditWindowOpen(true)}> <EditIcon /></Button>\n          <Button aria-label=\"edit\" disabled={selected.length < 1} onClick={(e) => setDeleteWindowOpen(true)}> <DeleteIcon /></Button>\n        </ButtonGroup>\n\n\n      </Paper>\n      <Alert open={deleteWindowOpen} handleCommand={handleDelete} handleClose={() => setDeleteWindowOpen(false)} command={C.ControlCommands.MENU} header='Delete Selected' message={'Are you srue you want to delete: \\r \\n' + getSelectedString()} ></Alert>\n      <PatchAddDialog open={addWindowOpen} handleClose={() => setAddWindowOpen(false)} addPJs={addPJs} currentPatch={patch} />\n    </>\n  )\n}","\nexport type update ={version:string,date:string, notes:string[]}\nexport type updates =update[]\nconst updateLog: updates=[\n    {version: '0.1.4.', date: '9/5/21', notes:[\n        'Added About'\n    ]},\n    {version: '0.1.4.1', date: '9/5/21', notes:[\n        'More About', 'Less Mess'\n    ]},\n    {version: '0.1.5.2', date: '10/5/21', notes:[\n        'Programmer Table now selectable'\n    ]},\n    {version:'0.1.5.3', date:'10/6/21', notes:[\n        'Input, OSD Rotaion, PJ Roation Added',\n        'Clear Bug Fix',\n        'User Option to 3x Clear on 1 press addeds'\n    ]},\n]\n\nexport default updateLog","\nimport { Card, Dialog, Paper, Typography, makeStyles, CardContent, Theme, createStyles, AppBar } from '@material-ui/core';\n\nimport updateLog from '../util/UpdateLog'\ninterface About_Props{\n    open: boolean\n    handleClose: ()=>void\n}\nconst useStyles = makeStyles((theme: Theme)=> createStyles({\n    root: {\n      minWidth: 275,\n      flexGrow: 1,\n    },\n    bullet: {\n      display: 'inline-block',\n      margin: '0 2px',\n      transform: 'scale(0.8)',\n    },\n    menuButton: {\n        marginRight: theme.spacing(2),\n    },\n    title: {\n      fontSize: 14,\n    },\n    pos: {\n      marginBottom: 12,\n    },\n  }));\nexport default function About(props: About_Props){\n    const {open,handleClose}=props;\n    const classes = useStyles();\n    const bull = <span className={classes.bullet}>•</span>;\n    const getNotes=(notes: string[])=>{\n        return notes.map(note=>{\n           return <Typography key={note} variant='body2'>\n                {bull}{note}\n            </Typography>\n        })\n    }\n    const getUpdates=()=>{\n        return updateLog.map(update=>{\n            return <Card className={classes.root} key={update.version}>\n                <CardContent>\n                    <Typography variant='h6' component='h2'>\n                        {update.version}\n                    </Typography>\n                    <Typography className={classes.pos}>\n                        {update.date}\n                    </Typography>\n                    {getNotes(update.notes)}\n               \n                </CardContent>\n                \n                </Card>\n        })\n    }\n    return(\n        <Dialog open={open} onClose={handleClose}>\n            <div className={classes.root}>\n                <AppBar position='static'>\n                <Typography variant='h4'>vanPJ</Typography>\n              <Typography className={classes.pos} >Logic.Lighting | MIT Licence</Typography>\n                    </AppBar>\n          <Paper style={{width: '50%'}}>  \n              \n        {getUpdates()}\n        </Paper>\n        </div>\n        </Dialog>\n    )\n}","import { Dialog, AppBar, Toolbar, Typography, IconButton, Button, Paper, Slide, Switch, TextField, FormControlLabel, makeStyles } from \"@material-ui/core\";\nimport CloseIcon from '@material-ui/icons/Close';\nimport InfoIcon from '@material-ui/icons/Info';\nimport { useState, forwardRef, useEffect } from \"react\";\nimport * as C from \"../util/constants\";\nimport { setConfig } from \"../util/getter\";\nimport Patch from \"./Patch\";\nimport { SocketPatcher } from \"../util/SocketListener\";\nimport { Socket } from \"socket.io-client\";\nimport About from \"./About\";\n//import { socket } from \"../LoadPage\";\nconst useStyles = makeStyles((theme) => ({\n  appBar: {\n    position: 'relative',\n  },\n  title: {\n    marginLeft: theme.spacing(2),\n    flex: 1,\n  },\n  root: {\n    '& .MuiTextField-root': {\n      margin: theme.spacing(1),\n      width: '25ch',\n    },\n  },\n}));\n\nconst Transition = forwardRef(function Transition(props, ref) {\n  //@ts-ignore\n  return (<Slide direction=\"up\" ref={ref} {...props} />);\n});\n\ninterface ConfigDialog_Props {\n  open: boolean\n  handleClose: () => void\n  config: C.Config\n  socket: Socket | undefined\n}\nexport default function ConfigDialog(props: ConfigDialog_Props) {\n  const { open, handleClose, config, socket } = props\n  const [polling, setPolling] = useState(config.Polling)\n  const [pollingInterval, setPollingInterval] = useState(config.Polling_Interval/1000)\n  const classes = useStyles();\n  const [patch, setPatch] = useState<C.Patch>(config.Patch)\n  const [aboutOpen, setAboutOpen] =useState(false)\n\n  useEffect(() => {\n    setPollingInterval(config.Polling_Interval/1000)\n    setPolling(config.Polling)\n    setPatch(config.Patch)\n  }, [config])\n \n\n  const handleSubmit = (event: any) => {\n    event?.preventDefault();\n    // console.log(event)\n\n    let form = document.querySelector('form')\n    if (form) {\n      const data = new FormData(form);\n      let query = ''\n      for (var pair of data.entries()) {\n      \n        let t = pair[0] as C.ConfigHeaders\n       \n        let v = pair[1].toString()\n        switch(t){\n          case C.ConfigHeaders.POLLING:\n           \n            break;\n          case C.ConfigHeaders.POLLING_INTERVAL:\n            query += t + '=' + pollingInterval*1000 + '&'\n            break;\n          default:\n            query += t + '=' + v + '&'\n            break;\n        }\n\n      }\n      //Hard adds Polling to ensure it is accounted for\n      query += C.ConfigHeaders.POLLING + '=' + polling\n      \n      setConfig(query)\n      if(socket)\n        SocketPatcher(socket, patch)\n    }\n  }\n  const handlePollingInterval=(value: number)=>{\n    if(value>10){\n      setPollingInterval(value)\n    }\n  }\n  const handlePatchUpdate=(p: C.Patch)=>{\n    console.log(p)\n    setPatch(p)\n  }\n  return (\n    \n    //@ts-ignore\n    <Dialog fullScreen open={open} onClose={handleClose} TransitionComponent={Transition}>\n\n      <form className={classes.root} onSubmit={handleSubmit}>\n        <AppBar className={classes.appBar}>\n          <Toolbar style={{ paddingBottom: 0, marginBottom: 0, height: 30}}>\n            <IconButton edge=\"start\" color=\"inherit\" onClick={handleClose} aria-label=\"close\">\n              <CloseIcon />\n            </IconButton>\n            <Typography variant=\"h6\" className={classes.title}>\n              Server Configuration\n              <span style={{ fontSize: 10, marginLeft:30 }}> &nbsp;&nbsp;&nbsp; Last Update: {config.LastUpdated}</span> \n            </Typography>\n           \n            <Button autoFocus color=\"inherit\" type={'submit'} onClick={handleClose}>\n              Save\n            </Button>\n            <IconButton color='inherit' onClick={()=>setAboutOpen(true)}><InfoIcon></InfoIcon></IconButton>\n           \n          </Toolbar>\n         \n        </AppBar>\n\n        <Paper key='config_paper'>\n\n\n\n          <TextField key='location' style={{width:'25%'}}label={'Location'} name={C.ConfigHeaders.LOCATION} defaultValue={config.Location} />\n\n          <FormControlLabel name={C.ConfigHeaders.POLLING} value={polling} labelPlacement=\"top\"\n            control={<Switch checked={polling} value={polling} onChange={(e) => setPolling(!polling)} name={C.ConfigHeaders.POLLING} />}\n            label=\"Polling\"\n          />\n\n          <TextField key='polling_interval' style={{width:'25%'}} disabled={!polling} type='number' label={'Poll Interval'} onChange={(e)=> handlePollingInterval(parseInt(e.target.value))} name={C.ConfigHeaders.POLLING_INTERVAL} value={pollingInterval} />\n        </Paper>\n\n\n        <Paper key='patch'>\n          <Patch patch={patch} setPatch={handlePatchUpdate} />\n        </Paper>\n      </form>\n     \n      <About open={aboutOpen} handleClose={()=>setAboutOpen(false)}></About>\n    </Dialog>\n   \n      \n  \n    \n  )\n}","\nimport { Socket } from 'socket.io-client'\nimport * as C from './constants'\n//import {socket} from '../LoadPage'\ntype RIG_STATUS = React.Dispatch<React.SetStateAction<C.RIG_STATUS>>\ntype PJS = React.Dispatch<React.SetStateAction<C.PJs>>\ntype CONFIG = React.Dispatch<React.SetStateAction<C.Config>>\ntype POLLING_PROGRESS = React.Dispatch<React.SetStateAction<number>>\n\nexport default function SocketListener(\n    socket: Socket,\n    setStatus: RIG_STATUS,\n    setPJs: PJS,\n    setConfig: CONFIG,\n    setPollingProgress: POLLING_PROGRESS,\n) {\n   \n    socket.on('connected', () => {\n        console.log('Connected!')\n        // socket.emit('Hello')\n    })\n    socket.on('Hello', () => {\n        //console.log('Hello!')\n    })\n    socket.on(C.ioCommands.EMITTING_PJS, (pjs: C.PJs) => {\n        setPJs(pjs)\n         console.log('Got new PJs!')\n    })\n    socket.on(C.ioCommands.EMITTING_STATUS, (status: C.RIG_STATUS) => {\n       // console.log('Status Updated')\n        setStatus(status)\n    })\n    socket.on(C.ioCommands.REQUEST_UPDATE, () => {\n        console.log('Requesting Update!')\n        socket?.emit(C.ioCommands.REQUESTING_UPDATE)\n    })\n\n    socket.on(C.ioCommands.REQUEST_CONFIG, () => {\n        console.log('Requesting Config')\n       // socket?.emit(C.ioCommands.REQUESTING_CONFIG)\n    })\n    socket.on(C.ioCommands.EMITTING_CONFIG, (config: C.Config) => {\n        console.groupCollapsed('Got New Config')\n        console.log('Config', config)\n        console.log('Patch', config.Patch)\n        console.groupEnd()\n        setConfig(config)\n        /*\n        if(config.Groups[0] && config.Groups[0].group)\n            setWorld(config.Groups[0].group)\n            */\n    })\n    socket.on(C.ioCommands.EMITTING_POLLING_PROGRESS, (progress: number) => {\n        setPollingProgress(progress)\n    })\n}\n    \n\n\n\nexport function SocketPatcher(socket: Socket, patch: C.Patch) {\n    socket.emit(C.ioCommands.EMITTING_PATCH, patch)\n}   ","import {Button, Dialog, DialogActions, DialogTitle, DialogContent, DialogContentText, TextField } from \"@material-ui/core\";\nimport { useEffect, useState } from \"react\";\ninterface Alert_Props{\n    open: boolean,\n    handleInput: (text: string)=>void,\n    handleClose: ()=>void,\n    header: string,\n    message: string,\n    startText: string | undefined\n}\nexport default function Alert(props: Alert_Props){\n    const {open,handleInput, handleClose, header, message ,startText} = props\n    const [text, setText] = useState('')\n\n    useEffect(()=>{\n      if(startText)\n      setText(startText)\n    },[startText])\n\n    const handleClick=(approval: boolean)=>{\n        if(approval){\n            handleInput(text)\n        }\n        handleClose()\n        setText('')\n\n    }\n    return (\n        <Dialog\n        open={open}\n        onClose={handleClose}\n        aria-labelledby=\"alert-dialog-title\"\n        aria-describedby=\"alert-dialog-description\"\n      >\n        <DialogTitle id=\"alert-dialog-title\">{header}</DialogTitle>\n        <DialogContent>\n          <DialogContentText id=\"alert-dialog-description\">\n            <span style={{width:'50'}}>{message}</span>\n          </DialogContentText>\n        </DialogContent>\n        <DialogActions>\n          <TextField value={text} onChange={(e)=>setText(e.target.value)}></TextField>\n          <Button onClick={(e)=>handleClick(false)} color=\"primary\">\n            Cancle\n          </Button>\n          <Button onClick={(e)=>handleClick(true)} color=\"primary\" autoFocus>\n            Okay\n          </Button>\n        </DialogActions>\n      </Dialog>\n        \n    )\n}","import { Button} from '@material-ui/core'\nimport { useMemo } from 'react'\nimport * as C from '../util/constants'\n\ninterface worlds_props{\n    setWorld: (g: string)=> void\n    name: string\n    groupEditCMD: C.ioCommands | undefined\n    groups: C.Groups\n    selected?: number\n}\n/*\ninterface worldTuppel{\n  key: string,\n  name: string,\n  selected: boolean\n}*/\nexport default function Worlds( props: worlds_props){\n\n    const {setWorld, groups, groupEditCMD, selected} = props\n\n    const getWorlds = useMemo(()=>{\n        let g= Object.entries(groups).map(group=>{\n          return {key: group[0], name: group[1].name, selected: selected ===parseInt(group[0])  }\n       \n        })\n      if(groupEditCMD === C.ioCommands.STORE_GROUP){\n        g.push({key:C.ioCommands.STORE_GROUP, name: 'Add Group', selected: false})\n      }\n      return g\n    },[groups,groupEditCMD,selected])\n\n    const getButtons =()=>{\n   \n      return getWorlds.map(group=>{\n        return <Button key={group.key} onClick={(e)=>{e.preventDefault(); setWorld(group.key)}} variant={group.selected?'outlined':'text'}>{group.name}</Button>\n      })\n    }\n    return (\n        <div {...props} >\n          {getButtons()}\n          </div>\n    )\n}\n","import { Button, ButtonGroup, createStyles, Fade, makeStyles, Menu, MenuItem, Paper, Theme, Typography } from \"@material-ui/core\";\nimport Worlds from \"./Worlds\";\nimport { Config, ioCommands } from '../util/constants'\nimport { useRef, useState } from \"react\";\nimport SettingsIcon from \"@material-ui/icons/Settings\";\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\"\nimport PublicIcon from '@material-ui/icons/Public';\n\nimport ExpandLessIcon from '@material-ui/icons/ExpandLess'\n\nconst useStyles = makeStyles((theme: Theme) =>\n    createStyles({\n        root: {\n\n        },\n        container: {\n            display: 'flex',\n        },\n        paper: {\n            margin: theme.spacing(1),\n        },\n    }),\n);\n\ninterface WorldBox_Props {\n    handleWorldSelection: (g: string) => void,\n    handleGroupSelection: (g: string) => void,\n    handleGroupConfig: (cmd: ioCommands) => void,\n    groupEditCMD: ioCommands | undefined,\n    config: Config,\n    world: number\n}\nexport default function WorldBox(props: WorldBox_Props) {\n    const { handleWorldSelection, handleGroupSelection, handleGroupConfig, groupEditCMD, config, world } = props;\n    const [worldOpen, setWorldOpen] = useState(false)\n    const [groupOpen, setGroupOpen] = useState(false)\n    const [configOpen, setConfigOpen] = useState(false)\n    const divRef = useRef(null)\n    const classes = useStyles();\n\n    const handleConfigButton = () => {\n        //@ts-ignore\n        divRef.current.focus()\n\n        setConfigOpen(true)\n\n    }\n    const handleConfigSelect = (cmd: ioCommands) => {\n        setConfigOpen(false)\n        handleGroupConfig(cmd)\n    }\n    const handleWorld = (w: boolean) => {\n        setWorldOpen(!w)\n        if (!w) {\n            setGroupOpen(false)\n        }\n    }\n    const handleGroup = (g: boolean) => {\n        setGroupOpen(!g)\n        if (!g) {\n            setWorldOpen(false)\n        }\n    }\n    const getStyle = () => {\n        if (!worldOpen && !groupOpen) {\n            return {\n                width: '90%', margin: 'auto', height: '40px'\n            }\n        }\n        return {\n            width: '90%', margin: 'auto'\n        }\n\n    }\n    const getHelperText = () => {\n        let generalMessage = ' | Hit Clear to Cancle'\n        switch (groupEditCMD) {\n            case ioCommands.STORE_GROUP:\n                return <Typography>Select Group To Store {generalMessage}</Typography>\n            case ioCommands.DELETE_GROUP:\n                return <Typography>Select Group To Delete {generalMessage}</Typography>\n            case ioCommands.LABEL_GROUP:\n                return <Typography>Select Group to Label {generalMessage}</Typography>\n        }\n    }\n    return (\n        <div className='WorldBox' >\n            <Paper style={getStyle()}>\n                <ButtonGroup style={{ marginTop: '1px', marginBottom: '2px' }} >\n                    <Button key='world_button'\n                        onClick={() => handleWorld(worldOpen)}> Worlds {world !==0? <PublicIcon fontSize=\"small\" /> : '  '}\n                        {worldOpen ? <ExpandLessIcon /> : <ExpandMoreIcon />} </Button>\n                    <Button key='group_button' onClick={() => handleGroup(groupOpen)}>Groups\n                        {groupOpen ? <ExpandLessIcon /> : <ExpandMoreIcon />}\n                    </Button>\n                </ButtonGroup>\n                {getHelperText()}\n\n                <div className={classes.container} style={{width:'100%'}}>\n\n\n                    {worldOpen ? <Fade key='world_Grow' in={worldOpen}>\n\n\n                        <Worlds key=\"world_box\" setWorld={handleWorldSelection} groupEditCMD={groupEditCMD} groups={config.Groups} name={'Worlds'} selected={world} />\n                    </Fade> :\n                        <Fade key='group_box' in={groupOpen}>\n                            <Worlds setWorld={handleGroupSelection} groupEditCMD={groupEditCMD} groups={config.Groups} name={'Groups'} />\n                        </Fade>\n                    }\n                    {groupOpen || worldOpen ?\n                        <Button ref={divRef} style={{ float: 'right', marginLeft:'auto' }} onClick={() => handleConfigButton()}><SettingsIcon /></Button>\n                        : <></>}\n                </div>\n\n            </Paper>\n            <Menu id='groups-menu' keepMounted anchorEl={divRef.current}\n                open={configOpen}\n                onClose={() => setConfigOpen(false)}>\n                <MenuItem>\n                    <Button key='add_group' onClick={() => handleConfigSelect(ioCommands.STORE_GROUP)}>Store Group</Button>\n                </MenuItem>\n                <MenuItem>\n                    <Button key='rename_group' onClick={() => handleConfigSelect(ioCommands.LABEL_GROUP)}>Rename Group</Button>\n                </MenuItem>\n                <MenuItem>\n                    <Button key='delete_group' onClick={() => handleConfigSelect(ioCommands.DELETE_GROUP)}>Delete Group</Button>\n                </MenuItem>\n            </Menu>\n\n        </div>\n    )\n}\n//\n/*\n <Container key='groups_Worlds' style={{width:'80%'}}>\n\n\n        </Container>\n        */","\nimport { useEffect, useState } from 'react';\nimport './App.css';\nimport * as C from './util/constants'\n//import { getPJ } from './util/getter';\n//import PJ from './components/PJ'\nimport Numberpad from './components/numberpad';\nimport CommandPad from './components/CommandPad'\nimport { TextField, Container, Grid, LinearProgress } from '@material-ui/core'\nimport { processCMD } from './util/CMD';\nimport Programmer from './components/Programmer';\nimport * as Prefs from './prefrences';\nimport SocketListener from './util/SocketListener';\nimport ConfigDialog from './components/ConfigDialog';\nimport { Socket } from 'socket.io-client';\nimport InputPopup from './components/InputPopup';\nimport WorldBox from './components/WorldBox';\n\n\n// setSocketConnect(true)\n//import {socket}  from './LoadPage'\ninterface App_Prps {\n  prefs: Prefs.prefres\n  openConfig: boolean\n  handleCloseConfig: () => void\n  socket: Socket | undefined\n}\n\nconst removeFocus=()=>{\n  if(document.activeElement instanceof HTMLElement){\n  document.activeElement.blur();\n  }\n}\n//let socket: Socket | undefined = undefined\n\nfunction App(Props: App_Prps) {\n  const { prefs, openConfig, handleCloseConfig, socket } = Props\n  const [cmd, setCMD] = useState('')\n  const [vartiable, setVartiable] = useState<string | undefined>(undefined)\n  const [active, setActive] = useState<number[]>([])\n  const [activeIndex, setActiveIndex] = useState(-1)\n  const [clearPresses, setClearPressed] = useState(0)\n  const [selected, setSelected] = useState<number[]>([])\n  const [groupNameOpen, setGroupNameOpen] = useState(false)\n  const [groupName, setGroupName] = useState<string | undefined>(undefined)\n  const [config, setConfig] = useState(C.defaultConfig)\n  const [world, setWorld] = useState(0) //Default 0 - All\n  const [pjs, setPJs] = useState<C.PJs>({})\n  const [pollingProgress, setPollingProgress] = useState(100)\n  const [command, setCommand] = useState<C.ControlKeys | undefined>(undefined)\n  const [groupEditCMD, setGroupEditCMD] = useState<C.ioCommands | undefined>(undefined)\n  const [selectedGroup, setSelectedGroup] = useState<number | undefined>(undefined)\n  const [lastPJClicked, setLastPJClicked] = useState<number | undefined>(undefined)\n  const [rigStatus, setStatus] = useState<C.RIG_STATUS>({\n    online: false,\n    power: false,\n    shutter: false,\n    blendMarker: false,\n    blend: false,\n    testPattren: false,\n    lampStatus: false,\n    hdmiInput: false,\n    signalName: false\n\n  })\n\n\n\n  useEffect(() => {\n\n    if (socket)\n      SocketListener(socket, setStatus, setPJs, setConfig, setPollingProgress)\n\n    if (command) {\n      console.log('Emmiting CMD', command,vartiable, active)\n\n      socket?.emit(C.ioCommands.EMITTING_CMD, { cmd: command, pjIDs: active, vartiable: vartiable })\n      if (prefs.clearProgrammerAfterCMD) {\n        setActive([])\n        setSelected([])\n      }\n      setCommand(undefined)\n    }\n\n\n    // let i =setInterval(pollPJs,10000)\n    //console.log(selected)\n    return function cleanup() {\n\n      // socket?.disconnect()\n      //setSocketConnect(false)\n    }\n\n\n  }, [active, command, prefs, socket, vartiable, pjs])\n\n\n  document.onkeyup = ((e) => {\n    if (openConfig || groupNameOpen) return\n  \n   \n\n    let key = e.key\n     \n    if (C.keys.includes(key)) {\n      handlePad(key)\n      return\n    }\n\n    switch (key) {\n      case 't':\n        handlePad(C.commands.THRU)\n        break;\n      case 'c':\n        handlePad(C.commands.CLEAR)\n        break;\n      case '=':\n        handlePad('+')\n        break;\n      case 'Backspace':\n        handlePad(C.commands.DEL)\n        break;\n      case 'Enter':\n        //processCMD();\n        handlePad(C.commands.ENTER)\n        break;\n      case 'i':\n        handleCommand(C.ControlCommands.SHUTTER_CLOSED)\n        break;\n      case 'o':\n        handleCommand(C.ControlCommands.SHUTTER_OPEN)\n        break;\n\n      case 'ArrowUp':\n        handlePad(C.commands.IF_PROG)\n        break;\n      case 'ArrowRight':\n        handlePad(C.commands.NEXT)\n        break;\n      case 'ArrowLeft':\n        handlePad(C.commands.BACK)\n        break;\n    }\n\n  })\n\n  const handleNext = () => {\n    //console.log('Nexting')\n    if (selected.length < 1) {\n      return\n    }\n    let i = activeIndex\n    if (activeIndex + 1 < selected.length) {\n      i += 1\n    }\n    if (activeIndex + 1 >= selected.length) {\n      i = 0\n    }\n    let a: number[] = []\n    a.push(selected[i])\n    setActiveIndex(i)\n    setActive(a)\n  }\n  const handleBack = () => {\n    if (selected.length < 1) {\n      return\n    }\n    let i = activeIndex\n    if (activeIndex - 1 >= 0) {\n      i -= 1\n    }\n    if (activeIndex - 1 < 0) {\n      i = selected.length - 1\n    }\n    let a: number[] = []\n    a.push(selected[i])\n    setActiveIndex(i)\n    setActive(a)\n  }\n\n  const clear0=()=>{\n    setCMD('')\n  }\n\n  const clear1=()=>{\n    setActive([])\n    setActiveIndex(-1)\n  }\n\n  const clear2=()=>{\n    setSelected([])\n  }\n  const handlePad = (e: string) => {\n   \n    removeFocus()\n    if (e === C.commands.CLEAR) {\n      if (groupEditCMD) {\n       // console.log('Clear Pressed, but editCMD')\n        setGroupEditCMD(undefined)\n        return\n      }\n      if(prefs.trippleTapClearOnOne){\n        clear0()\n        clear1()\n        clear2()\n      } else{\n        setClearPressed((clearPresses + 1))\n      }\n      //console.log('Clear', clearPresses)\n      \n      switch (clearPresses) {\n        case 0:\n          clear0()\n          break;\n        case 1:\n          clear1()\n          break;\n        case 2:\n          clear2()\n          break;\n        default:\n          setClearPressed(0)\n      } \n      return\n    }\n    setClearPressed(0)\n    switch (e) {\n\n\n      case C.commands.DEL:\n        //console.log(cmd.slice(-6) === ' THRU ')\n        // console.log(cmd.includes('THRU'))\n        if (cmd.length >= 6 && cmd.slice(-6) === ' ' + C.commands.THRU + ' ') {\n          let t = cmd.slice(0, cmd.length - 6)\n          setCMD(t)\n        } else if(cmd.length>=7 && cmd.slice(-7) === ' '+C.commands.GROUP+' ') {\n          let t = cmd.slice(0,cmd.length - 7)\n          setCMD(t)\n        }else {\n          setCMD(cmd.slice(0, (cmd.length - 1)))\n        }\n        break;\n      case C.commands.THRU:\n        if (cmd.length > 0)\n          setCMD(cmd + ' THRU ')\n        break;\n      case C.commands.ENTER:\n        handleCMD()\n        break;\n      case '-':\n        if (cmd[cmd.length - 1] !== ' ') {\n          setCMD(cmd + ' '+e+' ')\n        }\n        break\n      case '+':\n        setCMD(cmd+' '+e+' ')\n        break\n      case C.commands.NEXT:\n        handleNext();\n        break;\n      case C.commands.BACK:\n        handleBack()\n        break;\n      case C.commands.IF_PROG:\n        setActive(selected);\n        setActiveIndex(-1)\n        break;\n      default:\n\n        setCMD(cmd + e)\n      // console.log('setting CMD',cmd)\n    }\n    //  console.log('CMD',cmd)\n  }\n  const handleTableSelect = (id: number) => {\n    // let s = [...selected]\n    console.log('Table Select',id)\n    let a = [...active]\n    if (a.includes(id)) {\n      setActive(a.filter(pj => pj !== id))\n    } else {\n      a.push(id)\n      setActive(a)\n      setLastPJClicked(id)\n      // s.push(id)\n      //console.log(s)\n      // setSelected(s)\n    }\n    let s = [...selected]\n    if(!s.includes(id)){\n      s.push(id)\n      setSelected(s)\n    }\n  }\n\n  const handleCMD = () => {\n\n    let s = processCMD(cmd, active, getGroup(world), config.Groups)\n    finalCMD(s)\n    setCMD('')\n\n  }\n  const finalCMD = (n: number[]) => {\n    // console.log(n)\n    setActive(n)\n    let newSelected:number[] = []\n    selected.forEach(id=>{\n      if(n.includes(id)){\n        newSelected.push(id)\n      }\n    })\n    n.forEach(id => {\n      if (!selected.includes(id)) {\n        newSelected.push(id)\n      }\n    })\n    \n    setSelected(newSelected)\n    //setSelected(diffrentPJs)\n\n  }\n  const handleCommand = (command: C.ControlKeys, text?: string) => {\n    console.log(command,vartiable)\n    handleCMD()\n    setCommand(command)\n    setVartiable(text)\n  }\n  const getGroup = (groupID: string | number) => {\n    let g = config.Groups[parseInt(groupID.toString())]?.group\n    return g ? g : []\n  }\n  const handleGroupName = (name: string) => {\n   \n    setGroupName(name)\n    console.log(name, groupName,groupEditCMD)\n    if (name) {\n      switch (groupEditCMD) {\n        case C.ioCommands.STORE_GROUP:\n          socket?.emit(C.ioCommands.STORE_GROUP, { name: name, group: active })\n          break;\n        case C.ioCommands.LABEL_GROUP:\n          socket?.emit(C.ioCommands.LABEL_GROUP, { groupID: selectedGroup, name })\n          break;\n      }\n\n      setGroupName(undefined)\n      setGroupEditCMD(undefined)\n      console.log(groupName)\n    }\n  }\n  const handleGroupUpdate = (groupID: string) => {\n    socket?.emit(C.ioCommands.UPDATE_GROUP, { groupID: parseInt(groupID), group: active })\n    setGroupEditCMD(undefined)\n  }\n  const handleGroupAndWorld = (groupID: string) => {\n    if (groupID === C.ioCommands.STORE_GROUP && active.length>0) {\n      setGroupNameOpen(true)\n      return false\n    } else if (groupEditCMD === C.ioCommands.STORE_GROUP) {\n      handleGroupUpdate(groupID)\n      return false\n    } else if (groupEditCMD === C.ioCommands.LABEL_GROUP) {\n      setGroupName(config.Groups[parseInt(groupID)].name)\n      setSelectedGroup(parseInt(groupID))\n      setGroupNameOpen(true)\n      return false\n    } else if(groupEditCMD === C.ioCommands.DELETE_GROUP){\n      socket?.emit(C.ioCommands.DELETE_GROUP, {groupID:parseInt(groupID)})\n      setGroupEditCMD(undefined)\n      return false\n    }\n    return true\n  }\n\n  const handleGroupSelection = (groupID: string) => {\n    if (handleGroupAndWorld(groupID)) {\n      removeFocus()\n      let group = getGroup(groupID)\n      if (group){\n        let s = ''\n        let t = cmd.trim()\n     \n        if(t.slice(-1) !== '-' && t.slice(-1) !=='+'){\n          s= ' + '\n        }\n\n        setCMD(cmd+s+C.commands.GROUP+' '+parseInt(groupID))\n        \n      //  handleCMD()\n      //  finalCMD(group)\n      }\n    }\n  }\n  const handleWorldSelection = (groupID: string) => {\n    if (handleGroupAndWorld(groupID))\n      setWorld(parseInt(groupID))\n  }\n  const handleGroupConfig = (cmd: C.ioCommands) => {\n    switch (cmd) {\n      case C.ioCommands.STORE_GROUP:\n        setGroupEditCMD(cmd)\n        break;\n      case C.ioCommands.UPDATE_GROUP:\n        setGroupEditCMD(cmd)\n        break\n      case C.ioCommands.LABEL_GROUP:\n        setGroupEditCMD(cmd)\n        break;\n      case C.ioCommands.DELETE_GROUP:\n        setGroupEditCMD(cmd)\n        break;\n    }\n    //\n  }\n  const getStatusBar = () => {\n\n    if (pollingProgress === 100)\n      return <LinearProgress style={{ width: '99%', margin: 'auto' }} variant=\"determinate\" value={0} />\n\n    return <LinearProgress style={{ width: '99%', margin: 'auto' }} variant=\"determinate\" value={pollingProgress} />\n  }\n\n\n  return (\n    <div className=\"App\">\n\n      <link rel=\"stylesheet\" href=\"https://fonts.googleapis.com/css?family=Roboto:300,400,500,700&display=swap\" />\n      <link rel=\"stylesheet\" href=\"https://fonts.googleapis.com/icon?family=Material+Icons\" />\n      {getStatusBar()}\n      <Container style={{ position: 'relative', bottom: '3px', textAlign: 'left', float: 'left' }}>\n      </Container>\n      <Grid container spacing={6} className='inputArea' >\n        <Grid item >\n          <Numberpad handlePad={handlePad} />\n        </Grid>\n        <Grid item>\n          <CommandPad handleCommand={handleCommand} active={active} pjs={pjs} />\n        </Grid>\n      </Grid>\n      <TextField\n        id=\"cmd\"\n\n        style={{ margin: 8, width: '90%' }}\n        value={cmd}\n        helperText=\"Command Line\"\n        fullWidth\n        margin=\"normal\"\n        InputLabelProps={{\n          shrink: true,\n        }}\n        variant=\"outlined\"\n\n      />\n\n      <WorldBox handleGroupSelection={handleGroupSelection} handleWorldSelection={handleWorldSelection} groupEditCMD={groupEditCMD} handleGroupConfig={handleGroupConfig} config={config} world={world} />\n      <br key=\"programmer break\"></br>\n      <Container key='programmer'>\n        <Programmer handleTableSelect={handleTableSelect} key={'pg'} prefs={prefs} world={getGroup(world)} status={rigStatus} selected={selected} active={active}\n          pjs={pjs} />\n\n\n        <br key='stats break'></br>\n\n\n      </Container>\n      <ConfigDialog socket={socket} open={openConfig} handleClose={() => handleCloseConfig()} config={config} />\n      <InputPopup open={groupNameOpen} handleInput={handleGroupName} startText={groupName} handleClose={() => setGroupNameOpen(false)} header={'Group Name'} message={active.toString()} />\n    </div>\n  );\n}\n\nexport default App;\n","\nimport Cookies from 'js-cookie'\nexport interface prefres{\n    darkMode: boolean,\n    clearProgrammerAfterCMD: boolean,\n    showOnlySelected: boolean,\n    programmerTableView: boolean,\n    trippleTapClearOnOne: boolean\n}\nconst cookieName= 'prefs'\n//const prefersDarkMode = useMediaQuery('(prefers-color-scheme: dark)');\nexport const defaultPrefs: prefres={\n    darkMode: true, //prefersDarkMode,\n    clearProgrammerAfterCMD: false,\n    showOnlySelected: false,\n    programmerTableView: false,\n    trippleTapClearOnOne: false\n}\n\nexport const setCookie=(prefs: prefres)=>{\n    Cookies.set(cookieName,prefs)\n}\nconst getCookie =()=>{\n    return Cookies.get(cookieName)\n    /*\n    let c = Cookies.get(cookieName)\n    if(c){\n        return JSON.parse(c) \n       // return c as unknown as prefres\n    } else {\n        setCookie(defaultPrefs)\n        return defaultPrefs\n    }\n    */\n}\n\nexport function getPrefrences(darkMode=true):prefres{\n    let c = getCookie()\n    if(c){\n        return Object.assign(defaultPrefs, JSON.parse(c))\n\n    }else{\n        let d = defaultPrefs\n        d.darkMode = darkMode\n        setCookie(d)\n        return d\n    }\n     \n    //return getCookie()\n}\n\n\n\nexport function setCookie_DarkMode(mode: boolean){\n    let c = getPrefrences()\n    c.darkMode=mode\n    setCookie(c)\n\n}\nexport function setCookie_ClearProgrammerAfterCMD(mode: boolean){\n    let c = getPrefrences()\n    c.clearProgrammerAfterCMD = mode\n    setCookie(c)\n}\nexport function setCookie_ShowOnlySelected(mode:boolean){\n    let c =getPrefrences()\n    console.log(mode)\n    c['showOnlySelected'] = mode\n    setCookie(c)\n}\n\nexport function getDarkMode(){\n    return getPrefrences().darkMode\n}\n\nexport function getClearProgrammerAfterCMD(){\n    return getPrefrences().clearProgrammerAfterCMD\n}\nexport function getShowOnlySelected(){\n    return getPrefrences().showOnlySelected\n}\n\nexport function getProgrammerTableView(){\n    return getPrefrences().programmerTableView\n}","import { Button, Menu, MenuItem, FormControlLabel, Switch  } from '@material-ui/core'\n//import {SettingsIcon} from '@material-ui/icons/Settings';\nimport SettingsIcon from \"@material-ui/icons/Settings\";\nimport { useState, useRef} from 'react'\nimport { prefres } from '../prefrences';\nimport * as C from '../util/constants'\n\n\ninterface menu_props {\n  handleSettings: (e: prefres) => void,\n  prefs: prefres,\n  handleOpenConfig: ()=>void\n}\nexport default function ControlMenu(props: menu_props) {\n\n // const value = useContext(Settings)\n  //console.log(value)\n  const { prefs, handleSettings, handleOpenConfig } = props\n  const divRef = useRef(null)\n\n  const [open, setOpen] = useState(false)\n  \n\n  const handleOpen = () => {\n    setOpen(true)\n\n\n  }\n  const handleClose = (e: C.menuCommands | undefined) => {\n    setOpen(false)\n  }\n\n  const handleChange = (e: C.menuCommands) => {\n    \n    let p = Object.assign({},prefs)\n    switch (e) {\n      case C.menuCommands.CLEAR_SELECTED_ON_CMD:\n        p.clearProgrammerAfterCMD = !prefs.clearProgrammerAfterCMD\n        break;\n      case C.menuCommands.IF_SELECTED:\n        p.showOnlySelected = !prefs.showOnlySelected\n        break;\n      case C.menuCommands.DARK_MODE:\n        p.darkMode = !prefs.darkMode\n        break;\n      case C.menuCommands.PROGRAMMER_TABLE_VIEW:\n        p.programmerTableView = !prefs.programmerTableView\n        break;\n      case C.menuCommands.TRIPPLE_TAP_CLEAR_ON_ONE:\n        p.trippleTapClearOnOne = !prefs.trippleTapClearOnOne\n        break;\n    }\n    handleSettings(p)\n  }\n  let button =\n    <Button ref={divRef} aria-controls=\"simple-menu\" aria-haspopup=\"true\" onClick={() => handleOpen()}>\n      <SettingsIcon />\n    </Button>\n  if(process.env.NODE_ENV === 'development'){\n    document.title = 'PJ Dev'\n  }\n  return (\n    <div>\n\n      {button}\n\n\n      <Menu\n        id=\"simple-menu\"\n        keepMounted\n        //@ts-ignore\n        anchorEl={divRef.current}\n        open={open}\n        onClose={() => handleClose(undefined)}\n      >\n        <MenuItem >\n          <FormControlLabel\n            control={<Switch key={C.menuCommands.CLEAR_SELECTED_ON_CMD} checked={prefs.clearProgrammerAfterCMD}\n              onClick={(e) => handleChange(C.menuCommands.CLEAR_SELECTED_ON_CMD)} name=\"clearSelectedOnPress\" />}\n            label=\"Clear Programmer On CMD\"\n          />\n        </MenuItem>\n        <MenuItem key='trippletap'>\n\n          <FormControlLabel\n            control={<Switch key={C.menuCommands.TRIPPLE_TAP_CLEAR_ON_ONE} checked={prefs.trippleTapClearOnOne}\n              onChange={(e) => handleChange(C.menuCommands.TRIPPLE_TAP_CLEAR_ON_ONE)} name=\"trippleTap\" />}\n            label=\"Auto 3x Clear\"\n          />\n       \n        </MenuItem>\n        <MenuItem>\n\n          <FormControlLabel\n            control={<Switch key={C.menuCommands.IF_SELECTED} checked={prefs.showOnlySelected}\n              onChange={(e) => handleChange(C.menuCommands.IF_SELECTED)} name=\"showonlyselected\" />}\n            label=\"Show Only Selected\"\n          />\n        </MenuItem>\n        <MenuItem>\n\n          <FormControlLabel\n            control={<Switch key={C.menuCommands.DARK_MODE} checked={prefs.darkMode}\n              onChange={(e) => handleChange(C.menuCommands.DARK_MODE)} name=\"darkMode\" />}\n            label=\"Dark Mode\"\n          />\n       \n        </MenuItem>\n        <MenuItem>\n\n          <FormControlLabel\n            control={<Switch key={C.menuCommands.PROGRAMMER_TABLE_VIEW} checked={prefs.programmerTableView}\n              onChange={(e) => handleChange(C.menuCommands.PROGRAMMER_TABLE_VIEW)} name=\"Programmer Table View\" />}\n            label=\"Programmer Table View\"\n          />\n       \n        </MenuItem>\n        <MenuItem>\n        <Button onClick={(e)=>{setOpen(false); handleOpenConfig()}}>Edit Config</Button>\n        </MenuItem>\n      </Menu>\n     \n      <span style={{textAlign:'center', fontSize: 10}}> vanPJ v{process.env.REACT_APP_VERSION}{process.env.NODE_ENV==='development'?' Beta':''}</span>\n    </div>\n  )\n\n}","import { CircularProgress } from \"@material-ui/core\";\n\nexport default function Disconnected(){\n    return (\n      \n            <div style={{width:'100%', textAlign:'center'}} >\n     \n            <CircularProgress  color=\"secondary\" />\n            <p>Can't connect to server</p>\n            \n            </div>\n   \n    )\n}","import React, { useEffect, useState } from 'react';\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\nimport { createMuiTheme, createStyles, makeStyles, ThemeProvider, Theme } from '@material-ui/core/styles';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport App from './App';\nimport * as Pref from './prefrences';\nimport ControlMenu from './components/ControlMenu';\nimport socketIOClinet   from 'socket.io-client'\nimport { Backdrop } from '@material-ui/core';\nimport Disconnected from './components/Disconnected';\nexport const Settings = React.createContext(Pref.defaultPrefs)\n\nexport let socket =socketIOClinet()\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    backdrop: {\n      zIndex: theme.zIndex.drawer + 1,\n      color: '#fff',\n    },\n  }),\n);\nexport default function LoadPage() {\n    const prefersDarkMode = useMediaQuery('(prefers-color-scheme: dark)');\n    // const prefersDarkMode = getDarkMode()  \n    const classes = useStyles()\n    const [prefres, setPrefs] = useState(Pref.defaultPrefs)\n    const [openConfig,setOpenConfig] = useState(false)\n    const [socketConnected,setSocketConnected]= useState(false)\n\n    useEffect(()=>{\n    if(!socketConnected){\n      try{\n   \n          console.log('Connecting Socket...')\n       // let s = socketIOClinet()\n    \n        socket.on('connect',()=>{\n           // socket = s\n            setSocketConnected(true)\n        })\n        socket.on('disconnect',()=>{\n           // socket = undefined\n            setSocketConnected(false)\n        })\n      \n      }catch(e){\n\n      }\n    }\n    return function cleanup(){\n     \n    }\n\n    },[socketConnected])\n\n    useEffect(() => {\n  \n        setPrefs(Pref.getPrefrences(prefersDarkMode))\n      \n    }, [prefersDarkMode])\n\n    const theme = createMuiTheme({\n        palette: {\n            type: prefres.darkMode ? 'dark' : 'light',\n        }\n    })\n   \n    const handlePrefs = (p: Pref.prefres) => {\n       // console.log(prefres)\n        setPrefs(p)\n      //  console.log(prefres)\n        Pref.setCookie(p)\n    }\n    return (\n        <ThemeProvider theme={theme}>\n            <Settings.Provider value={prefres}/>\n            <CssBaseline />\n            <Backdrop className={classes.backdrop} open={!socketConnected} >\n                <Disconnected/>\n            </Backdrop>\n                <ControlMenu handleOpenConfig={()=> setOpenConfig(true)}handleSettings={handlePrefs} prefs={prefres} />\n                <App socket={socket} prefs={prefres} openConfig={openConfig} handleCloseConfig={()=>setOpenConfig(false)}/>\n              \n                \n            \n        </ThemeProvider>\n    );\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n    window.location.hostname === 'localhost' ||\n      // [::1] is the IPv6 localhost address.\n      window.location.hostname === '[::1]' ||\n      // 127.0.0.0/8 are considered localhost for IPv4.\n      window.location.hostname.match(\n        /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n      )\n  );\n  \n  export function register(config) {\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n      // The URL constructor is available in all browsers that support SW.\n      const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n      if (publicUrl.origin !== window.location.origin) {\n        // Our service worker won't work if PUBLIC_URL is on a different origin\n        // from what our page is served on. This might happen if a CDN is used to\n        // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n        return;\n      }\n  \n      window.addEventListener('load', () => {\n        const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n  \n        if (isLocalhost) {\n          // This is running on localhost. Let's check if a service worker still exists or not.\n          checkValidServiceWorker(swUrl, config);\n  \n          // Add some additional logging to localhost, pointing developers to the\n          // service worker/PWA documentation.\n          navigator.serviceWorker.ready.then(() => {\n            console.log(\n              'This web app is being served cache-first by a service ' +\n                'worker. To learn more, visit https://bit.ly/CRA-PWA'\n            );\n          });\n        } else {\n          // Is not localhost. Just register service worker\n          registerValidSW(swUrl, config);\n        }\n      });\n    }\n  }\n  \n  function registerValidSW(swUrl, config) {\n    navigator.serviceWorker\n      .register(swUrl)\n      .then(registration => {\n        registration.onupdatefound = () => {\n          const installingWorker = registration.installing;\n          if (installingWorker == null) {\n            return;\n          }\n          installingWorker.onstatechange = () => {\n            if (installingWorker.state === 'installed') {\n              if (navigator.serviceWorker.controller) {\n                // At this point, the updated precached content has been fetched,\n                // but the previous service worker will still serve the older\n                // content until all client tabs are closed.\n                console.log(\n                  'New content is available and will be used when all ' +\n                    'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n                );\n  \n                // Execute callback\n                if (config && config.onUpdate) {\n                  config.onUpdate(registration);\n                }\n              } else {\n                // At this point, everything has been precached.\n                // It's the perfect time to display a\n                // \"Content is cached for offline use.\" message.\n                console.log('Content is cached for offline use.');\n  \n                // Execute callback\n                if (config && config.onSuccess) {\n                  config.onSuccess(registration);\n                }\n              }\n            }\n          };\n        };\n      })\n      .catch(error => {\n        console.error('Error during service worker registration:', error);\n      });\n  }\n  \n  function checkValidServiceWorker(swUrl, config) {\n    // Check if the service worker can be found. If it can't reload the page.\n    fetch(swUrl, {\n      headers: { 'Service-Worker': 'script' },\n    })\n      .then(response => {\n        // Ensure service worker exists, and that we really are getting a JS file.\n        const contentType = response.headers.get('content-type');\n        if (\n          response.status === 404 ||\n          (contentType != null && contentType.indexOf('javascript') === -1)\n        ) {\n          // No service worker found. Probably a different app. Reload the page.\n          navigator.serviceWorker.ready.then(registration => {\n            registration.unregister().then(() => {\n              window.location.reload();\n            });\n          });\n        } else {\n          // Service worker found. Proceed as normal.\n          registerValidSW(swUrl, config);\n        }\n      })\n      .catch(() => {\n        console.log(\n          'No internet connection found. App is running in offline mode.'\n        );\n      });\n  }\n  \n  export function unregister() {\n    if ('serviceWorker' in navigator) {\n      navigator.serviceWorker.ready\n        .then(registration => {\n          registration.unregister();\n        })\n        .catch(error => {\n          console.error(error.message);\n        });\n    }\n  }\n  ","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport LoadPage from './LoadPage'\nimport * as serviceWorker from './serviceWorker';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n \n    <LoadPage/>\n  \n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://cra.link/PWA\nserviceWorker.register();\n"],"sourceRoot":""}