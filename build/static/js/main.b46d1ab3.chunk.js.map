{"version":3,"sources":["util/constants.ts","components/numberpad.tsx","components/BlendDialog.tsx","components/CommandInterfaces/OSDPostion.tsx","components/CommandInterfaces/Testpattern.tsx","components/CommandInterfaces/BackColor.tsx","components/MenuDialog.tsx","components/Alert.tsx","components/CommandInterfaces/LensCal.tsx","components/LensDialog.tsx","components/CommandInterfaces/Power.tsx","components/CommandInterfaces/Shutter.tsx","components/ProjectorSetupDialog.tsx","components/CommandPad.tsx","components/Worlds.tsx","util/CMD.ts","components/PJ.tsx","components/PJCard.tsx","components/ProgrammerTable.tsx","components/Programmer.tsx","util/getter.ts","components/PatchAddDialog.tsx","components/Patch.tsx","components/ConfigDialog.tsx","util/SocketListener.ts","components/InputPopup.tsx","App.tsx","prefrences.ts","components/ControlMenu.tsx","components/Disconnected.tsx","LoadPage.tsx","serviceWorker.js","reportWebVitals.js","index.js"],"names":["pjServer","process","ioCommands","commands","menuCommands","THRU","DEL","CLEAR","NEXT","IF_PROG","BACK","ENTER","STORE_GROUP","ControlCommands","PROJECTOR_MAKES","ConfigHeaders","keys","defaultConfig","Patch","Location","LastUpdated","Date","Polling","Polling_Interval","Groups","0","name","group","ButtonStyle","width","height","Numberpad","props","handlePad","getButtons","C","map","key","w","Button","variant","style","padding","touchAction","size","onClick","e","Paper","elevation","className","buttons","groups","i","length","g","slice","push","ButtonGroup","buttonGroups","BlendDialog","open","handleClose","handleCommand","buttonStyle","buttonGroupStyle","justifyContent","textAlign","margin","Dialog","onClose","aria-labelledby","DialogTitle","id","EDGE_BLENDING_ON","EDGE_BLENDING_OFF","EDGE_BLENDING_MARKERS_ON","EDGE_BLENDING_MARKERS_OFF","EDGE_BLENDING_UPPER_ON","EDGE_BLENDING_UPPER_OFF","EDGE_BLENDING_RIGHT_ON","EDGE_BLENDING_RIGHT_OFF","EDGE_BLENDING_LOWER_ON","EDGE_BLENDING_LOWER_OFF","EDGE_BLENDING_LEFT_ON","EDGE_BLENDING_LEFT_OFF","useStyles","makeStyles","theme","formControl","spacing","minWidth","selectEmpty","marginTop","OSDPostion","classes","FormControl","InputLabel","Select","labelId","value","onChange","target","MenuItem","OSD_POSITION_UPPER_LEFT","OSD_POSITION_CENTER_LEFT","OSD_POSITION_LOWER_LEFT","OSD_POSITION_TOP_CENTER","OSD_POSITION_CENTER","OSD_POSITION_LOWER_CENTER","OSD_POSITION_UPPER_RIGHT","OSD_POSITION_LOWER_RIGHT","Testpattern","TEST_PATTERN_OFF","TEST_PATTERN_WHITE","TEST_PATTERN_BLACK","TEST_PATTERN_FOCUS_RED","BackColor","BACK_COLOR_BLUE","BACK_COLOR_BLACK","BACK_COLOR_DEFAULT_LOGO","BACK_COLOR_USER_LOGO","MenuDialog","MENU","MENU_DEFAULT_KEY","MENU_UP_KEY","MENU_LEFT_KEY","MENU_ENTER_KEY","MENU_RIGHT_KEY","MENU_DOWN_KEY","Alert","command","header","message","handleClick","approval","aria-describedby","DialogContent","DialogContentText","DialogActions","color","autoFocus","LensCal","useState","openHomeAlert","setOpenHomeAlert","openCalAlert","setOpenCalAlert","LENS_POSTION_HOME","shift","setShift","focus","setFocus","zoom","setZoom","getButton","cmd","text","Accordion","expanded","AccordionSummary","expandIcon","aria-controls","Typography","AccordionDetails","Container","marginLeft","paddingLeft","LENS_SHIFT_H_FN","LENS_SHIFT_H_NN","LENS_SHIFT_H_SN","LENS_SHIFT_H_SP","LENS_SHIFT_H_NP","LENS_SHIFT_H_FP","LENS_SHIFT_V_FN","LENS_SHIFT_V_NN","LENS_SHIFT_V_SN","LENS_SHIFT_V_SP","LENS_SHIFT_V_NP","LENS_SHIFT_V_FP","LENS_FOCUS_FN","LENS_FOCUS_NN","LENS_FOCUS_SN","LENS_FOCUS_SP","LENS_FOCUS_NP","LENS_FOCUS_FP","LENS_ZOOM_FN","LENS_ZOOM_NN","LENS_ZOOM_SN","LENS_ZOOM_SP","LENS_ZOOM_NP","LENS_ZOOM_FP","Power","openPowerOnAlert","setOpenPowerOnAlert","openPowerOffAlert","setOpenPowerOffAlert","POWER_OFF","POWER_ON","Shutter","SHUTTER_CLOSED","SHUTTER_OPEN","ProjectorSetup","pj","setName","ID","setID","useEffect","popUp","PROJECTOR_NAME","PROJECTOR_ID","TextField","label","CommandPad","active","pjs","menuOpen","setMenuOpen","blendOpen","setBlendOpen","lensOpen","setLensOpen","pjSetupOpen","setPJSetupOpen","disabled","Worlds","setExpanded","setWorld","selected","Object","entries","s","parseInt","processCMD","cmdLine","world","cmds","split","cmdArray","getCommandArray","forEach","newSelected","includes","filter","n","handleSelected","handleThru","indexOf","c","toString","negative","start","end","console","log","concat","groupEnd","array","num","findInt","reset","PJ","darkMode","handleTableSelect","time","setTime","getTime","lastSeen","t","now","Math","floor","setInterval","clearInterval","bStyle","b","goodWords","TableRow","TableCell","background","shutter","edgeBlending","regions","edgeBlendingUpper","edgeBlendingRight","edgeBlendingLower","edgeBlendingLeft","borderStyle","borderColor","fontSize","edgeBlendingMarker","blendRegion","testPattren","lampStatus","hdmiResolution","hmdiSignalLevel","inputSignalName_Main","PJCard","pj_tupple","cardStyle","Card","CardContent","ProgrammerTable","component","scope","osdPostion","root","flexGrow","paper","table","maxHeight","Programmer","prefs","status","getPJs","useMemo","sort","online","power","error","backColor","showOnlySelected","groupCollapsed","pjList","programmerTableView","TableContainer","Table","TableHead","TableBody","Grid","container","item","xs","goFetch","query","a","fetchString","fetch","mode","res","ok","json","marginBottom","PatchAddDialog","addPJs","currentPatch","PANASONIC","make","setMake","err","Amount","setAmount","values","getMaxID","StartID","BaseIP","setBaseIP","UserName","setUserName","Pass","setPass","Port","setPort","checkOverlap","startID","amount","fullWidth","type","isNaN","helperText","handleBaseIP","auth","fab","position","bottom","right","columns","field","headerName","hide","patch","setPatch","addWindowOpen","setAddWindowOpen","setEditWindowOpen","setSelected","deleteWindowOpen","setDeleteWindowOpen","newPJs","rows","checkboxSelection","selectionModel","onSelectionModelChange","aria-label","newPatch","assign","newSelect","getSelectedString","baseIP","port","ip_address","v4","appBar","title","flex","Transition","forwardRef","ref","Slide","direction","ConfigDialog","config","socket","polling","setPolling","pollingInterval","setPollingInterval","fullScreen","TransitionComponent","onSubmit","event","preventDefault","form","document","querySelector","data","FormData","pair","v","POLLING","POLLING_INTERVAL","setConfig","emit","EMITTING_PATCH","SocketPatcher","AppBar","Toolbar","IconButton","edge","LOCATION","defaultValue","FormControlLabel","labelPlacement","control","Switch","checked","p","handleInput","setText","App","Props","openConfig","handleCloseConfig","setCMD","undefined","vartiable","setVartiable","setActive","activeIndex","setActiveIndex","clearPresses","setClearPressed","groupNameOpen","setGroupNameOpen","setPJs","pollingProgress","setPollingProgress","setCommand","blendMarker","blend","hdmiInput","signalName","rigStatus","setStatus","on","EMITTING_PJS","EMITTING_STATUS","REQUEST_UPDATE","REQUESTING_UPDATE","REQUEST_CONFIG","EMITTING_CONFIG","EMITTING_POLLING_PROGRESS","progress","SocketListener","EMITTING_CMD","pjIDs","clearProgrammerAfterCMD","onkeyup","handleCMD","handleNext","handleBack","getGroup","finalCMD","diffrentPJs","groupID","rel","href","LinearProgress","float","InputLabelProps","shrink","cookieName","defaultPrefs","setCookie","Cookies","set","getCookie","get","getPrefrences","JSON","parse","d","ControlMenu","handleSettings","handleOpenConfig","divRef","useRef","setOpen","handleChange","CLEAR_SELECTED_ON_CMD","IF_SELECTED","DARK_MODE","PROGRAMMER_TABLE_VIEW","button","aria-haspopup","Menu","keepMounted","anchorEl","current","Disconnected","CircularProgress","Settings","React","createContext","Pref","socketIOClinet","createStyles","backdrop","zIndex","drawer","LoadPage","prefersDarkMode","useMediaQuery","prefres","setPrefs","setOpenConfig","socketConnected","setSocketConnected","createMuiTheme","palette","ThemeProvider","Provider","CssBaseline","Backdrop","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","onUpdate","onSuccess","catch","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById","URL","origin","addEventListener","headers","response","contentType","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.b46d1ab3.chunk.js","sourcesContent":["import { CSSProperties } from \"react\";\r\n\r\n\r\nexport let pjServer = 'http://localhost:3000/'\r\n//export let pjServer = 'http://192.168.10.249:3000/'\r\nif(process.env.NODE_ENV ==='production'){\r\n    pjServer = process.env.REACT_APP_SERVER? process.env.REACT_APP_SERVER : 'localhost:3000';\r\n}\r\n\r\n\r\nexport const fetchSettings: RequestInit = {\r\n    method:'get',\r\n    headers:{\r\n        \r\n    }\r\n   \r\n}\r\n\r\n\r\nexport type PJs = Record<number,PJ_OBJ>\r\n\r\nexport enum ioCommands {\r\n    REQUEST_UPDATE = 'REQUEST_UPDATE',\r\n    REQUESTING_UPDATE = 'REQUESTING_UPDATE',\r\n    EMITTING_PJS = 'EMITTING_PJS',\r\n    EMITTING_STATUS = 'EMITTING_STATUS',\r\n    REQUEST_CONFIG = 'REQUEST_CONFIG',\r\n    EMITTING_CONFIG = 'EMITTING_CONFIG',\r\n    REQUESTING_CONFIG = 'REQUESTING_CONFIG', \r\n    EMITTING_PATCH = 'EMITTING_PATCH',\r\n    EMITTING_POLLING_PROGRESS = 'EMITTING_POLLING_PROGRESS',\r\n    EMITTING_CMD = 'EMITTING_CMD',\r\n    STORE_GROUP = 'STORE_GROUP'\r\n}\r\nexport interface PJ_OBJ{\r\n    id: number,\r\n    power: string,\r\n    name: string,\r\n    shutter: string,\r\n    online: string,\r\n    lastSeen: number,\r\n    lampStatus: string,\r\n    edgeBlending: string,\r\n    edgeBlendingMarker: string,\r\n    edgeBlendingUpper: string,\r\n    edgeBlendingLower: string,\r\n    edgeBlendingRight: string,\r\n    edgeBlendingLeft: string,\r\n    testPattren: string,\r\n    backColor: string,\r\n    hmdiSignalLevel : string,\r\n    hdmiResolution: string,\r\n    osdPostion: string,\r\n    inputSignalName_Main: string,\r\n    error: string\r\n}\r\nexport interface RIG_STATUS{\r\n    online: boolean,\r\n    power: boolean,\r\n    shutter: boolean,\r\n    blend: boolean,\r\n    blendMarker: boolean,\r\n    testPattren: boolean,\r\n    lampStatus: boolean,\r\n    hdmiInput:boolean,\r\n    signalName: boolean\r\n}\r\n\r\nexport enum commands{\r\n    THRU = 'THRU',\r\n    DEL = 'DEL',\r\n    CLEAR = 'CLEAR',\r\n    ENTER = 'ENTER',\r\n    NEXT = 'NEXT',\r\n    BACK = 'BACK',\r\n    IF_PROG = 'IF_PROG'\r\n\r\n}\r\n\r\nexport enum menuCommands{\r\n    CLEAR_SELECTED_ON_CMD = 'CLEAR_SELECTED_ON_CMD',\r\n    IF_SELECTED = 'IF_SELECTED',\r\n    DARK_MODE = 'DARK_MODE',\r\n    PROGRAMMER_TABLE_VIEW ='PROGRAMMER_TABLE_VIEW'\r\n}\r\nexport const _keys= ['7','8','9','4','5','6','1','2','3','-','0','+',commands.THRU,commands.DEL, commands.CLEAR, commands.NEXT, commands.IF_PROG, commands.BACK, commands.ENTER, ioCommands.STORE_GROUP]\r\n\r\nexport const keys= ['7','8','9','4','5','6','1','2','3','-','0','+',commands.THRU,commands.DEL, commands.CLEAR, commands.NEXT, commands.IF_PROG, commands.BACK, commands.ENTER]\r\n\r\nexport enum ControlCommands {\r\n    POWER_OFF = 'POWER_OFF',\r\n    POWER_ON = 'POWER_ON',\r\n    SHUTTER_CLOSED = 'SHUTTER_CLOSED',\r\n    SHUTTER_OPEN = 'SHUTTER_OPEN',\r\n    EDGE_BLENDING_OFF = 'EDGE_BLENDING_OFF',\r\n    EDGE_BLENDING_ON = 'EDGE_BLENDING_ON',\r\n    EDGE_BLENDING_MARKERS_ON = 'EDGE_BLENDING_MARKERS_ON',\r\n    EDGE_BLENDING_MARKERS_OFF = 'EDGE_BLENDING_MARKERS_OFF',\r\n    TEST_PATTERN_OFF = 'TEST_PATTERN_OFF',\r\n    TEST_PATTERN_WHITE = 'TEST_PATTERN_WHITE',\r\n    TEST_PATTERN_BLACK = 'TEST_PATTERN_BLACK',\r\n    TEST_PATTERN_FOCUS_RED = 'TEST_PATTERN_FOCUS_RED',\r\n    MENU = 'MENU',\r\n    MENU_DOWN_KEY = 'MENU_DOWN_KEY',\r\n    MENU_UP_KEY = 'MENU_UP_KEY',\r\n    MENU_RIGHT_KEY = 'MENU_RIGHT_KEY',\r\n    MENU_LEFT_KEY = 'MENU_LEFT_KEY',\r\n    MENU_DEFAULT_KEY = 'MENU_DEFAULT_KEY',\r\n    MENU_ENTER_KEY = 'MENU_ENTER_KEY',\r\n    EDGE_BLENDING_UPPER_ON = 'EDGE_BLENDING_UPPER_ON',\r\n    EDGE_BLENDING_UPPER_OFF = 'EDGE_BLENDING_UPPER_OFF',\r\n    EDGE_BLENDING_LOWER_OFF = 'EDGE_BLENDING_LOWER_OFF',\r\n    EDGE_BLENDING_LOWER_ON = 'EDGE_BLENDING_LOWER_ON',\r\n    EDGE_BLENDING_RIGHT_OFF = 'EDGE_BLENDING_RIGHT_OFF',\r\n    EDGE_BLENDING_RIGHT_ON = 'EDGE_BLENDING_RIGHT_ON',\r\n    EDGE_BLENDING_LEFT_OFF = 'EDGE_BLENDING_LEFT_OFF',\r\n    EDGE_BLENDING_LEFT_ON = 'EDGE_BLENDING_LEFT_ON',\r\n    OSD_POSITION_UPPER_LEFT = 'OSD_POSITION_UPPER_LEFT',\r\n    OSD_POSITION_CENTER_LEFT = 'OSD_POSITION_CENTER_LEFT',\r\n    OSD_POSITION_LOWER_LEFT = 'OSD_POSITION_LOWER_LEFT',\r\n    OSD_POSITION_TOP_CENTER = 'OSD_POSITION_TOP_CENTER',\r\n    OSD_POSITION_CENTER = 'OSD_POSITION_CENTER',\r\n    OSD_POSITION_LOWER_CENTER = 'OSD_POSITION_LOWER_CENTER',\r\n    OSD_POSITION_UPPER_RIGHT = 'OSD_POSITION_UPPER_RIGHT',\r\n    OSD_POSITION_CENTER_RIGHT = 'OSD_POSITION_CENTER_RIGHT',\r\n    OSD_POSITION_LOWER_RIGHT = 'OSD_POSITION_LOWER_RIGHT',\r\n    PROJECTOR_NAME = 'PROJECTOR_NAME',\r\n    NUMBER_KEY_0 = 'NUMBER_KEY_0',\r\n    NUMBER_KEY_1 = 'NUMBER_KEY_1',\r\n    NUMBER_KEY_2 = 'NUMBER_KEY_2',\r\n    NUMBER_KEY_3 = 'NUMBER_KEY_3',\r\n    NUMBER_KEY_4 = 'NUMBER_KEY_4',\r\n    NUMBER_KEY_5 = 'NUMBER_KEY_5',\r\n    NUMBER_KEY_6 = 'NUMBER_KEY_6',\r\n    NUMBER_KEY_7 = 'NUMBER_KEY_7',\r\n    NUMBER_KEY_8 = 'NUMBER_KEY_8',\r\n    NUMBER_KEY_9 = 'NUMBER_KEY_9',\r\n    LENS_POSTION_HOME = 'LENS_POSTION_HOME',\r\n    LENS_CALIBRATION = 'LENS_CALIBRATION',\r\n    LENS_SHIFT_H_SP = 'LENS_SHIFT_H_SP',\r\n    LENS_SHIFT_H_SN = 'LENS_SHIFT_H_SN',\r\n    LENS_SHIFT_H_NP = 'LENS_SHIFT_H_NP',\r\n    LENS_SHIFT_H_NN = 'LENS_SHIFT_H_NN',\r\n    LENS_SHIFT_H_FP = 'LENS_SHIFT_H_FP',\r\n    LENS_SHIFT_H_FN = 'LENS_SHIFT_H_FN',\r\n    LENS_SHIFT_V_SP = 'LENS_SHIFT_V_SP',\r\n    LENS_SHIFT_V_SN = 'LENS_SHIFT_V_SN',\r\n    LENS_SHIFT_V_NP = 'LENS_SHIFT_V_NP',\r\n    LENS_SHIFT_V_NN = 'LENS_SHIFT_V_NN',\r\n    LENS_SHIFT_V_FP = 'LENS_SHIFT_V_FP',\r\n    LENS_SHIFT_V_FN = 'LENS_SHIFT_V_FN',\r\n    LENS_FOCUS_SP = 'LENS_FOCUS_SP',\r\n    LENS_FOCUS_SN = 'LENS_FOCUS_SN',\r\n    LENS_FOCUS_NP = 'LENS_FOCUS_NP',\r\n    LENS_FOCUS_NN = 'LENS_FOCUS_NN',\r\n    LENS_FOCUS_FP = 'LENS_FOCUS_FP',\r\n    LENS_FOCUS_FN = 'LENS_FOCUS_FN',\r\n    LENS_ZOOM_SP = 'LENS_ZOOM_SP',\r\n    LENS_ZOOM_SN = 'LENS_ZOOM_SN',\r\n    LENS_ZOOM_NP = 'LENS_ZOOM_NP',\r\n    LENS_ZOOM_NN = 'LENS_ZOOM_NN',\r\n    LENS_ZOOM_FP = 'LENS_ZOOM_FP',\r\n    LENS_ZOOM_FN = 'LENS_ZOOM_FN',\r\n    BACK_COLOR_BLUE = 'BACK_COLOR_BLUE',\r\n    BACK_COLOR_BLACK = 'BACK_COLOR_BLACK',\r\n    BACK_COLOR_USER_LOGO = 'BACK_COLOR_USER_LOGO',\r\n    BACK_COLOR_DEFAULT_LOGO = 'BACK_COLOR_DEFAULT_LOGO',\r\n    PROJECTOR_ID = 'PROJECTOR_ID'\r\n\r\n\r\n}\r\n\r\nexport type ControlKeys = keyof typeof ControlCommands\r\n\r\nexport enum PROJECTOR_MAKES {\r\n    PANASONIC = 'PANASONIC'\r\n}\r\n\r\n\r\n\r\nexport type PROJECTOR_MAKE = keyof typeof PROJECTOR_MAKES\r\n\r\n\r\nexport enum ConfigHeaders{\r\n    LOCATION = 'LOCATION',\r\n    LAST_UPDATED = 'LAST_UPDATED',\r\n    POLLING = 'POLLING',\r\n    POLLING_INTERVAL = 'POLLING_INTERVAL',\r\n    PATCH = 'PATCH'\r\n    \r\n}\r\ninterface Projector{\r\n    ip_address: string,\r\n    port: number,\r\n    auth: string,\r\n    make: keyof typeof PROJECTOR_MAKES,\r\n    id: number\r\n}\r\nexport type Patch = Record<string,Projector>\r\nexport type Group = {name: string, group: number[]}\r\nexport type Groups = Record<number, Group>\r\nexport interface Config {\r\n    Patch: Patch,\r\n    Location: string,\r\n    LastUpdated: string,\r\n    Polling: boolean,\r\n    Polling_Interval: number,\r\n    Groups: Groups\r\n}\r\n\r\n\r\nexport type ConfigKeys = keyof typeof ConfigHeaders\r\nexport const defaultConfig: Config = {\r\n    Patch: {},\r\n    Location: '',\r\n    LastUpdated: Date(),\r\n    Polling: false,\r\n    Polling_Interval: 60000,\r\n    Groups: {0:{name:'All',group:[]}}\r\n}\r\n\r\nexport type HandleCommand = (cmd: ControlKeys, text?: string )=> void\r\n\r\nexport const ButtonStyle: CSSProperties={\r\n\r\n    width: '150px',\r\n    height: '50px'\r\n\r\n}","import {Button, ButtonGroup, Paper} from '@material-ui/core'\r\nimport './numberpad.css'\r\n\r\nimport * as C from '../util/constants'\r\ninterface numberpad_props{\r\n    handlePad: (e: string)=>void\r\n}\r\nexport default function Numberpad(props:numberpad_props){\r\n    const {handlePad} =props\r\n    \r\n    const getButtons=()=>{\r\n     \r\n        return C.keys.map(key=>{\r\n            let w = key === C.ioCommands.STORE_GROUP? '125px' : '75px'\r\n            return <Button variant=\"contained\" style={{padding: '10px', width: w, touchAction: 'manuplation'}} size={'large'} key={key} onClick={(e)=>handlePad(key)} >{key}</Button>     \r\n        })\r\n    }\r\n\r\n    const buttonGroups=()=>{\r\n        let buttons = getButtons()\r\n        let groups =[]\r\n        let chunk = 3\r\n        for(let i=0; i<=buttons.length-chunk; i+=chunk){\r\n           \r\n            let g = buttons.slice(i,chunk+i)\r\n           \r\n            groups.push(\r\n                <ButtonGroup key={'pad_group'+i}>\r\n                   {g}\r\n                </ButtonGroup>\r\n             \r\n            )\r\n        }\r\n        return groups\r\n    }\r\n    return (\r\n        <Paper style={{touchAction: 'manuplation'}}elevation={1} className='pad'>\r\n            \r\n            {buttonGroups()}\r\n            {getButtons()[C.keys.length-1]}\r\n            \r\n        </Paper>\r\n\r\n    )\r\n}","import { Dialog, DialogTitle, Button, ButtonGroup } from \"@material-ui/core\";\r\nimport { CSSProperties } from \"react\";\r\nimport { ControlKeys, ControlCommands } from '../util/constants'\r\ninterface BlendDialog_Props {\r\n    open: boolean,\r\n    handleClose: () => void,\r\n    handleCommand: (e: ControlKeys) => void\r\n}\r\n\r\nexport default function BlendDialog(props: BlendDialog_Props) {\r\n    const { open, handleClose, handleCommand } = props\r\n    const buttonStyle: CSSProperties = {\r\n        padding: '20px',\r\n        width: '140px'\r\n\r\n       \r\n    }\r\n    const buttonGroupStyle: CSSProperties = {\r\n        justifyContent: 'center',\r\n        textAlign: 'center',\r\n        margin: 'auto'\r\n       \r\n        \r\n    }\r\n    return (\r\n        <Dialog key='blend_dialog'  onClose={handleClose} aria-labelledby=\"simple-dialog-title\" open={open}>\r\n            <DialogTitle style={buttonGroupStyle} key='menu_dialog_title' id=\"simple-dialog-title\">Blending</DialogTitle>\r\n            <div key='blend_div' style={{width:300, justifyContent: 'center', textAlign: 'center'}}>\r\n            <ButtonGroup style={buttonGroupStyle} key='blend_main_keys' variant=\"outlined\">\r\n                <Button style={buttonStyle} key='blend_on' onClick={(e) => handleCommand(ControlCommands.EDGE_BLENDING_ON)} >Edge Blend On</Button>\r\n                <Button style={buttonStyle} key='blend_off' onClick={(e) => handleCommand(ControlCommands.EDGE_BLENDING_OFF)} >Edge Blend Off</Button>\r\n            </ButtonGroup>\r\n\r\n            <br></br>\r\n\r\n            <ButtonGroup style={buttonGroupStyle} key='makers_main_keys' variant=\"outlined\">\r\n                <Button style={buttonStyle} key='markers_on' onClick={(e) => handleCommand(ControlCommands.EDGE_BLENDING_MARKERS_ON)} >Markers On</Button>\r\n                <Button style={buttonStyle} key='markers_off' onClick={(e) => handleCommand(ControlCommands.EDGE_BLENDING_MARKERS_OFF)} >Markers Off</Button>\r\n            </ButtonGroup>\r\n\r\n            <br></br>\r\n\r\n            <ButtonGroup style={buttonGroupStyle} key='upper_keys' variant=\"outlined\">\r\n                <Button style={buttonStyle} key='upper_on' onClick={(e) => handleCommand(ControlCommands.EDGE_BLENDING_UPPER_ON)} >Uppere On</Button>\r\n                <Button style={buttonStyle} key='upper_off' onClick={(e) => handleCommand(ControlCommands.EDGE_BLENDING_UPPER_OFF)} >Uppper Off</Button>\r\n            </ButtonGroup>\r\n\r\n            <ButtonGroup style={buttonGroupStyle} key='right_keys' variant=\"outlined\">\r\n                <Button style={buttonStyle} key='right_on' onClick={(e) => handleCommand(ControlCommands.EDGE_BLENDING_RIGHT_ON)} >Right On</Button>\r\n                <Button style={buttonStyle} key='right_off' onClick={(e) => handleCommand(ControlCommands.EDGE_BLENDING_RIGHT_OFF)} >Right Off</Button>\r\n            </ButtonGroup>\r\n\r\n            <ButtonGroup style={buttonGroupStyle} key='lower_keys' variant=\"outlined\">\r\n                <Button style={buttonStyle} key='lower_on' onClick={(e) => handleCommand(ControlCommands.EDGE_BLENDING_LOWER_ON)} >Lower On</Button>\r\n                <Button style={buttonStyle} key='lower_off' onClick={(e) => handleCommand(ControlCommands.EDGE_BLENDING_LOWER_OFF)} >Lower Off</Button>\r\n            </ButtonGroup>\r\n\r\n            <ButtonGroup style={buttonGroupStyle} key='left_keys' variant=\"outlined\">\r\n                <Button style={buttonStyle} key='left_on' onClick={(e) => handleCommand(ControlCommands.EDGE_BLENDING_LEFT_ON)} >Left On</Button>\r\n                <Button style={buttonStyle} key='left_off' onClick={(e) => handleCommand(ControlCommands.EDGE_BLENDING_LEFT_OFF)} >Left Off</Button>\r\n            </ButtonGroup>\r\n            </div>\r\n        </Dialog>\r\n    );\r\n}","import {ControlKeys, ControlCommands} from '../../util/constants'\r\nimport {FormControl, InputLabel, Select, MenuItem, makeStyles} from '@material-ui/core'\r\n\r\ninterface OSDProps{\r\n    handleCommand: (e: ControlKeys) => void\r\n}\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    formControl: {\r\n      margin: theme.spacing(1),\r\n      minWidth: 120,\r\n    },\r\n    selectEmpty: {\r\n      marginTop: theme.spacing(2),\r\n    },\r\n  }));\r\nexport default function OSDPostion(props: OSDProps){\r\n    const {handleCommand} = props\r\n    const classes = useStyles()\r\n\r\n    return (\r\n        <>\r\n    <FormControl className={classes.formControl}>\r\n    <InputLabel id='osd_position'>OSD Position</InputLabel>\r\n    <Select labelId='osd_position' id='osd_postion'\r\n     value={''} onChange={((e)=> handleCommand(e.target.value as ControlKeys))}>\r\n         <MenuItem value={ControlCommands.OSD_POSITION_UPPER_LEFT}>Upper Left</MenuItem>\r\n         <MenuItem value={ControlCommands.OSD_POSITION_CENTER_LEFT}>Center Left</MenuItem>\r\n         <MenuItem value={ControlCommands.OSD_POSITION_LOWER_LEFT}>Lower Left</MenuItem>\r\n         <MenuItem value={ControlCommands.OSD_POSITION_TOP_CENTER}>Top Center</MenuItem>\r\n         <MenuItem value={ControlCommands.OSD_POSITION_CENTER}>Center</MenuItem>\r\n         <MenuItem value={ControlCommands.OSD_POSITION_LOWER_CENTER}>Lower Center</MenuItem>\r\n         <MenuItem value={ControlCommands.OSD_POSITION_UPPER_RIGHT}>Upper Right</MenuItem>\r\n         <MenuItem value={ControlCommands.OSD_POSITION_LOWER_RIGHT}>Lower Right</MenuItem>\r\n     </Select>\r\n     \r\n</FormControl>\r\n</> )\r\n}","import { ControlKeys, ControlCommands } from '../../util/constants'\r\nimport { FormControl, InputLabel, Select, MenuItem, makeStyles } from '@material-ui/core'\r\n\r\ninterface TestPatterProps {\r\n    handleCommand: (e: ControlKeys) => void\r\n}\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    formControl: {\r\n        margin: theme.spacing(1),\r\n        minWidth: 120,\r\n    },\r\n    selectEmpty: {\r\n        marginTop: theme.spacing(2),\r\n    },\r\n}));\r\nexport default function Testpattern(props: TestPatterProps) {\r\n    const { handleCommand } = props\r\n    const classes = useStyles()\r\n\r\n    return (\r\n        <>\r\n            <FormControl className={classes.formControl}>\r\n                <InputLabel id='test_pattren'>Test Pattren</InputLabel>\r\n                <Select labelId='test_pattren' id='test_pattren_select'\r\n                    value={''} onChange={((e) => handleCommand(e.target.value as ControlKeys))}>\r\n                    <MenuItem value={ControlCommands.TEST_PATTERN_OFF}>Off</MenuItem>\r\n                    <MenuItem value={ControlCommands.TEST_PATTERN_WHITE}>White</MenuItem>\r\n                    <MenuItem value={ControlCommands.TEST_PATTERN_BLACK}>Black</MenuItem>\r\n                    <MenuItem value={ControlCommands.TEST_PATTERN_FOCUS_RED}>Focus Red</MenuItem>\r\n                </Select>\r\n\r\n            </FormControl>\r\n        </>)\r\n}","import {ControlKeys, ControlCommands} from '../../util/constants'\r\nimport {FormControl, InputLabel, Select, MenuItem, makeStyles} from '@material-ui/core'\r\n\r\ninterface Props{\r\n    handleCommand: (e: ControlKeys) => void\r\n}\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    formControl: {\r\n      margin: theme.spacing(1),\r\n      minWidth: 120,\r\n    },\r\n    selectEmpty: {\r\n      marginTop: theme.spacing(2),\r\n    },\r\n  }));\r\nexport default function BackColor(props: Props){\r\n    const {handleCommand} = props\r\n    const classes = useStyles()\r\n\r\n    return (\r\n        <>\r\n    <FormControl className={classes.formControl}>\r\n    <InputLabel id='backcolor'>Back Color</InputLabel>\r\n    <Select labelId='backcolor' id='backcolor'\r\n     value={''} onChange={((e)=> handleCommand(e.target.value as ControlKeys))}>\r\n         <MenuItem value={ControlCommands.BACK_COLOR_BLUE}>Blue</MenuItem>\r\n         <MenuItem value={ControlCommands.BACK_COLOR_BLACK}>Black</MenuItem>\r\n         <MenuItem value={ControlCommands.BACK_COLOR_DEFAULT_LOGO}>Default Logo</MenuItem>\r\n         <MenuItem value={ControlCommands.BACK_COLOR_USER_LOGO}>User Logo</MenuItem>\r\n     </Select>\r\n     \r\n</FormControl>\r\n</> )\r\n}","import { Dialog, DialogTitle, Button, ButtonGroup, FormControl,InputLabel,Select,MenuItem, makeStyles } from \"@material-ui/core\";\r\nimport { CSSProperties } from \"react\";\r\nimport { ControlKeys, ControlCommands } from '../util/constants'\r\nimport OSDPostion from \"./CommandInterfaces/OSDPostion\";\r\nimport Testpattern from \"./CommandInterfaces/Testpattern\";\r\nimport BackColor from './CommandInterfaces/BackColor'\r\ninterface MenuDialog_Props {\r\n    open: boolean,\r\n    handleClose: () => void,\r\n    handleCommand: (e: ControlKeys) => void\r\n}\r\n\r\nexport default function MenuDialog(props: MenuDialog_Props) {\r\n    const { open, handleClose, handleCommand } = props\r\n   \r\n    const buttonStyle: CSSProperties = {\r\n        padding: '20px',\r\n        width: '100px',\r\n       \r\n    }\r\n    const buttonGroupStyle: CSSProperties = {\r\n        justifyContent: 'center',\r\n        textAlign: 'center'\r\n        \r\n    }\r\n    return (\r\n        <Dialog key='menu_dialog' onClose={handleClose} aria-labelledby=\"simple-dialog-title\" open={open}>\r\n            <DialogTitle style={buttonGroupStyle} key='menu_dialog_title' id=\"simple-dialog-title\">Menu Commands</DialogTitle>\r\n            <ButtonGroup style={buttonGroupStyle} key='menu_main_keys' variant=\"outlined\">\r\n                <Button style={buttonStyle} key='menu' onClick={(e) => handleCommand(ControlCommands.MENU)} >Menu</Button>\r\n                <Button style={buttonStyle} key='enter' onClick={(e) => handleCommand(ControlCommands.MENU_DEFAULT_KEY)} >Default</Button>\r\n            </ButtonGroup>\r\n\r\n            <br></br>\r\n\r\n            <ButtonGroup style={buttonGroupStyle} key='menu_row1_keys' variant=\"outlined\">\r\n                <Button style={buttonStyle} key='up' onClick={(e) => handleCommand(ControlCommands.MENU_UP_KEY)} >Up</Button>\r\n            </ButtonGroup>\r\n\r\n            <ButtonGroup style={buttonGroupStyle} key='menu_row2_keys' variant=\"outlined\">\r\n                <Button style={buttonStyle} key='left' onClick={(e) => handleCommand(ControlCommands.MENU_LEFT_KEY)} >Left</Button>\r\n                <Button style={buttonStyle} key='enter' onClick={(e) => handleCommand(ControlCommands.MENU_ENTER_KEY)} >Enter</Button>\r\n                <Button style={buttonStyle} key='right' onClick={(e) => handleCommand(ControlCommands.MENU_RIGHT_KEY)} >Right</Button>\r\n            </ButtonGroup>\r\n\r\n            <ButtonGroup style={buttonGroupStyle} key='menu_row3_keys' variant=\"outlined\">\r\n                <Button style={buttonStyle} key='down' onClick={(e) => handleCommand(ControlCommands.MENU_DOWN_KEY)} >Down</Button>\r\n            </ButtonGroup>\r\n\r\n           <Testpattern handleCommand={handleCommand} />\r\n           <OSDPostion handleCommand={handleCommand}/>\r\n           <BackColor handleCommand={handleCommand}/>\r\n\r\n        </Dialog>\r\n    );\r\n}","import {Button, Dialog, DialogActions, DialogTitle, DialogContent, DialogContentText } from \"@material-ui/core\";\r\nimport { ControlKeys } from \"../util/constants\";\r\ninterface Alert_Props{\r\n    open: boolean,\r\n    handleCommand: (cmd: ControlKeys)=>void,\r\n    handleClose: ()=>void,\r\n    command: ControlKeys,\r\n    header: string,\r\n    message: string\r\n}\r\nexport default function Alert(props: Alert_Props){\r\n    const {open,handleCommand, command, handleClose, header, message} = props\r\n\r\n    const handleClick=(approval: boolean)=>{\r\n        if(approval){\r\n            handleCommand(command)\r\n        }\r\n        handleClose()\r\n\r\n    }\r\n    return (\r\n        <Dialog\r\n        open={open}\r\n        onClose={handleClose}\r\n        aria-labelledby=\"alert-dialog-title\"\r\n        aria-describedby=\"alert-dialog-description\"\r\n      >\r\n        <DialogTitle id=\"alert-dialog-title\">{header}</DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText id=\"alert-dialog-description\">\r\n            <span style={{width:'50'}}>{message}</span>\r\n          </DialogContentText>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={(e)=>handleClick(false)} color=\"primary\">\r\n            Cancle\r\n          </Button>\r\n          <Button onClick={(e)=>handleClick(true)} color=\"primary\" autoFocus>\r\n            Okay\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n        \r\n    )\r\n}","import { ButtonGroup, Button } from \"@material-ui/core\";\r\nimport { useState } from \"react\";\r\nimport { ControlKeys, ControlCommands, ButtonStyle } from \"../../util/constants\";\r\nimport Alert from \"../Alert\";\r\n\r\ninterface Props{\r\n    handleCommand: (e: ControlKeys) => void\r\n}\r\nexport default function LensCal(props: Props){\r\n    const {handleCommand} = props\r\n    const [openHomeAlert, setOpenHomeAlert]= useState(false)\r\n    const [openCalAlert, setOpenCalAlert]= useState(false)\r\n    return(\r\n        <div style={{margin:'auto'}}>\r\n        <ButtonGroup key='shutters' color=\"primary\" variant=\"outlined\">\r\n        <Button  key='home'  style={ButtonStyle}  onClick={(e) => setOpenHomeAlert(true)} >Lens Home</Button>\r\n        <Button  key='cal' style={ButtonStyle}  onClick={(e) => setOpenCalAlert(true)} >Lens Cal</Button>\r\n    </ButtonGroup>\r\n    <Alert open={openHomeAlert} handleCommand={handleCommand} handleClose={()=>setOpenHomeAlert(false)}\r\n        header='Home Lense' message='Are you sure?' command={ControlCommands.LENS_POSTION_HOME}/>\r\n        <Alert open={openCalAlert} handleCommand={handleCommand} handleClose={()=>setOpenCalAlert(false)}\r\n        header='Cal Lens' message='Are you sure?' command={ControlCommands.LENS_POSTION_HOME}/>\r\n        </div>\r\n    )\r\n}","import { Dialog, DialogTitle, Button, ButtonGroup, Accordion, AccordionSummary, Typography, AccordionDetails, Container } from \"@material-ui/core\";\r\nimport ExpandMore from \"@material-ui/icons/ExpandMore\";\r\nimport { CSSProperties, useState } from \"react\";\r\nimport { ControlKeys, ControlCommands } from '../util/constants'\r\nimport LensCal from \"./CommandInterfaces/LensCal\";\r\ninterface MenuDialog_Props {\r\n    open: boolean,\r\n    handleClose: () => void,\r\n    handleCommand: (e: ControlKeys) => void\r\n}\r\n\r\nexport default function MenuDialog(props: MenuDialog_Props) {\r\n    const { open, handleClose, handleCommand } = props\r\n    const [shift, setShift] =useState(false)\r\n    const [focus, setFocus] = useState(false)\r\n    const [zoom, setZoom] = useState(false)\r\n   \r\n    const buttonStyle: CSSProperties = {\r\n        padding: '20px',\r\n        width: '50px',\r\n        touchAction: 'manipulation'\r\n       \r\n    }\r\n    const buttonGroupStyle: CSSProperties = {\r\n        justifyContent: 'center',\r\n        textAlign: 'center'\r\n        \r\n    }\r\n    const close=()=>{\r\n        setShift(false)\r\n        setZoom(false)\r\n        setFocus(false)\r\n        handleClose()\r\n    }\r\n    const getButton=(cmd: ControlKeys, text: string)=>{\r\n        return <Button style={buttonStyle} key={text} onClick={(e)=>handleCommand(cmd)}>{text}</Button>\r\n    }\r\n    return (\r\n        <Dialog key='lens_dialog' onClose={close} aria-labelledby=\"simple-dialog-title\" open={open}>\r\n            <DialogTitle style={buttonGroupStyle} key='menu_dialog_title' id=\"simple-dialog-title\">Lens Commands</DialogTitle>\r\n            <LensCal handleCommand={handleCommand} />\r\n            <Accordion key=\"shift\" style={{width:'100%'}} expanded={shift} onChange={()=>setShift(!shift)}>\r\n                <AccordionSummary expandIcon={<ExpandMore/>} aria-controls='shift' id='shift-panel' >\r\n                    <Typography> Shift</Typography>\r\n                </AccordionSummary>\r\n                <AccordionDetails>\r\n                    <Container style={{width: '70%', marginLeft: '0', paddingLeft:'0'}}>\r\n            <ButtonGroup style={buttonGroupStyle} key='h_shif' variant=\"outlined\">\r\n            {getButton(ControlCommands.LENS_SHIFT_H_FN, '<<<')}\r\n            {getButton(ControlCommands.LENS_SHIFT_H_NN, '<<')}\r\n            {getButton(ControlCommands.LENS_SHIFT_H_SN, '<')}\r\n                {getButton(ControlCommands.LENS_SHIFT_H_SP, '>')}\r\n                {getButton(ControlCommands.LENS_SHIFT_H_NP, '>>')}\r\n                {getButton(ControlCommands.LENS_SHIFT_H_FP, '>>>')}\r\n            </ButtonGroup>\r\n           \r\n            <br></br>\r\n          \r\n            <ButtonGroup style={buttonGroupStyle} key='v_shift' variant=\"outlined\">\r\n            {getButton(ControlCommands.LENS_SHIFT_V_FN, '^^^')}\r\n            {getButton(ControlCommands.LENS_SHIFT_V_NN, '^^')}\r\n            {getButton(ControlCommands.LENS_SHIFT_V_SN, '^')}\r\n                {getButton(ControlCommands.LENS_SHIFT_V_SP, 'v')}\r\n                {getButton(ControlCommands.LENS_SHIFT_V_NP, 'vv')}\r\n                {getButton(ControlCommands.LENS_SHIFT_V_FP, 'vvv')}\r\n            </ButtonGroup>\r\n            </Container>\r\n            </AccordionDetails>\r\n            </Accordion>\r\n            <br></br>\r\n            <Accordion key=\"shift\" expanded={focus} onChange={()=>setFocus(!focus)}>\r\n                <AccordionSummary expandIcon={<ExpandMore/>} aria-controls='focus' id='focus-panel' >\r\n                    <Typography> Focus</Typography>\r\n                </AccordionSummary>\r\n                <AccordionDetails>\r\n                <Container style={{width: '70%', marginLeft: '0', paddingLeft:'0'}}>\r\n            <ButtonGroup style={buttonGroupStyle} key='foucs' variant=\"outlined\">\r\n            {getButton(ControlCommands.LENS_FOCUS_FN, '<<<\\r')}\r\n            {getButton(ControlCommands.LENS_FOCUS_NN, '<<\\r')}\r\n            {getButton(ControlCommands.LENS_FOCUS_SN, '<\\r')}\r\n            {getButton(ControlCommands.LENS_FOCUS_SP, '>\\r')}\r\n            {getButton(ControlCommands.LENS_FOCUS_NP, '>>\\r')}\r\n            {getButton(ControlCommands.LENS_FOCUS_FP, '>>>\\r')}\r\n            </ButtonGroup>\r\n            </Container>\r\n            </AccordionDetails>\r\n            </Accordion>\r\n            <br></br>\r\n            <Accordion key=\"zoom\" expanded={zoom} onChange={()=>setZoom(!zoom)}>\r\n                <AccordionSummary expandIcon={<ExpandMore/>} aria-controls='zoom' id='zoom-panel' >\r\n                    <Typography> Zoom</Typography>\r\n                </AccordionSummary>\r\n                <AccordionDetails>\r\n                <Container style={{width: '70%', marginLeft: '0', paddingLeft:'0'}}>\r\n            <ButtonGroup style={buttonGroupStyle} key='zoom' variant=\"outlined\">\r\n            {getButton(ControlCommands.LENS_ZOOM_FN, '---')}\r\n            {getButton(ControlCommands.LENS_ZOOM_NN, '--')}\r\n            {getButton(ControlCommands.LENS_ZOOM_SN, '-')}\r\n            {getButton(ControlCommands.LENS_ZOOM_SP, '+')}\r\n            {getButton(ControlCommands.LENS_ZOOM_NP, '++')}\r\n            {getButton(ControlCommands.LENS_ZOOM_FP, '+++')}\r\n            </ButtonGroup>\r\n            </Container>\r\n            </AccordionDetails>\r\n            </Accordion>\r\n\r\n\r\n        </Dialog>\r\n    );\r\n}","import { ButtonGroup, Button } from \"@material-ui/core\";\r\nimport { useState } from \"react\";\r\nimport { ControlKeys, ControlCommands, ButtonStyle } from \"../../util/constants\";\r\nimport Alert from \"../Alert\";\r\n\r\ninterface PowerProps{\r\n    handleCommand: (e: ControlKeys) => void\r\n}\r\nexport default function Power(props: PowerProps){\r\n    const {handleCommand} = props\r\n    const [openPowerOnAlert, setOpenPowerOnAlert]= useState(false)\r\n    const [openPowerOffAlert, setOpenPowerOffAlert]= useState(false)\r\n    return(\r\n        <>\r\n        <ButtonGroup key='shutters' color=\"primary\" variant=\"outlined\">\r\n        <Button  key='power off'  style={ButtonStyle}  onClick={(e) => setOpenPowerOffAlert(true)} >Power Off</Button>\r\n        <Button  key='power on' style={ButtonStyle}  onClick={(e) => setOpenPowerOnAlert(true)} >Power On</Button>\r\n    </ButtonGroup>\r\n    <Alert open={openPowerOffAlert} handleCommand={handleCommand} handleClose={()=>setOpenPowerOffAlert(false)}\r\n        header='Power Off' message='Are you sure?' command={ControlCommands.POWER_OFF}/>\r\n        <Alert open={openPowerOnAlert} handleCommand={handleCommand} handleClose={()=>setOpenPowerOnAlert(false)}\r\n        header='Power On' message='Are you sure?' command={ControlCommands.POWER_ON}/>\r\n        </>\r\n    )\r\n}","import { ButtonGroup, Button } from \"@material-ui/core\"\r\nimport { ControlKeys, ControlCommands, ButtonStyle } from \"../../util/constants\"\r\n\r\ninterface ShutterProps{\r\n    handleCommand: (e: ControlKeys) => void\r\n}\r\nexport default function Shutter(props: ShutterProps){\r\n    const {handleCommand} = props\r\n    return (\r\n        <ButtonGroup key='power' color=\"primary\" variant=\"outlined\">\r\n        <Button  key='shutter_on' style={ButtonStyle} onClick={(e) => handleCommand(ControlCommands.SHUTTER_CLOSED)} >Sutter Closed (i)</Button>\r\n        <Button  key='sutter_off' style={ButtonStyle}  onClick={(e) => handleCommand(ControlCommands.SHUTTER_OPEN)} >Shutter Open (o)</Button>\r\n        </ButtonGroup>\r\n    )\r\n}","import { Dialog, DialogTitle, Button, TextField, Container } from \"@material-ui/core\";\r\nimport { CSSProperties, useState, useEffect } from \"react\";\r\nimport { ControlKeys, ControlCommands, HandleCommand, PJ_OBJ } from '../util/constants'\r\ninterface Props {\r\n    open: boolean,\r\n    handleClose: () => void,\r\n    handleCommand: HandleCommand\r\n    pj: PJ_OBJ\r\n}\r\n\r\nexport default function ProjectorSetup(props: Props) {\r\n    const { open, handleClose, handleCommand, pj } = props\r\n    const [name, setName] = useState( '' )\r\n    const [ID, setID] = useState('')\r\n    const buttonStyle: CSSProperties = {\r\n        padding: '20px',\r\n        width: '100px',\r\n        margin: 'auto'\r\n       \r\n    }\r\n    const buttonGroupStyle: CSSProperties = {\r\n        justifyContent: 'center',\r\n        textAlign: 'center'\r\n        \r\n    }\r\n\r\n    useEffect(()=>{\r\n        if(pj && pj.name){\r\n            setName(pj.name)\r\n        }\r\n    },[pj])\r\n\r\n\r\n    const handleClick=(cmd: ControlKeys)=>{\r\n        switch (cmd){\r\n            case ControlCommands.PROJECTOR_NAME:\r\n                handleCommand(cmd, name)\r\n                break\r\n            case ControlCommands.PROJECTOR_ID:\r\n                handleCommand(cmd, ID)\r\n                break;\r\n        }\r\n       \r\n        handleClose()\r\n    }\r\n    \r\n    const getButton=(cmd: ControlKeys, text: string, popUp: boolean)=>{\r\n\r\n        return <Button style={buttonStyle} key={text} onClick={(e)=>handleClick(cmd)}>{text}</Button>\r\n    }\r\n    return (\r\n        <Dialog key='setup_dialog' onClose={handleClose} aria-labelledby=\"simple-dialog-title\" open={open}>\r\n            <DialogTitle style={buttonGroupStyle} key='menu_dialog_title' id=\"simple-dialog-title\">PJ Setup</DialogTitle>\r\n           \r\n        <Container key='name'>    \r\n            <TextField key='pj_name_input' label='PJ Name' value={name} onChange={(e)=>setName(e.target.value)}></TextField>\r\n            {getButton(ControlCommands.PROJECTOR_NAME, 'Store Name', true)}\r\n        </Container>    \r\n        <Container key='id'>\r\n            <TextField key='pj_id_input' label='PJ Input' value={ID} onChange={(e)=>setID(e.target.value)}></TextField>\r\n            {getButton(ControlCommands.PROJECTOR_ID, 'Store ID', true)}\r\n        </Container>\r\n\r\n        </Dialog>\r\n    );\r\n}","import { Button, Paper, ButtonGroup, } from \"@material-ui/core\";\r\nimport {useState} from 'react'\r\nimport { ButtonStyle, HandleCommand, PJs} from \"../util/constants\";\r\nimport BlendDialog from \"./BlendDialog\";\r\nimport MenuDialog from './MenuDialog'\r\nimport LensDialog from './LensDialog'\r\nimport Power from './CommandInterfaces/Power'\r\nimport Shutter from \"./CommandInterfaces/Shutter\";\r\nimport ProjectorSetupDialog from \"./ProjectorSetupDialog\";\r\nimport { useEffect } from \"react\";\r\n\r\ninterface command_props{\r\n    handleCommand: HandleCommand\r\n    active: number[]\r\n    pjs: PJs\r\n}\r\nexport default function CommandPad(props:command_props){\r\n    const {handleCommand, active, pjs } = props\r\n    const [menuOpen, setMenuOpen] = useState(false)\r\n    const [blendOpen, setBlendOpen] = useState(false)\r\n    const [lensOpen,setLensOpen] = useState(false)\r\n    const [pjSetupOpen,setPJSetupOpen] =useState(false)\r\n\r\n    useEffect(()=>{\r\n        if(active.length!==1 || !pjs[active[0]]){\r\n            setPJSetupOpen(false)\r\n        }\r\n    },[active, pjs])\r\n    \r\n    const getPJSetup=()=>{\r\n        if(active.length===1)\r\n            return (<Button key='pj_setup' variant=\"contained\"  style={ButtonStyle} onClick={((e)=>setPJSetupOpen(!pjSetupOpen))}>PJ Setup</Button>)\r\n        \r\n            return (<Button key='pj_setup' variant=\"contained\" disabled style={ButtonStyle} onClick={((e)=>setPJSetupOpen(!pjSetupOpen))}>PJ Setup</Button>)\r\n\r\n    }\r\n    const getPJ=()=>{\r\n        return pjs[active[0]]\r\n    }\r\n    return(\r\n       <>\r\n        <Paper  key='commandKeys' style={{width:'300px'}}>\r\n           <Shutter handleCommand={handleCommand}/>\r\n            <br></br>\r\n           <Power handleCommand={handleCommand}/>\r\n            <ButtonGroup color=\"primary\" variant=\"outlined\">\r\n                <Button color=\"primary\" key='menu' variant=\"contained\" style={ButtonStyle}  onClick={(e) => setMenuOpen(!menuOpen)} >Menu</Button>\r\n                <Button color=\"primary\" key='blend' variant=\"contained\" style={ButtonStyle}  onClick={(e) => setBlendOpen(!blendOpen)} >Blend</Button>\r\n            </ButtonGroup>\r\n            <ButtonGroup color='primary' variant='outlined'>\r\n                <Button key='lens' variant=\"contained\" style={ButtonStyle} onClick={((e)=>setLensOpen(!lensOpen))}>Lens</Button>\r\n                {getPJSetup()}\r\n            </ButtonGroup>\r\n            \r\n            <MenuDialog open={menuOpen} handleClose={()=>setMenuOpen(false)} handleCommand={handleCommand}/>\r\n            <BlendDialog open={blendOpen} handleClose={()=>setBlendOpen(false)} handleCommand={handleCommand}/>\r\n            <LensDialog open={lensOpen} handleClose={()=>setLensOpen(false)} handleCommand={handleCommand} />\r\n            <ProjectorSetupDialog open={pjSetupOpen} handleClose={()=>setPJSetupOpen(false)} pj={getPJ()} handleCommand={handleCommand} />\r\n        </Paper>\r\n       \r\n        </>\r\n    )\r\n}\r\n","import {Accordion, AccordionSummary,AccordionDetails,Typography, Button} from '@material-ui/core'\r\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\"\r\nimport * as C from '../util/constants'\r\nimport {useState} from 'react'\r\n\r\ninterface worlds_props{\r\n    setWorld: (g: string)=> void\r\n    name: string\r\n    groups: C.Groups\r\n    selected?: number\r\n}\r\nexport default function Worlds( props: worlds_props){\r\n    const [expanded, setExpanded]= useState(false)\r\n    const {setWorld, name, groups, selected} = props\r\n\r\n    const getWorlds = ()=>{\r\n        return Object.entries(groups).map(group=>{\r\n            let s = false\r\n            if(selected ===parseInt(group[0]))\r\n              s = true\r\n\r\n            return <Button key={group[0]} onClick={(e)=>setWorld(group[0])} variant={s?'outlined':'text'}>{group[1].name}</Button>\r\n        })\r\n    }\r\n    return (\r\n        <Accordion key={'world'+name} expanded={expanded} onChange={()=>setExpanded(!expanded)}>\r\n        <AccordionSummary\r\n          expandIcon={<ExpandMoreIcon />}\r\n          aria-controls=\"panel1bh-content\"\r\n          id=\"panel1bh-header\"\r\n        >\r\n          <Typography>{name}</Typography>\r\n          \r\n        </AccordionSummary>\r\n        <AccordionDetails>\r\n          {getWorlds()}\r\n        </AccordionDetails>\r\n      </Accordion>\r\n    )\r\n}","import * as C from './constants'\r\n\r\ntype cmdType = number | keyof typeof C.commands\r\nexport function processCMD(cmdLine: string, selected: number[], world: number[]) {\r\n    let cmds = cmdLine.split(' ')\r\n    let cmdArray: cmdType[] = []\r\n   // console.log('Processing ', cmds)\r\n    for (let i = 0; i < cmds.length; i++) {\r\n      //  console.log('Now Running', cmds[i])\r\n        if (cmds[i] === C.commands.THRU) {\r\n            cmdArray.push(C.commands.THRU)\r\n        } else {\r\n            \r\n            getCommandArray(cmds[i]).forEach(cmd => {\r\n                cmdArray.push(cmd)\r\n            })\r\n            \r\n           //cmdArray.concat(getCommandArray(cmds[i]))\r\n        }\r\n    }\r\n   // console.log('Parsing Complete', cmdArray)\r\n    selected = handleSelected( handleThru(cmdArray),selected)\r\n    selected = selected.filter(s=> world.includes(s))\r\n    \r\n //  console.log('Processing Complete', selected)\r\n    return selected\r\n}\r\n\r\nfunction handleThru(cmds: cmdType[]) {\r\n    let cmdArray: number[] = []\r\n    if (cmds.indexOf(C.commands.THRU) === 1 && cmds.length > 2) {\r\n        let negative = 1\r\n        let start = cmds[0] as number\r\n        if (start < 0) {\r\n            start = start * -1\r\n            negative = -1\r\n        }\r\n        let end = cmds[2] as number\r\n        if(end<start){\r\n          //  console.log('Running Thru Backwards',end, 'thru',start)\r\n            for (let i = start; i >= end; i--) {\r\n                console.log(i*negative)\r\n                cmdArray.push(i*negative)\r\n        }\r\n        } else{\r\n            for (let i = start; i <= end; i++) {\r\n                cmdArray.push(i*negative)\r\n        }\r\n        }\r\n        \r\n        if(cmds.length>2)\r\n            cmdArray= cmdArray.concat(handleThru(cmds.slice(3)))\r\n    } else{\r\n        return cmds.map(c=> {return parseInt(c.toString())})\r\n    }\r\n    return cmdArray\r\n}\r\n\r\nfunction handleSelected(cmds: number[], selected: number[]) {\r\n    let newSelected = selected\r\n    for (let i = 0; i < cmds.length; i++) {\r\n        let cmd = cmds[i]\r\n        if (cmd < 0 && newSelected.includes(cmd * -1)) { //Remove\r\n            //console.log('Removing ',s[i]*-1)\r\n            newSelected = newSelected.filter((n) => n !== (cmd * -1))\r\n        } else if (!newSelected.includes(cmd) && cmd > 0) {\r\n            newSelected.push(cmd)\r\n        }\r\n    }\r\n   \r\n    return newSelected\r\n}\r\n\r\nfunction getCommandArray(cmd: string) {\r\n    if (cmd.length === 0) {\r\n        console.groupEnd()\r\n        return []\r\n    }\r\n   // console.group('Processing ', cmd)\r\n\r\n    let array: number[] = []\r\n    if (cmd.slice(0, 5) === C.commands.THRU) {\r\n   //     console.log('Thru')\r\n        //return [C.commands.THRU]\r\n    } else {\r\n        let num = findInt(cmd)\r\n        array.push(num)\r\n        // console.table(array)\r\n      //  console.log(num, cmd.indexOf(num + ''))\r\n        let reduced = cmd.slice(cmd.indexOf(num + \"\") + ((num + '').length))\r\n        //console.log('Reduced',reduced)\r\n\r\n        let reset = getCommandArray(reduced)\r\n        for (let i = 0; i < reset.length; i++) {\r\n            array.push(reset[i])\r\n        }\r\n\r\n        //console.table(array)\r\n\r\n    }\r\n    //array.push(getCommandArray(c.))\r\n    return array\r\n}\r\nfunction findInt(cmd: string) {\r\n    // console.log('Finding int', c)\r\n    let i = 0\r\n    let negative = 1\r\n    if (cmd[0] === '-') {\r\n        negative = -1\r\n        cmd = cmd.slice(1)\r\n    }\r\n\r\n    // console.log('C ',c)\r\n    while (i < cmd.length) {\r\n        if (parseInt(cmd[i]) >= 0) {\r\n            i++\r\n        }\r\n        else {\r\n            i = cmd.length\r\n        }\r\n    }\r\n    // console.log('Parsed Int' ,parseInt(c.slice(0,i))*negative)\r\n    return (parseInt(cmd.slice(0, i)) * negative)\r\n}\r\n","import { TableCell, TableRow, Button } from \"@material-ui/core\"\r\nimport BorderColorIcon from '@material-ui/icons/BorderColor';\r\nimport { useCallback } from \"react\";\r\nimport { CSSProperties, useEffect, useState } from \"react\"\r\nimport { PJ_OBJ } from \"../util/constants\"\r\ninterface PJ_Props {\r\n    pj: PJ_OBJ,\r\n    selected: boolean,\r\n    active: boolean,\r\n    darkMode: boolean,\r\n    handleTableSelect: (id: number) => void\r\n}\r\n\r\n\r\nfunction PJ(props: PJ_Props) {\r\n    const { pj, selected, active, darkMode, handleTableSelect } = props\r\n    const [time, setTime] = useState('0')\r\n    //const [lastSeen, setLastSeen] = useState(0)\r\n\r\n     const getTime = () => {\r\n        if (pj.lastSeen < 0) {\r\n            setTime('N/A')\r\n            return \r\n        }\r\n        let t = (Date.now()- pj.lastSeen) / 1000\r\n    \r\n        t = Math.floor(t)\r\n        if (t > 59) {\r\n            setTime(Math.floor(t / 60) + 'm')\r\n            return\r\n        }\r\n            setTime(t + 's')\r\n        \r\n    }\r\n  \r\n    useEffect(() => {\r\n        \r\n      \r\n        \r\n        let i =setInterval(getTime,1000)\r\n        \r\n        return function cleanup(){\r\n            clearInterval(i)\r\n        }\r\n       \r\n        \r\n    })\r\n\r\n   \r\n    const style = () => {\r\n     //   console.log('Selected',selected, 'Active',active)\r\n        let s: CSSProperties = {\r\n            color: 'Gainsboro',\r\n            textAlign: 'center'\r\n\r\n        }\r\n        if (active) {\r\n            s.color = 'black'\r\n            s.background = 'lightgray'\r\n\r\n        } else if (selected) {\r\n            s.color = 'black'\r\n            \r\n        }\r\n        return s\r\n    }\r\n    const bStyle = (b = 'On', goodWords = ['On'],):CSSProperties => {\r\n        return  {\r\n            textAlign: 'center',\r\n            margin:'auto',\r\n            color: goodWords.includes(b)? darkMode?'white' :'black' : 'red'\r\n            \r\n        }\r\n        \r\n    }\r\n    \r\n\r\n    const blendRegion =()=>{\r\n        let color = ''\r\n        let regions = [pj.edgeBlendingUpper, pj.edgeBlendingRight, pj.edgeBlendingLower, pj.edgeBlendingLeft]\r\n        for(let i=0; i < regions.length; i++){\r\n            switch(regions[i]){\r\n                case 'On':\r\n                    color+= ' green'\r\n                    break;\r\n                case 'Off':\r\n                    color+= ' black'\r\n                    break\r\n                case 'Unknown':\r\n                    color+= ' yellow'\r\n                    break\r\n                default:\r\n                    color+=' red'\r\n            }\r\n        }\r\n      \r\n        return (\r\n            <p style={{ padding: 10,  margin:'auto', textAlign: 'center', borderStyle: 'solid', borderColor: color}}key={pj.id+'brbox'}> {pj.edgeBlending}\r\n             <BorderColorIcon  style={{fontSize:'15', marginLeft: '5', marginTop: 'auto', color:pj.edgeBlendingMarker==='On'?'red':'gray'}} /></p>\r\n        )\r\n    }\r\n    const getID=()=>{\r\n        return <Button> {pj.name==='Unknown'?pj.id:pj.name+'('+pj.id+')'}</Button>\r\n    }\r\n\r\n    return (\r\n        <TableRow key={pj.id}>\r\n            <TableCell onClick={e => handleTableSelect(pj.id)} style={style()} key={pj.id + 'id'}>{getID()}</TableCell>\r\n            <TableCell style={bStyle(pj.shutter, ['Open'])} key={pj.id + 'shutter'}>{pj.shutter}</TableCell>\r\n            <TableCell style={bStyle(pj.edgeBlending, ['On', 'User'])} key={pj.id+\"blend\"}> {blendRegion()} </TableCell>\r\n            <TableCell style={bStyle(pj.edgeBlendingMarker, ['Off'])}key={pj.id+'blendmarker'}>{pj.edgeBlendingMarker}</TableCell>\r\n            <TableCell style={bStyle(pj.testPattren, ['Off'])}key={pj.id+'test'}>{pj.testPattren}</TableCell>\r\n            <TableCell style={bStyle(pj.lampStatus, ['Lamp On'])} key={pj.id+'lamp'}>{pj.lampStatus}</TableCell>\r\n            <TableCell style={bStyle(pj.hdmiResolution,['1920x1200p'])} key={pj.id+'hdmi'}>{pj.hdmiResolution}/{pj.hmdiSignalLevel}</TableCell>\r\n            <TableCell style={bStyle(pj.inputSignalName_Main,['1920x1200/60RB'])} key={pj.id+'signal_name_main'}>{pj.inputSignalName_Main}</TableCell>\r\n            <TableCell style={bStyle()} key={pj.id + 'last'}>{time}</TableCell>\r\n        </TableRow>\r\n\r\n    )\r\n}\r\n\r\nexport default PJ\r\n\r\n//<Button className='PJ' style={{padding:'5px', margin:'5px'}} variant=\"outlined\" color=\"primary\" key={pj} >{pj}</Button>\r\n/*\r\n<TableCell style={style()}key={pj.id+'id'}>{pj.id}</TableCell>\r\n<TableCell key={pj.id+'shutter'}>{pj.shutter+''}</TableCell>\r\n<TableCell key={pj.id+'power'}>{pj.power+''}</TableCell>\r\n<TableCell key={pj.id+'online'}>{pj.online+''}</TableCell>\r\n<TableCell key={pj.id+'last'}>{(Date.now()-pj.lastSeen)/1000}</TableCell>\r\n*/","import { Card, CardContent, Container, Typography } from \"@material-ui/core\";\r\nimport { CSSProperties } from \"react\";\r\nimport { PJ_OBJ } from \"../util/constants\";\r\n\r\ninterface PJCardProps{\r\n    pj_tupple: {pj:PJ_OBJ,selected: boolean, active: boolean}\r\n}\r\nexport default function PJCard(props:PJCardProps){\r\n    const {pj_tupple} = props\r\n    let pj = pj_tupple.pj\r\n\r\n    const cardStyle: CSSProperties={\r\n      \r\n        background: pj_tupple.active? 'gray': pj_tupple.selected? 'lightgray': 'white'\r\n    }\r\n    return(\r\n       \r\n        <Card variant=\"outlined\" style={cardStyle} key={pj.id+'card'}>\r\n            <CardContent>\r\n                <Typography>\r\n                    {pj.name? pj.name: ''}\r\n                </Typography>\r\n                <Typography>\r\n                ({pj.id})\r\n                </Typography>\r\n            </CardContent>\r\n        </Card>\r\n       \r\n       \r\n    )\r\n}","import { TableCell, TableRow } from \"@material-ui/core\";\r\nimport { PJ_OBJ } from \"../util/constants\";\r\nimport BorderColorIcon from '@material-ui/icons/BorderColor';\r\n\r\ninterface tableProps{\r\n    pj_tupple:  {pj:PJ_OBJ,selected: boolean, active: boolean}\r\n}\r\n\r\nexport default function ProgrammerTable(props: tableProps){\r\n    const {pj_tupple} = props\r\n    let pj = pj_tupple.pj\r\n\r\n    const blendRegion =()=>{\r\n        let color = ''\r\n        let regions = [pj.edgeBlendingUpper, pj.edgeBlendingRight, pj.edgeBlendingLower, pj.edgeBlendingLeft]\r\n        for(let i=0; i < regions.length; i++){\r\n            switch(regions[i]){\r\n                case 'On':\r\n                    color+= ' green'\r\n                    break;\r\n                case 'Off':\r\n                    color+= ' black'\r\n                    break\r\n                case 'Unknown':\r\n                    color+= ' yellow'\r\n                    break\r\n                default:\r\n                    color+=' red'\r\n            }\r\n        }\r\n      \r\n        return (\r\n            <p key={pj.id+'bp'} style={{ padding: 10,  margin:'auto', textAlign: 'center', borderStyle: 'solid', borderColor: color}}> {pj.edgeBlending}\r\n             <BorderColorIcon key={pj.id+'blend'} style={{fontSize:'15', marginLeft: '5', marginTop: 'auto', color:pj.edgeBlendingMarker==='On'?'red':'gray'}} /></p>\r\n        )\r\n    }\r\n    return (\r\n        <TableRow key={pj.id+'row'}>\r\n            <TableCell key={pj.id+'name'} component='th' scope='row'>\r\n                {pj.name}\r\n            </TableCell>\r\n            <TableCell key={pj.id+'id'}>{pj.id}</TableCell>\r\n            <TableCell key={pj.id+'shutter'}>{pj.shutter}</TableCell>\r\n            <TableCell key={pj.id+'blendregion'}>{blendRegion()}</TableCell>\r\n            <TableCell key={pj.id+'markers'}>{pj.edgeBlendingMarker}</TableCell>\r\n            <TableCell key={pj.id+'test'}>{pj.testPattren}</TableCell>\r\n            <TableCell key={pj.id+'lamp'}>{pj.lampStatus}</TableCell>\r\n            <TableCell key={pj.id+'sig'}>{pj.hdmiResolution}/{pj.hmdiSignalLevel}</TableCell>\r\n            <TableCell key={pj.id+'osd'}>{pj.osdPostion}</TableCell>\r\n\r\n        </TableRow>\r\n    )\r\n}","import PJ from \"./PJ\"\r\nimport * as C from '../util/constants'\r\nimport { Paper, makeStyles, Table, TableBody, TableCell, TableContainer, TableHead, TableRow, Container, Grid } from '@material-ui/core'\r\nimport { prefres } from \"../prefrences\"\r\nimport { CSSProperties, useMemo } from \"react\"\r\nimport PJCard from \"./PJCard\"\r\nimport ProgrammerTable from \"./ProgrammerTable\"\r\ninterface Programmer_Props {\r\n    selected: number[],\r\n    active: number[],\r\n    world: number[],\r\n    prefs: prefres,\r\n    status: C.RIG_STATUS,\r\n    pjs: Record<number, C.PJ_OBJ>,\r\n    handleTableSelect: (id: number) => void\r\n}\r\nconst useStyles = makeStyles({\r\n    root: {\r\n        flexGrow: 1,\r\n    },\r\n    paper: {\r\n        height: 140,\r\n        width: 100,\r\n    },\r\n    table: {\r\n        minWidth: 300,\r\n        maxHeight: 400\r\n    }\r\n})\r\nexport default function Programmer(props: Programmer_Props) {\r\n    const { active, world, selected, prefs, pjs, status, handleTableSelect } = props\r\n    const classes = useStyles()\r\n\r\n\r\n    // const pj = useMemo(()=>getPJ(pjID),[pjID])\r\n\r\n    const _getPJs = useMemo(() => {\r\n        world.sort()\r\n        // console.log('Programmer Making PJs')\r\n        return world.map(s => {\r\n\r\n            let pj = pjs[s] ? pjs[s] : {\r\n                id: s,\r\n                online: 'false',\r\n                shutter: 'Unknown',\r\n                power: 'Unknown',\r\n                lastSeen: -1,\r\n                error: 'NOT SEEN',\r\n                lampStatus: 'Unknown',\r\n                edgeBlending: 'Unknown',\r\n                edgeBlendingMarker: 'Unknown',\r\n                testPattren: 'Unknown',\r\n                backColor: 'Unknown',\r\n                edgeBlendingLeft: 'Unknown',\r\n                edgeBlendingLower: 'Unknown',\r\n                edgeBlendingRight: 'Unknown',\r\n                edgeBlendingUpper: 'Unknown',\r\n                hdmiResolution: 'Unknown',\r\n                hmdiSignalLevel: 'Unknown',\r\n                osdPostion: 'Unknown',\r\n                inputSignalName_Main: 'Unknown',\r\n                name: 'Unknown'\r\n            }\r\n            if ((prefs.showOnlySelected && selected.includes(s)) || !prefs.showOnlySelected) {\r\n                return <PJ key={'pj id_' + pj.id} pj={pj} handleTableSelect={handleTableSelect} selected={selected.includes(s)} darkMode={prefs.darkMode} active={active.includes(s)} />\r\n            }\r\n            return <></>\r\n\r\n        })\r\n    }, [world, active, selected, handleTableSelect, prefs.darkMode, prefs.showOnlySelected, pjs])\r\n    const getPJs = useMemo(() => {\r\n        console.groupCollapsed('Recomputing PJ List')\r\n        console.log('Active', active)\r\n        console.log('Selected', selected)\r\n        console.groupEnd();\r\n        world.sort()\r\n        let pjList: { pj: C.PJ_OBJ, selected: boolean, active: boolean }[] = []\r\n        world.forEach(s => {\r\n            let pj = pjs[s] ? pjs[s] :\r\n                {\r\n                    id: s,\r\n                    online: 'false',\r\n                    shutter: 'Unknown',\r\n                    power: 'Unknown',\r\n                    lastSeen: -1,\r\n                    error: 'NOT SEEN',\r\n                    lampStatus: 'Unknown',\r\n                    edgeBlending: 'Unknown',\r\n                    edgeBlendingMarker: 'Unknown',\r\n                    testPattren: 'Unknown',\r\n                    backColor: 'Unknown',\r\n                    edgeBlendingLeft: 'Unknown',\r\n                    edgeBlendingLower: 'Unknown',\r\n                    edgeBlendingRight: 'Unknown',\r\n                    edgeBlendingUpper: 'Unknown',\r\n                    hdmiResolution: 'Unknown',\r\n                    hmdiSignalLevel: 'Unknown',\r\n                    osdPostion: 'Unknown',\r\n                    inputSignalName_Main: 'Unknown',\r\n                    name: 'Unknown'\r\n                }\r\n            if ((prefs.showOnlySelected && selected.includes(s)) || !prefs.showOnlySelected) {\r\n                pjList.push({ pj, selected: selected.includes(s), active: active.includes(s) })\r\n            }\r\n\r\n        })\r\n        return pjList\r\n\r\n    }, [world, pjs, prefs, selected, active])\r\n    const getCards = () => {\r\n        return getPJs.map(pj_tupple => {\r\n            return <Grid key={'g_' + pj_tupple.pj.id} item xs={3}>\r\n                <PJCard pj_tupple={pj_tupple} />\r\n            </Grid>\r\n        })\r\n    }\r\n\r\n    const getRows = () => {\r\n        return getPJs.map(pj_tupple => {\r\n\r\n            return <ProgrammerTable key={pj_tupple.pj.id+'card'} pj_tupple={pj_tupple} />\r\n        })\r\n    }\r\n    const getStyle = (good = true) => {\r\n        let s: CSSProperties = {\r\n            width: '50',\r\n            textAlign: 'center'\r\n        }\r\n        if (!good)\r\n            s.backgroundColor = prefs.darkMode ? 'red' : 'red'\r\n\r\n        return s\r\n    }\r\n    return (\r\n        <>  {prefs.programmerTableView?\r\n            <TableContainer key='pjtablecon' component={Paper}>\r\n                <Table key='pjtablet' className={classes.table} size='small'>\r\n                    <TableHead key='pjtablehead'>\r\n                        <TableRow key='pjtableheadrow'>\r\n                            <TableCell key='pjtable_name'>Name</TableCell>\r\n                            <TableCell key='pjtable_id'>ID</TableCell>\r\n                            <TableCell key='pjtable_shutter'>Shutter</TableCell>\r\n                            <TableCell key='pjtable_blend'>Blend</TableCell>\r\n                            <TableCell key='pjtable_mark'>Blend Marker</TableCell>\r\n                            <TableCell key='pjtable_test'>Test Pattren</TableCell>\r\n                            <TableCell key='pjtable_lamp'>Lamp</TableCell>\r\n                            <TableCell key='pjtable_hdmi'>HDMI</TableCell>\r\n                            <TableCell key='pjtable_osd'>OSD</TableCell>\r\n                        </TableRow>\r\n                    </TableHead>\r\n                    <TableBody>\r\n                        {getRows()}\r\n                    </TableBody>\r\n                </Table>\r\n            </TableContainer>\r\n        :\r\n\r\n            <Grid key='programmer' className={classes.root} spacing={1} container>\r\n                {getCards()}\r\n            </Grid>\r\n}\r\n        </>\r\n    )\r\n}\r\n/**\r\n<TableContainer key='p-tc' component={Paper}>\r\n<Table key='p-t' className={classes.table}>\r\n    <TableHead key='p-th'>\r\n        <TableRow key='p-r'>\r\n            <TableCell style={getStyle()} key='p_pj'> PJ </TableCell>\r\n            <TableCell style={getStyle(status.shutter)} key='p_s'> Shutter</TableCell>\r\n            <TableCell style={getStyle(status.blend)} key='p_b'> Blend</TableCell>\r\n            <TableCell style={getStyle(status.blendMarker)} key='p_bm'> Blend Marker</TableCell>\r\n            <TableCell style={getStyle(status.testPattren)} key='p_test'> Test Pattern</TableCell>\r\n            <TableCell style={getStyle(status.lampStatus)} key='p_lamp'> Lamp Status</TableCell>\r\n            <TableCell style={getStyle(status.hdmiInput)} key='p_hdmi'> HDMI Input</TableCell>\r\n            <TableCell style={getStyle(status.signalName)} key='p_signal name'> Signal Name</TableCell>\r\n            <TableCell style={getStyle()} key='p_ls'> Last Seen</TableCell>\r\n\r\n        </TableRow>\r\n    </TableHead>\r\n    <TableBody>\r\n        {getPJs}\r\n    </TableBody>\r\n</Table>\r\n</TableContainer>\r\n*/","import * as C from './constants'\r\n//const puppeteer = require('puppeteer');\r\n\r\nasync function goFetch(query: string){\r\n    let fetchString = C.pjServer+'api/'+query\r\n   // console.log(fetchString)\r\n    try{\r\n    let res = await fetch(fetchString,{\r\n       mode: 'no-cors'\r\n    })\r\n    \r\n   // console.table(res.body)\r\n    if(res.ok){\r\n      //  console.log(await res.text())\r\n        //return await res.json()\r\n        return await res.json()\r\n    }\r\n}catch(e){\r\n    console.log(e)\r\n}\r\n    \r\n    \r\n}\r\n\r\nexport async function getPJ(target:number) {\r\n    let pj = await goFetch('status/?pj='+target)\r\n    if(pj){\r\n        return pj as unknown as C.PJ_OBJ\r\n    }\r\n    return undefined\r\n    \r\n}\r\n\r\nexport async function getPJs(){\r\n    let pjs = await goFetch('status/?pj=all')\r\n    if(pjs){\r\n        return pjs as unknown as Record<number,C.PJ_OBJ>\r\n    }\r\n}\r\nexport async function getRigStatus(){\r\n   // console.log('Getting Rig Status')\r\n    let status = await goFetch('status/?rigstatus=all')\r\n    if(status){\r\n        return status as unknown as C.RIG_STATUS\r\n    }\r\n}\r\n/*\r\nexport async function setConfig(item: C.ConfigHeaders, value: string){\r\n    await goFetch('config/?'+item+\"=\"+value)\r\n}*/\r\n\r\nexport async function setConfig(query: string){\r\n    await goFetch('config/?'+query)\r\n}\r\nexport async function setter(target: number, command:  C.ControlKeys) {\r\n    console.log('Setting ',target,command)\r\n    await goFetch('set/?pj='+target+'&command='+command)\r\n}\r\nexport async function  powerOff(target: number) {\r\n     return await setter(target, C.ControlCommands.POWER_OFF)\r\n}\r\n\r\nexport async function powerOn(target: number) {\r\n    return await setter(target,C.ControlCommands.POWER_ON)\r\n}\r\n\r\nexport async function shutterOn(target:number){\r\n    console.log('Sutter On')\r\n    return await setter(target,C.ControlCommands.SHUTTER_OPEN)\r\n}\r\nexport async function shutterOff(target:number) {\r\n    return await setter(target,C.ControlCommands.SHUTTER_CLOSED)\r\n}\r\n\r\nexport async function menu(target:number) {\r\n    \r\n}\r\n","import { Dialog, DialogTitle , TextField, Select, MenuItem, InputLabel, Button} from \"@material-ui/core\";\r\nimport React, { CSSProperties, useState } from \"react\";\r\nimport {PROJECTOR_MAKES, PROJECTOR_MAKE, Patch} from '../util/constants'\r\ninterface PatchAdd_Props{\r\n    open: boolean,\r\n    handleClose: ()=>void,\r\n    addPJs: (amount: number, startID: number, baseIP: string, port: number, auth: string, make: PROJECTOR_MAKE)=>void,\r\n    currentPatch: Patch\r\n}\r\n\r\nconst style: CSSProperties={\r\n    width: '90%',margin: 'auto', marginBottom: '5px'\r\n    \r\n}\r\nexport default function PatchAddDialog(props: PatchAdd_Props){\r\n    const {open,handleClose, addPJs, currentPatch}= props\r\n\r\n    const getMaxID=()=>{\r\n        let i = -1\r\n        Object.values(currentPatch).forEach(pj=>{\r\n            if(pj.id> i)\r\n                i = pj.id\r\n        })\r\n        if(i===-1)\r\n            return 100\r\n        \r\n            return i\r\n    }\r\n\r\n    const [make, setMake]= useState<PROJECTOR_MAKE>(PROJECTOR_MAKES.PANASONIC)\r\n    const [Amount, setAmount] = useState({value:1,err:''})\r\n    const [StartID, setID] = useState({value:getMaxID()+1,err:''})\r\n    const [BaseIP, setBaseIP]= useState({value:'192.168.10.',err:''})\r\n    const [UserName, setUserName] = useState('admin1')\r\n    const [Pass, setPass] = useState('')\r\n    const [Port, setPort] = useState({value:1024, err:''})\r\n    //const [hasErrors, setHasErrors]= useState(false)\r\n\r\n   \r\n    const getListItems=()=>{\r\n        return Object.values(PROJECTOR_MAKES).map(key=>{\r\n            //console.log(key)\r\n            return <MenuItem key={key} value={key}>{key}</MenuItem>\r\n        })\r\n    }\r\n    const handleSubmit=()=>{\r\n        let auth = ''\r\n        if(make === PROJECTOR_MAKES.PANASONIC){\r\n            auth = UserName+\":\"+Pass\r\n        }\r\n        addPJs(Amount.value,StartID.value,BaseIP.value,Port.value, auth,make)\r\n    }\r\n    const handleMake=(e: React.ChangeEvent<{value:unknown}>)=>{\r\n        setMake(e.target.value as PROJECTOR_MAKE)\r\n    }\r\n    const getBaseStart=()=>{\r\n        return parseInt(BaseIP.value.split('.')[3])\r\n    }\r\n    const checkOverlap=(startID: number, amount: number)=>{\r\n        for(let i = startID; i<amount+startID; i++){\r\n            let t = false\r\n            Object.values(currentPatch).forEach(pj=>{\r\n                if(pj.id === i)\r\n                    t = true\r\n            })\r\n            if(t)\r\n                return true\r\n        }\r\n        return false\r\n    }\r\n    const handleAmount=(e: React.ChangeEvent<HTMLTextAreaElement | HTMLInputElement>)=>{\r\n        let value = parseInt(e.target.value)\r\n        let err= ''\r\n        if(value<1 || isNaN(value)){\r\n            err='Invalid Number'\r\n        } else if(checkOverlap(StartID.value, value)){\r\n            err='Will Overlap Other IDs'\r\n        }\r\n\r\n        setAmount({value,err})\r\n    }\r\n    \r\n    const handleID=(e: React.ChangeEvent<HTMLTextAreaElement | HTMLInputElement>)=>{\r\n        let value = parseInt(e.target.value)\r\n        let err= ''\r\n        if(value<1 || isNaN(value)){\r\n            err='Invalid Number'\r\n        } else if(getBaseStart()+Amount.value >254){\r\n            err='Will Land Outside Base IP Range'\r\n        } else if(checkOverlap(value, Amount.value)){\r\n            err='Will Overlap Other IDs'\r\n        }\r\n        setID({value,err})\r\n    }\r\n    const handlePort=(e: React.ChangeEvent<HTMLTextAreaElement | HTMLInputElement>)=>{\r\n        let value = parseInt(e.target.value)\r\n        let err= ''\r\n        if(value<1 || isNaN(value)){\r\n            err='Invalid Number'\r\n        }\r\n        setPort({value,err})\r\n    }\r\n    const handleBaseIP=(value: string)=>{\r\n        \r\n        let err= ''\r\n        let s = value.split('.')\r\n        if(s.length===4){\r\n            for(let i =0; i<4;i++){\r\n                if(parseInt(s[i])<0 || parseInt(s[i])>(254-Amount.value)){\r\n                    err ='Invalid Number Range: '+s[i]\r\n                }\r\n            }\r\n        } else{\r\n            err= 'Invalid Number of .'\r\n        }\r\n        console.log(value)\r\n        \r\n        setBaseIP({value,err})\r\n    }\r\n\r\n    const handlePass=(value: string)=>{\r\n        setPass(value)\r\n    }\r\n    const handleUser=(value:string)=>{\r\n        setUserName(value)\r\n    }\r\n    return( \r\n        <Dialog fullWidth={true} style={{padding: '10%'}} onClose={handleClose} aria-labelledby=\"simple-dialog-title\" open={open}>\r\n        <DialogTitle id=\"simple-dialog-title\">Add Projectors</DialogTitle>\r\n        <InputLabel style={style} id=\"pjMake\">Model</InputLabel>\r\n        <Select style={style} id='pjMake' onChange={handleMake} value={make}>\r\n        {getListItems()}\r\n        </Select>\r\n        <br></br>\r\n        <TextField style={style} error={Amount.err? true: false} variant=\"filled\" type={'number'}label={'Amount'} value={Amount.value} onChange={handleAmount} helperText={Amount.err}> </TextField>\r\n        <br></br>\r\n        <TextField style={style} error={StartID.err? true: false} value={StartID.value} helperText={StartID.err} variant=\"filled\" type={'number'} label={'StartID'} onChange={handleID} > </TextField>\r\n        <br></br>\r\n        <TextField style={style} error={BaseIP.err? true: false} value={BaseIP.value} helperText={BaseIP.err} variant=\"filled\" type={'text'}label={'BaseIP'} onChange={(e)=>handleBaseIP(e.target.value)} > </TextField>\r\n        <br></br>\r\n        <TextField style={style} error={Port.err? true: false} value={Port.value} helperText={Port.err} variant=\"filled\" type={'number'}label={'Port'} onChange={handlePort} > </TextField>\r\n        <br></br>\r\n        <TextField style={style}  value={UserName}  variant=\"filled\" label={'Username'} type={'text'} onChange={(e)=>handleUser(e.target.value)}> </TextField>\r\n        <br></br>\r\n        <TextField style={style}  value={Pass}  variant=\"filled\" label={'Password'}type={'text'} onChange={(e)=>handlePass(e.target.value)}> </TextField>\r\n\r\n        <Button style={{width:'20%', margin: 'auto', marginBottom:'2%'}} disabled={Amount.err || BaseIP.err || StartID.err? true: false} variant=\"contained\" color=\"primary\" onClick={handleSubmit}>Submit</Button>\r\n      </Dialog>\r\n    )\r\n}","import * as C from \"../util/constants\";\r\nimport { DataGrid } from '@material-ui/data-grid';\r\nimport { Button, Paper, makeStyles, ButtonGroup } from '@material-ui/core'\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport { useState } from \"react\";\r\nimport { v4 } from 'uuid'\r\nimport Alert from './Alert'\r\nimport PatchAddDialog from './PatchAddDialog'\r\n\r\ninterface Patch_props {\r\n  patch: C.Patch\r\n  setPatch?: (p: C.Patch) => void\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  fab: {\r\n    position: 'absolute',\r\n    bottom: theme.spacing(2),\r\n    right: theme.spacing(2),\r\n  },\r\n\r\n}));\r\nconst columns = [\r\n  { field: 'uuid', headerName: 'uuid', width: 100, hide: true },\r\n  { field: 'id', headerName: 'ID', width: 90 },\r\n  { field: 'ip_address', headerName: 'IP Address', width: 170 },\r\n  { field: 'port', headerName: 'Port', width: 130 },\r\n  { field: 'auth', headerName: 'Auth', width: 130 },\r\n  { field: 'make', headerName: 'Make', width: 130 },\r\n\r\n];\r\n\r\nexport default function Patch(props: Patch_props) {\r\n  const { patch, setPatch } = props\r\n  const [addWindowOpen, setAddWindowOpen] = useState(false)\r\n  const [editWindowOpen, setEditWindowOpen] = useState(false)\r\n  const [selected, setSelected] = useState<number[]>([])\r\n  const [deleteWindowOpen, setDeleteWindowOpen] = useState(false)\r\n  const classes = useStyles()\r\n  let newPJs: C.Patch = {}\r\n\r\n  const addPJs = (amount: number, startID: number, baseIP: string, port: number, auth: string, make: C.PROJECTOR_MAKE) => {\r\n    setAddWindowOpen(false)\r\n    console.log('Got PJs to make!')\r\n    for (let id = startID; id < amount + startID; id++) {\r\n      let ip_address = baseIP + id\r\n      //console.log('Patch', patch)\r\n      if (Object.values(patch).filter(pj => {\r\n        if (pj.id === id) {\r\n          console.log('Conflicting ID', id);\r\n          return true\r\n        }\r\n        if (pj.ip_address === ip_address) {\r\n          console.log('Conflicting IP', ip_address);\r\n          return true\r\n        }\r\n        return false\r\n      }\r\n      ).length > 0) {\r\n        console.log('Conflicting PJ')\r\n        newPJs[v4()] = { ip_address: '-', port, auth, make, id: 0 }\r\n      } else {\r\n        // console.log('new PJ!')\r\n        newPJs[v4()] = { ip_address, id, port, auth, make }\r\n      }\r\n    }\r\n    //console.log(newPJs)\r\n    let newPatch = Object.assign(patch, newPJs) as C.Patch\r\n    if (newPatch && setPatch) {\r\n      setPatch(newPatch)\r\n    }\r\n  }\r\n  /*\r\n  const getRows = () => {\r\n    return Object.entries(patch).map(e => {\r\n      let pj = e[1]\r\n      //@ts-ignore\r\n      pj.channel = pj.id\r\n      //@ts-ignore\r\n      pj.id = e[0]\r\n\r\n      return pj\r\n\r\n    })\r\n  }\r\n  */\r\n\r\n  const handleDelete = (c: C.ControlKeys) => {\r\n\r\n    let newPatch = Object.assign(patch) as C.Patch\r\n    Object.entries(newPatch).forEach(e => {\r\n      if (selected.includes(e[1].id)) {\r\n        delete newPatch[e[0]]\r\n        let newSelect = Object.assign(selected) as number[]\r\n        delete newSelect[e[1].id]\r\n        setSelected(newSelect)\r\n      }\r\n    })\r\n\r\n\r\n    //const i = Object.assign(newPatch)\r\n    if (newPatch && setPatch) {\r\n      //console.log('Deleting',Object.values(patch).length-Object.values(newPatch).length)\r\n      setPatch(newPatch)\r\n      setSelected([])\r\n    }\r\n\r\n  }\r\n  const getSelectedString = () => {\r\n    let s = ''\r\n    for (let i = 0; i < selected.length; i++) {\r\n      s += selected[i] + ' '\r\n      if (i % 9 === 0) {\r\n        s += '\\r'\r\n      }\r\n    }\r\n    return s\r\n  }\r\n\r\n\r\n\r\n  return (\r\n    <>\r\n      <Paper style={{ height: 700, width: '100%' }}>\r\n        {patch ?\r\n          <DataGrid rows={Object.values(patch)} columns={columns} checkboxSelection selectionModel={selected} onSelectionModelChange={(e) => setSelected(e.selectionModel as number[])} />\r\n          : <></>\r\n        }\r\n\r\n        <ButtonGroup color='primary' className={classes.fab} >\r\n          <Button aria-label=\"add\" onClick={(e) => setAddWindowOpen(true)}> <AddIcon /></Button>\r\n          <Button aria-label=\"edit\" disabled={selected.length < 1} onClick={(e) => setEditWindowOpen(true)}> <EditIcon /></Button>\r\n          <Button aria-label=\"edit\" disabled={selected.length < 1} onClick={(e) => setDeleteWindowOpen(true)}> <DeleteIcon /></Button>\r\n        </ButtonGroup>\r\n\r\n\r\n      </Paper>\r\n      <Alert open={deleteWindowOpen} handleCommand={handleDelete} handleClose={() => setDeleteWindowOpen(false)} command={C.ControlCommands.MENU} header='Delete Selected' message={'Are you srue you want to delete: \\r \\n' + getSelectedString()} ></Alert>\r\n      <PatchAddDialog open={addWindowOpen} handleClose={() => setAddWindowOpen(false)} addPJs={addPJs} currentPatch={patch} />\r\n    </>\r\n  )\r\n}","import { Dialog, AppBar, Toolbar, Typography, IconButton, Button, Paper, Slide, Switch, TextField, FormControlLabel, makeStyles } from \"@material-ui/core\";\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport { useState, forwardRef, useEffect } from \"react\";\r\nimport * as C from \"../util/constants\";\r\nimport { setConfig } from \"../util/getter\";\r\nimport Patch from \"./Patch\";\r\nimport { SocketPatcher } from \"../util/SocketListener\";\r\nimport { Socket } from \"socket.io-client\";\r\n//import { socket } from \"../LoadPage\";\r\nconst useStyles = makeStyles((theme) => ({\r\n  appBar: {\r\n    position: 'relative',\r\n  },\r\n  title: {\r\n    marginLeft: theme.spacing(2),\r\n    flex: 1,\r\n  },\r\n  root: {\r\n    '& .MuiTextField-root': {\r\n      margin: theme.spacing(1),\r\n      width: '25ch',\r\n    },\r\n  },\r\n}));\r\n\r\nconst Transition = forwardRef(function Transition(props, ref) {\r\n  //@ts-ignore\r\n  return (<Slide direction=\"up\" ref={ref} {...props} />);\r\n});\r\n\r\ninterface ConfigDialog_Props {\r\n  open: boolean\r\n  handleClose: () => void\r\n  config: C.Config\r\n  socket: Socket | undefined\r\n}\r\nexport default function ConfigDialog(props: ConfigDialog_Props) {\r\n  const { open, handleClose, config, socket } = props\r\n  const [polling, setPolling] = useState(config.Polling)\r\n  const [pollingInterval, setPollingInterval] = useState(config.Polling_Interval/1000)\r\n  const classes = useStyles();\r\n  const [patch, setPatch] = useState<C.Patch>(config.Patch)\r\n  useEffect(() => {\r\n    setPollingInterval(config.Polling_Interval/1000)\r\n    setPolling(config.Polling)\r\n    setPatch(config.Patch)\r\n  }, [config])\r\n \r\n\r\n  const handleSubmit = (event: any) => {\r\n    event?.preventDefault();\r\n    // console.log(event)\r\n\r\n    let form = document.querySelector('form')\r\n    if (form) {\r\n      const data = new FormData(form);\r\n      let query = ''\r\n      for (var pair of data.entries()) {\r\n      \r\n        let t = pair[0] as C.ConfigHeaders\r\n       \r\n        let v = pair[1].toString()\r\n        switch(t){\r\n          case C.ConfigHeaders.POLLING:\r\n           \r\n            break;\r\n          case C.ConfigHeaders.POLLING_INTERVAL:\r\n            query += t + '=' + pollingInterval*1000 + '&'\r\n            break;\r\n          default:\r\n            query += t + '=' + v + '&'\r\n            break;\r\n        }\r\n\r\n      }\r\n      //Hard adds Polling to ensure it is accounted for\r\n      query += C.ConfigHeaders.POLLING + '=' + polling\r\n      \r\n      setConfig(query)\r\n      if(socket)\r\n        SocketPatcher(socket, patch)\r\n    }\r\n  }\r\n  const handlePollingInterval=(value: number)=>{\r\n    if(value>10){\r\n      setPollingInterval(value)\r\n    }\r\n  }\r\n  const handlePatchUpdate=(p: C.Patch)=>{\r\n    console.log(p)\r\n    setPatch(p)\r\n  }\r\n  return (\r\n    //@ts-ignore\r\n    <Dialog fullScreen open={open} onClose={handleClose} TransitionComponent={Transition}>\r\n\r\n      <form className={classes.root} onSubmit={handleSubmit}>\r\n        <AppBar className={classes.appBar}>\r\n          <Toolbar>\r\n            <IconButton edge=\"start\" color=\"inherit\" onClick={handleClose} aria-label=\"close\">\r\n              <CloseIcon />\r\n            </IconButton>\r\n            <Typography variant=\"h6\" className={classes.title}>\r\n              Server Configuration\r\n            </Typography>\r\n            <Button autoFocus color=\"inherit\" type={'submit'} onClick={handleClose}>\r\n              Save\r\n            </Button>\r\n          </Toolbar>\r\n        </AppBar>\r\n\r\n        <Paper key='config_paper'>\r\n\r\n\r\n\r\n          <TextField key='location' style={{width:'25%'}}label={'Location'} name={C.ConfigHeaders.LOCATION} defaultValue={config.Location} />\r\n\r\n          <FormControlLabel name={C.ConfigHeaders.POLLING} value={polling} labelPlacement=\"top\"\r\n            control={<Switch checked={polling} value={polling} onChange={(e) => setPolling(!polling)} name={C.ConfigHeaders.POLLING} />}\r\n            label=\"Polling\"\r\n          />\r\n\r\n          <TextField key='polling_interval' style={{width:'25%'}} disabled={!polling} type='number' label={'Poll Interval'} onChange={(e)=> handlePollingInterval(parseInt(e.target.value))} name={C.ConfigHeaders.POLLING_INTERVAL} value={pollingInterval} />\r\n        </Paper>\r\n\r\n\r\n        <Paper key='patch'>\r\n          <Patch patch={patch} setPatch={handlePatchUpdate} />\r\n        </Paper>\r\n      </form>\r\n      <span style={{ fontSize: 10 }}>{config.LastUpdated}</span>\r\n    </Dialog>\r\n\r\n  )\r\n}","\r\nimport { Socket } from 'socket.io-client'\r\nimport * as C from './constants'\r\n//import {socket} from '../LoadPage'\r\ntype RIG_STATUS = React.Dispatch<React.SetStateAction<C.RIG_STATUS>>\r\ntype PJS = React.Dispatch<React.SetStateAction<C.PJs>>\r\ntype CONFIG = React.Dispatch<React.SetStateAction<C.Config>>\r\ntype POLLING_PROGRESS = React.Dispatch<React.SetStateAction<number>>\r\n\r\nexport default function SocketListener(\r\n    socket: Socket,\r\n    setStatus: RIG_STATUS,\r\n    setPJs: PJS,\r\n    setConfig: CONFIG,\r\n    setPollingProgress: POLLING_PROGRESS,\r\n) {\r\n   \r\n    socket.on('connected', () => {\r\n        console.log('Connected!')\r\n        // socket.emit('Hello')\r\n    })\r\n    socket.on('Hello', () => {\r\n        //console.log('Hello!')\r\n    })\r\n    socket.on(C.ioCommands.EMITTING_PJS, (pjs: C.PJs) => {\r\n        setPJs(pjs)\r\n         console.log('Got new PJs!')\r\n    })\r\n    socket.on(C.ioCommands.EMITTING_STATUS, (status: C.RIG_STATUS) => {\r\n       // console.log('Status Updated')\r\n        setStatus(status)\r\n    })\r\n    socket.on(C.ioCommands.REQUEST_UPDATE, () => {\r\n        console.log('Requesting Update!')\r\n        socket?.emit(C.ioCommands.REQUESTING_UPDATE)\r\n    })\r\n\r\n    socket.on(C.ioCommands.REQUEST_CONFIG, () => {\r\n        console.log('Requesting Config')\r\n       // socket?.emit(C.ioCommands.REQUESTING_CONFIG)\r\n    })\r\n    socket.on(C.ioCommands.EMITTING_CONFIG, (config: C.Config) => {\r\n        console.groupCollapsed('Got New Config')\r\n        console.log('Config', config)\r\n        console.log('Patch', config.Patch)\r\n        console.groupEnd()\r\n        setConfig(config)\r\n        /*\r\n        if(config.Groups[0] && config.Groups[0].group)\r\n            setWorld(config.Groups[0].group)\r\n            */\r\n    })\r\n    socket.on(C.ioCommands.EMITTING_POLLING_PROGRESS, (progress: number) => {\r\n        setPollingProgress(progress)\r\n    })\r\n}\r\n    \r\n\r\n\r\n\r\nexport function SocketPatcher(socket: Socket, patch: C.Patch) {\r\n    socket.emit(C.ioCommands.EMITTING_PATCH, patch)\r\n}   ","import {Button, Dialog, DialogActions, DialogTitle, DialogContent, DialogContentText, TextField } from \"@material-ui/core\";\r\nimport { useState } from \"react\";\r\ninterface Alert_Props{\r\n    open: boolean,\r\n    handleInput: (text: string)=>void,\r\n    handleClose: ()=>void,\r\n    header: string,\r\n    message: string\r\n}\r\nexport default function Alert(props: Alert_Props){\r\n    const {open,handleInput, handleClose, header, message} = props\r\n    const [text, setText] = useState('')\r\n\r\n    const handleClick=(approval: boolean)=>{\r\n        if(approval){\r\n            handleInput(text)\r\n        }\r\n        handleClose()\r\n\r\n    }\r\n    return (\r\n        <Dialog\r\n        open={open}\r\n        onClose={handleClose}\r\n        aria-labelledby=\"alert-dialog-title\"\r\n        aria-describedby=\"alert-dialog-description\"\r\n      >\r\n        <DialogTitle id=\"alert-dialog-title\">{header}</DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText id=\"alert-dialog-description\">\r\n            <span style={{width:'50'}}>{message}</span>\r\n          </DialogContentText>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <TextField value={text} onChange={(e)=>setText(e.target.value)}></TextField>\r\n          <Button onClick={(e)=>handleClick(false)} color=\"primary\">\r\n            Cancle\r\n          </Button>\r\n          <Button onClick={(e)=>handleClick(true)} color=\"primary\" autoFocus>\r\n            Okay\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n        \r\n    )\r\n}","\r\nimport { useEffect, useState } from 'react';\r\nimport './App.css';\r\nimport * as C from './util/constants'\r\n//import { getPJ } from './util/getter';\r\n//import PJ from './components/PJ'\r\nimport Numberpad from './components/numberpad';\r\nimport CommandPad from './components/CommandPad'\r\nimport Worlds from './components/Worlds'\r\nimport {  TextField, Container,  Grid,LinearProgress } from '@material-ui/core'\r\nimport { processCMD } from './util/CMD';\r\nimport Programmer from './components/Programmer';\r\nimport  * as Prefs from './prefrences';\r\nimport SocketListener from './util/SocketListener';\r\nimport ConfigDialog from './components/ConfigDialog';\r\nimport { Socket } from 'socket.io-client';\r\nimport InputPopup from './components/InputPopup';\r\n\r\n\r\n// setSocketConnect(true)\r\n//import {socket}  from './LoadPage'\r\ninterface App_Prps{\r\n  prefs: Prefs.prefres\r\n  openConfig: boolean\r\n  handleCloseConfig: ()=>void\r\n  socket: Socket | undefined\r\n}\r\n\r\n//let socket: Socket | undefined = undefined\r\n\r\nfunction App(Props: App_Prps ) {\r\n  const {prefs,openConfig,handleCloseConfig,socket} = Props\r\n  const [cmd, setCMD] = useState('')\r\n  const [vartiable, setVartiable] = useState<string|undefined>(undefined)\r\n  const [active, setActive] = useState<number[]>([])\r\n  const [activeIndex, setActiveIndex] = useState(-1)\r\n  const [clearPresses, setClearPressed] = useState(0)\r\n  const [selected, setSelected] = useState<number[]>([])\r\n  const [groupNameOpen, setGroupNameOpen] = useState(false)\r\n  const [config, setConfig] =useState(C.defaultConfig)\r\n  const [world, setWorld] = useState(0) //Default 0 - All\r\n  const [pjs, setPJs] = useState<C.PJs>({})\r\n  const [pollingProgress, setPollingProgress] = useState(100)\r\n  const [command, setCommand]=useState<C.ControlKeys | undefined>(undefined)\r\n  const [rigStatus, setStatus] = useState<C.RIG_STATUS>({\r\n    online: false,\r\n    power: false,\r\n    shutter: false,\r\n    blendMarker: false,\r\n    blend: false,\r\n    testPattren: false,\r\n    lampStatus: false,\r\n    hdmiInput: false,\r\n    signalName: false\r\n\r\n  })\r\n  \r\n \r\n\r\n  useEffect(() => {\r\n  \r\n   if(socket)\r\n   SocketListener(socket,setStatus, setPJs,setConfig,setPollingProgress)\r\n   \r\n    if(command){\r\n      console.log('Emmiting CMD',command, active)\r\n\r\n      socket?.emit(C.ioCommands.EMITTING_CMD,{cmd: command, pjIDs: active, vartiable: vartiable})\r\n      if (prefs.clearProgrammerAfterCMD) {\r\n        setActive([])\r\n        setSelected([])\r\n      }\r\n      setCommand(undefined)\r\n    }\r\n    \r\n  \r\n // let i =setInterval(pollPJs,10000)\r\n    //console.log(selected)\r\n    return function cleanup(){\r\n     \r\n     // socket?.disconnect()\r\n      //setSocketConnect(false)\r\n    }\r\n  \r\n   \r\n  },[active,command, prefs,socket, vartiable, pjs])\r\n\r\n\r\n  document.onkeyup = ((e) => {\r\n   if(openConfig) return\r\n  \r\n    let key = e.key\r\n  //  console.log(key)\r\n    if (C.keys.includes(key)) {\r\n      handlePad(key)\r\n      return\r\n    }\r\n    switch (key) {\r\n      case 't':\r\n        handlePad(C.commands.THRU)\r\n        break;\r\n      case 'c':\r\n        handlePad(C.commands.CLEAR)\r\n        break;\r\n      case '=':\r\n        handlePad('+')\r\n        break;\r\n      case 'Backspace':\r\n        handlePad(C.commands.DEL)\r\n        break;\r\n      case 'Enter':\r\n        //processCMD();\r\n        handlePad(C.commands.ENTER)\r\n        break;\r\n      case 'i':\r\n        handleCommand(C.ControlCommands.SHUTTER_CLOSED)\r\n        break;\r\n      case 'o':\r\n        handleCommand(C.ControlCommands.SHUTTER_OPEN)\r\n        break;\r\n      \r\n      case 'ArrowUp':\r\n        handlePad(C.commands.IF_PROG)\r\n        break;\r\n      case 'ArrowRight':\r\n        handlePad(C.commands.NEXT)\r\n        break;\r\n      case 'ArrowLeft':\r\n        handlePad(C.commands.BACK)\r\n        break;\r\n    }\r\n\r\n  })\r\n  \r\n  const handleNext = () => {\r\n    //console.log('Nexting')\r\n    if (selected.length < 1) {\r\n      return\r\n    }\r\n    let i = activeIndex\r\n    if (activeIndex+1 < selected.length) {\r\n      i += 1\r\n    }\r\n    if (activeIndex + 1 >= selected.length) {\r\n      i =0\r\n    }\r\n    let a: number[] = []\r\n    a.push(selected[i])\r\n    setActiveIndex(i)\r\n    setActive(a)\r\n  }\r\n  const handleBack = () => {\r\n    if (selected.length < 1) {\r\n      return\r\n    }\r\n    let i = activeIndex\r\n    if (activeIndex-1 >=0) {\r\n      i -= 1\r\n    }\r\n    if (activeIndex-1 <0) {\r\n      i =selected.length-1\r\n    }\r\n    let a: number[] = []\r\n    a.push(selected[i])\r\n    setActiveIndex(i)\r\n    setActive(a)\r\n  }\r\n  \r\n  const handlePad = (e: string) => {\r\n    //console.log(e)\r\n    if (e === C.commands.CLEAR) {\r\n      setClearPressed((clearPresses + 1))\r\n      //console.log('Clear', clearPresses)\r\n      switch (clearPresses) {\r\n        case 0:\r\n          setCMD('')\r\n          break;\r\n        case 1:\r\n          setActive([])\r\n          setActiveIndex(-1)\r\n          break;\r\n        case 2:\r\n          setSelected([])\r\n          break;\r\n      }\r\n      return\r\n    }\r\n    setClearPressed(0)\r\n    switch (e) {\r\n\r\n      case C.ioCommands.STORE_GROUP:\r\n        setGroupNameOpen(true)\r\n        break;\r\n      case C.commands.DEL:\r\n        //console.log(cmd.slice(-6) === ' THRU ')\r\n        // console.log(cmd.includes('THRU'))\r\n        if (cmd.length >= 6 && cmd.slice(-6) === ' ' + C.commands.THRU + ' ') {\r\n          let t = cmd.slice(0, cmd.length - 6)\r\n          setCMD(t)\r\n        } else {\r\n          setCMD(cmd.slice(0, (cmd.length - 1)))\r\n        }\r\n        break;\r\n      case C.commands.THRU:\r\n        if (cmd.length > 0)\r\n          setCMD(cmd + ' THRU ')\r\n        break;\r\n      case C.commands.ENTER:\r\n        handleCMD()\r\n        break;\r\n      case '-':\r\n        if (cmd[cmd.length - 1] !== ' ') {\r\n          setCMD(cmd + e)\r\n        }\r\n        break\r\n      case C.commands.NEXT:\r\n        handleNext();\r\n        break;\r\n      case C.commands.BACK:\r\n        handleBack()\r\n        break;\r\n      case C.commands.IF_PROG:\r\n        setActive(selected);\r\n        setActiveIndex(-1)\r\n        break;\r\n      default:\r\n      \r\n        setCMD(cmd + e)\r\n       // console.log('setting CMD',cmd)\r\n    }\r\n  //  console.log('CMD',cmd)\r\n  }\r\n  const handleTableSelect=(id:number)=>{\r\n   // let s = [...selected]\r\n    let a = [...active]\r\n    if(a.includes(id)){\r\n      setActive(a.filter(pj=> pj !== id))\r\n    } else{\r\n     \r\n      a.push(id)\r\n      setActive(a)\r\n     // s.push(id)\r\n      //console.log(s)\r\n     // setSelected(s)\r\n    }\r\n  }\r\n\r\n  const handleCMD =() => {\r\n   \r\n    let s = processCMD(cmd, active, getGroup(world))\r\n    finalCMD(s)\r\n    setCMD('')\r\n    \r\n  }\r\n  const finalCMD= (n:number[])=>{\r\n   // console.log(n)\r\n    setActive(n)\r\n    let diffrentPJs: number[] =[]\r\n  //  console.log(n)\r\n    n.forEach(id=>{\r\n      if(!selected.includes(id)){\r\n        diffrentPJs.push(id)\r\n      }\r\n    })\r\n    \r\n    setSelected(diffrentPJs.concat(selected))\r\n    \r\n  }\r\n  const handleCommand=(command: C.ControlKeys, text?:string)=>{\r\n    handleCMD()\r\n    setCommand(command)\r\n    setVartiable(text)\r\n  }\r\n  const getGroup=(groupID:string | number)=>{\r\n    let g  = config.Groups[parseInt(groupID.toString())]?.group \r\n    return  g? g :[]\r\n  }\r\n  const handleGroupSelection=(groupID: string)=>{\r\n    let group = getGroup(groupID)\r\n    if(group)\r\n    finalCMD(group)\r\n  }\r\n  const handleWorldSelection=(groupID:string)=>{\r\n    setWorld(parseInt(groupID))\r\n  }\r\n\r\n  const getStatusBar=()=>{\r\n\r\n    if(pollingProgress===100)\r\n     return <LinearProgress style={{width:'99%', margin:'auto'}}  variant=\"determinate\" value={0} />\r\n\r\n     return <LinearProgress style={{width:'99%', margin:'auto'}}  variant=\"determinate\" value={pollingProgress} />\r\n  }\r\n\r\n  const handleGroupName=(text: string)=>{\r\n    socket?.emit(C.ioCommands.STORE_GROUP,{name:text, group:active})\r\n  }\r\n\r\n  return (\r\n    <div className=\"App\">\r\n\r\n      <link rel=\"stylesheet\" href=\"https://fonts.googleapis.com/css?family=Roboto:300,400,500,700&display=swap\" />\r\n      <link rel=\"stylesheet\" href=\"https://fonts.googleapis.com/icon?family=Material+Icons\" />\r\n      {getStatusBar()}\r\n      <Container style={{position: 'relative', bottom:'3px', textAlign:'left', float:'left'}}>\r\n      </Container>\r\n      <Grid container spacing={6} className='inputArea' >\r\n        <Grid item >\r\n          <Numberpad handlePad={handlePad} />\r\n        </Grid>\r\n        <Grid item>\r\n          <CommandPad  handleCommand={handleCommand} active={active} pjs={pjs} />\r\n        </Grid>\r\n      </Grid>\r\n      <TextField\r\n        id=\"cmd\"\r\n\r\n        style={{ margin: 8, width: '90%' }}\r\n        value={cmd}\r\n        helperText=\"Command Line\"\r\n        fullWidth\r\n        margin=\"normal\"\r\n        InputLabelProps={{\r\n          shrink: true,\r\n        }}\r\n        variant=\"outlined\"\r\n        \r\n      />\r\n     \r\n      <Container key='groups_Worlds' style={{width:'80%'}}>\r\n      <Worlds setWorld={handleWorldSelection} groups={config.Groups} name={'Worlds'} selected={world}/>\r\n      <Worlds setWorld={handleGroupSelection} groups={config.Groups} name={'Groups'}/>\r\n      </Container>\r\n      <br key=\"programmer break\"></br>\r\n      <Container key='programmer'>\r\n        <Programmer handleTableSelect={handleTableSelect} key={'pg'} prefs={prefs} world={getGroup(world)} status={rigStatus} selected={selected} active={active} \r\n        pjs={pjs} />\r\n       \r\n       \r\n        <br key='stats break'></br>\r\n      \r\n\r\n      </Container>\r\n      <ConfigDialog socket={socket} open={openConfig} handleClose={()=>handleCloseConfig()} config={config}/>\r\n      <InputPopup open={groupNameOpen} handleInput={handleGroupName} handleClose={()=>setGroupNameOpen(false)} header={'Group Name'} message={active.toString()} />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","\r\nimport Cookies from 'js-cookie'\r\nexport interface prefres{\r\n    darkMode: boolean,\r\n    clearProgrammerAfterCMD: boolean,\r\n    showOnlySelected: boolean,\r\n    programmerTableView: boolean\r\n}\r\nconst cookieName= 'prefs'\r\n//const prefersDarkMode = useMediaQuery('(prefers-color-scheme: dark)');\r\nexport const defaultPrefs: prefres={\r\n    darkMode: true, //prefersDarkMode,\r\n    clearProgrammerAfterCMD: false,\r\n    showOnlySelected: false,\r\n    programmerTableView: false\r\n}\r\n\r\nexport const setCookie=(prefs: prefres)=>{\r\n    Cookies.set(cookieName,prefs)\r\n}\r\nconst getCookie =()=>{\r\n    return Cookies.get(cookieName)\r\n    /*\r\n    let c = Cookies.get(cookieName)\r\n    if(c){\r\n        return JSON.parse(c) \r\n       // return c as unknown as prefres\r\n    } else {\r\n        setCookie(defaultPrefs)\r\n        return defaultPrefs\r\n    }\r\n    */\r\n}\r\n\r\nexport function getPrefrences(darkMode=true):prefres{\r\n    let c = getCookie()\r\n    if(c){\r\n        return JSON.parse(c)\r\n    }else{\r\n        let d = defaultPrefs\r\n        d.darkMode = darkMode\r\n        setCookie(d)\r\n        return d\r\n    }\r\n     \r\n    //return getCookie()\r\n}\r\n\r\n\r\n\r\nexport function setCookie_DarkMode(mode: boolean){\r\n    let c = getPrefrences()\r\n    c.darkMode=mode\r\n    setCookie(c)\r\n\r\n}\r\nexport function setCookie_ClearProgrammerAfterCMD(mode: boolean){\r\n    let c = getPrefrences()\r\n    c.clearProgrammerAfterCMD = mode\r\n    setCookie(c)\r\n}\r\nexport function setCookie_ShowOnlySelected(mode:boolean){\r\n    let c =getPrefrences()\r\n    console.log(mode)\r\n    c['showOnlySelected'] = mode\r\n    setCookie(c)\r\n}\r\n\r\nexport function getDarkMode(){\r\n    return getPrefrences().darkMode\r\n}\r\n\r\nexport function getClearProgrammerAfterCMD(){\r\n    return getPrefrences().clearProgrammerAfterCMD\r\n}\r\nexport function getShowOnlySelected(){\r\n    return getPrefrences().showOnlySelected\r\n}\r\n\r\nexport function getProgrammerTableView(){\r\n    return getPrefrences().programmerTableView\r\n}","import { Button, Menu, MenuItem, FormControlLabel, Switch  } from '@material-ui/core'\r\n//import {SettingsIcon} from '@material-ui/icons/Settings';\r\nimport SettingsIcon from \"@material-ui/icons/Settings\";\r\nimport { useState, useRef} from 'react'\r\nimport { prefres } from '../prefrences';\r\nimport * as C from '../util/constants'\r\n\r\n\r\ninterface menu_props {\r\n  handleSettings: (e: prefres) => void,\r\n  prefs: prefres,\r\n  handleOpenConfig: ()=>void\r\n}\r\nexport default function ControlMenu(props: menu_props) {\r\n\r\n // const value = useContext(Settings)\r\n  //console.log(value)\r\n  const { prefs, handleSettings, handleOpenConfig } = props\r\n  const divRef = useRef(null)\r\n\r\n  const [open, setOpen] = useState(false)\r\n  \r\n\r\n  const handleOpen = () => {\r\n    setOpen(true)\r\n\r\n\r\n  }\r\n  const handleClose = (e: C.menuCommands | undefined) => {\r\n    setOpen(false)\r\n  }\r\n\r\n  const handleChange = (e: C.menuCommands) => {\r\n    \r\n    let p = Object.assign({},prefs)\r\n    switch (e) {\r\n      case C.menuCommands.CLEAR_SELECTED_ON_CMD:\r\n        p.clearProgrammerAfterCMD = !prefs.clearProgrammerAfterCMD\r\n        break;\r\n      case C.menuCommands.IF_SELECTED:\r\n        p.showOnlySelected = !prefs.showOnlySelected\r\n        break;\r\n      case C.menuCommands.DARK_MODE:\r\n        p.darkMode = !prefs.darkMode\r\n        break;\r\n      case C.menuCommands.PROGRAMMER_TABLE_VIEW:\r\n        p.programmerTableView = !prefs.programmerTableView\r\n        break;\r\n    }\r\n    handleSettings(p)\r\n  }\r\n  let button =\r\n    <Button ref={divRef} aria-controls=\"simple-menu\" aria-haspopup=\"true\" onClick={() => handleOpen()}>\r\n      <SettingsIcon />\r\n    </Button>\r\n  if(process.env.NODE_ENV === 'development'){\r\n    document.title = 'PJ Dev'\r\n  }\r\n  return (\r\n    <div>\r\n\r\n      {button}\r\n\r\n\r\n      <Menu\r\n        id=\"simple-menu\"\r\n        keepMounted\r\n        //@ts-ignore\r\n        anchorEl={divRef.current}\r\n        open={open}\r\n        onClose={() => handleClose(undefined)}\r\n      >\r\n        <MenuItem >\r\n          <FormControlLabel\r\n            control={<Switch key={C.menuCommands.CLEAR_SELECTED_ON_CMD} checked={prefs.clearProgrammerAfterCMD}\r\n              onClick={(e) => handleChange(C.menuCommands.CLEAR_SELECTED_ON_CMD)} name=\"clearSelectedOnPress\" />}\r\n            label=\"Clear Programmer On CMD\"\r\n          />\r\n        </MenuItem>\r\n        <MenuItem>\r\n\r\n          <FormControlLabel\r\n            control={<Switch key={C.menuCommands.IF_SELECTED} checked={prefs.showOnlySelected}\r\n              onChange={(e) => handleChange(C.menuCommands.IF_SELECTED)} name=\"showonlyselected\" />}\r\n            label=\"Show Only Selected\"\r\n          />\r\n        </MenuItem>\r\n        <MenuItem>\r\n\r\n          <FormControlLabel\r\n            control={<Switch key={C.menuCommands.DARK_MODE} checked={prefs.darkMode}\r\n              onChange={(e) => handleChange(C.menuCommands.DARK_MODE)} name=\"darkMode\" />}\r\n            label=\"Dark Mode\"\r\n          />\r\n       \r\n        </MenuItem>\r\n        <MenuItem>\r\n\r\n          <FormControlLabel\r\n            control={<Switch key={C.menuCommands.PROGRAMMER_TABLE_VIEW} checked={prefs.programmerTableView}\r\n              onChange={(e) => handleChange(C.menuCommands.PROGRAMMER_TABLE_VIEW)} name=\"Programmer Table View\" />}\r\n            label=\"Programmer Table View\"\r\n          />\r\n       \r\n        </MenuItem>\r\n        <MenuItem>\r\n        <Button onClick={(e)=>{setOpen(false); handleOpenConfig()}}>Edit Config</Button>\r\n        </MenuItem>\r\n      </Menu>\r\n     \r\n      <span style={{textAlign:'center', fontSize: 10}}> Projector Controler v{process.env.REACT_APP_VERSION}{process.env.NODE_ENV==='development'?' Beta':''}</span>\r\n    </div>\r\n  )\r\n\r\n}","import { CircularProgress } from \"@material-ui/core\";\r\n\r\nexport default function Disconnected(){\r\n    return (\r\n      \r\n            <div style={{width:'100%', textAlign:'center'}} >\r\n     \r\n            <CircularProgress  color=\"secondary\" />\r\n            <p>Can't connect to server</p>\r\n            \r\n            </div>\r\n   \r\n    )\r\n}","import React, { useEffect, useState } from 'react';\r\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\r\nimport { createMuiTheme, createStyles, makeStyles, ThemeProvider, Theme } from '@material-ui/core/styles';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport App from './App';\r\nimport * as Pref from './prefrences';\r\nimport ControlMenu from './components/ControlMenu';\r\nimport socketIOClinet , { Socket }  from 'socket.io-client'\r\nimport { Backdrop } from '@material-ui/core';\r\nimport Disconnected from './components/Disconnected';\r\nexport const Settings = React.createContext(Pref.defaultPrefs)\r\n\r\nexport let socket =socketIOClinet()\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    backdrop: {\r\n      zIndex: theme.zIndex.drawer + 1,\r\n      color: '#fff',\r\n    },\r\n  }),\r\n);\r\nexport default function LoadPage() {\r\n    const prefersDarkMode = useMediaQuery('(prefers-color-scheme: dark)');\r\n    // const prefersDarkMode = getDarkMode()  \r\n    const classes = useStyles()\r\n    const [prefres, setPrefs] = useState(Pref.defaultPrefs)\r\n    const [openConfig,setOpenConfig] = useState(false)\r\n    const [socketConnected,setSocketConnected]= useState(false)\r\n\r\n    useEffect(()=>{\r\n    if(!socketConnected){\r\n      try{\r\n   \r\n          console.log('Connecting Socket...')\r\n       // let s = socketIOClinet()\r\n    \r\n        socket.on('connect',()=>{\r\n           // socket = s\r\n            setSocketConnected(true)\r\n        })\r\n        socket.on('disconnect',()=>{\r\n           // socket = undefined\r\n            setSocketConnected(false)\r\n        })\r\n      \r\n      }catch(e){\r\n\r\n      }\r\n    }\r\n    return function cleanup(){\r\n     \r\n    }\r\n\r\n    },[socketConnected])\r\n\r\n    useEffect(() => {\r\n  \r\n        setPrefs(Pref.getPrefrences(prefersDarkMode))\r\n      \r\n    }, [prefersDarkMode])\r\n\r\n    const theme = createMuiTheme({\r\n        palette: {\r\n            type: prefres.darkMode ? 'dark' : 'light',\r\n        }\r\n    })\r\n   \r\n    const handlePrefs = (p: Pref.prefres) => {\r\n       // console.log(prefres)\r\n        setPrefs(p)\r\n      //  console.log(prefres)\r\n        Pref.setCookie(p)\r\n    }\r\n    return (\r\n        <ThemeProvider theme={theme}>\r\n            <Settings.Provider value={prefres}/>\r\n            <CssBaseline />\r\n            <Backdrop className={classes.backdrop} open={!socketConnected} >\r\n                <Disconnected/>\r\n            </Backdrop>\r\n                <ControlMenu handleOpenConfig={()=> setOpenConfig(true)}handleSettings={handlePrefs} prefs={prefres} />\r\n                <App socket={socket} prefs={prefres} openConfig={openConfig} handleCloseConfig={()=>setOpenConfig(false)}/>\r\n              \r\n                \r\n            \r\n        </ThemeProvider>\r\n    );\r\n}","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n    window.location.hostname === 'localhost' ||\r\n      // [::1] is the IPv6 localhost address.\r\n      window.location.hostname === '[::1]' ||\r\n      // 127.0.0.0/8 are considered localhost for IPv4.\r\n      window.location.hostname.match(\r\n        /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n      )\r\n  );\r\n  \r\n  export function register(config) {\r\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n      // The URL constructor is available in all browsers that support SW.\r\n      const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n      if (publicUrl.origin !== window.location.origin) {\r\n        // Our service worker won't work if PUBLIC_URL is on a different origin\r\n        // from what our page is served on. This might happen if a CDN is used to\r\n        // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n        return;\r\n      }\r\n  \r\n      window.addEventListener('load', () => {\r\n        const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n  \r\n        if (isLocalhost) {\r\n          // This is running on localhost. Let's check if a service worker still exists or not.\r\n          checkValidServiceWorker(swUrl, config);\r\n  \r\n          // Add some additional logging to localhost, pointing developers to the\r\n          // service worker/PWA documentation.\r\n          navigator.serviceWorker.ready.then(() => {\r\n            console.log(\r\n              'This web app is being served cache-first by a service ' +\r\n                'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n            );\r\n          });\r\n        } else {\r\n          // Is not localhost. Just register service worker\r\n          registerValidSW(swUrl, config);\r\n        }\r\n      });\r\n    }\r\n  }\r\n  \r\n  function registerValidSW(swUrl, config) {\r\n    navigator.serviceWorker\r\n      .register(swUrl)\r\n      .then(registration => {\r\n        registration.onupdatefound = () => {\r\n          const installingWorker = registration.installing;\r\n          if (installingWorker == null) {\r\n            return;\r\n          }\r\n          installingWorker.onstatechange = () => {\r\n            if (installingWorker.state === 'installed') {\r\n              if (navigator.serviceWorker.controller) {\r\n                // At this point, the updated precached content has been fetched,\r\n                // but the previous service worker will still serve the older\r\n                // content until all client tabs are closed.\r\n                console.log(\r\n                  'New content is available and will be used when all ' +\r\n                    'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n                );\r\n  \r\n                // Execute callback\r\n                if (config && config.onUpdate) {\r\n                  config.onUpdate(registration);\r\n                }\r\n              } else {\r\n                // At this point, everything has been precached.\r\n                // It's the perfect time to display a\r\n                // \"Content is cached for offline use.\" message.\r\n                console.log('Content is cached for offline use.');\r\n  \r\n                // Execute callback\r\n                if (config && config.onSuccess) {\r\n                  config.onSuccess(registration);\r\n                }\r\n              }\r\n            }\r\n          };\r\n        };\r\n      })\r\n      .catch(error => {\r\n        console.error('Error during service worker registration:', error);\r\n      });\r\n  }\r\n  \r\n  function checkValidServiceWorker(swUrl, config) {\r\n    // Check if the service worker can be found. If it can't reload the page.\r\n    fetch(swUrl, {\r\n      headers: { 'Service-Worker': 'script' },\r\n    })\r\n      .then(response => {\r\n        // Ensure service worker exists, and that we really are getting a JS file.\r\n        const contentType = response.headers.get('content-type');\r\n        if (\r\n          response.status === 404 ||\r\n          (contentType != null && contentType.indexOf('javascript') === -1)\r\n        ) {\r\n          // No service worker found. Probably a different app. Reload the page.\r\n          navigator.serviceWorker.ready.then(registration => {\r\n            registration.unregister().then(() => {\r\n              window.location.reload();\r\n            });\r\n          });\r\n        } else {\r\n          // Service worker found. Proceed as normal.\r\n          registerValidSW(swUrl, config);\r\n        }\r\n      })\r\n      .catch(() => {\r\n        console.log(\r\n          'No internet connection found. App is running in offline mode.'\r\n        );\r\n      });\r\n  }\r\n  \r\n  export function unregister() {\r\n    if ('serviceWorker' in navigator) {\r\n      navigator.serviceWorker.ready\r\n        .then(registration => {\r\n          registration.unregister();\r\n        })\r\n        .catch(error => {\r\n          console.error(error.message);\r\n        });\r\n    }\r\n  }\r\n  ","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport LoadPage from './LoadPage'\r\nimport * as serviceWorker from './serviceWorker';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n \r\n    <LoadPage/>\r\n  \r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://cra.link/PWA\r\nserviceWorker.register();\r\n"],"sourceRoot":""}