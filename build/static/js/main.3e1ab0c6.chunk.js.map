{"version":3,"sources":["util/constants.ts","components/Numberpad.tsx","components/BlendDialog.tsx","components/MenuDialog.tsx","components/Alert.tsx","components/CommandPad.tsx","components/Worlds.tsx","util/CMD.ts","components/PJ.tsx","components/Programmer.tsx","util/getter.ts","components/PatchAddDialog.tsx","components/Patch.tsx","components/ConfigDialog.tsx","util/SocketListener.ts","App.tsx","prefrences.ts","components/ControlMenu.tsx","components/Disconnected.tsx","LoadPage.tsx","serviceWorker.js","reportWebVitals.js","index.js"],"names":["pjServer","process","ioCommands","commands","menuCommands","ControlCommands","PROJECTOR_MAKES","ConfigHeaders","keys","THRU","DEL","CLEAR","NEXT","IF_PROG","BACK","ENTER","defaultConfig","Patch","Location","LastUpdated","Date","Polling","Polling_Interval","Groups","0","name","group","Numberpad","props","handlePad","getButtons","C","map","key","Button","variant","style","padding","width","size","onClick","e","Paper","elevation","className","buttons","groups","i","length","g","slice","push","ButtonGroup","buttonGroups","BlendDialog","open","handleClose","handleCommand","buttonStyle","buttonGroupStyle","justifyContent","textAlign","margin","Dialog","onClose","aria-labelledby","DialogTitle","id","EDGE_BLENDING_ON","EDGE_BLENDING_OFF","EDGE_BLENDING_MARKERS_ON","EDGE_BLENDING_MARKERS_OFF","EDGE_BLENDING_UPPER_ON","EDGE_BLENDING_UPPER_OFF","EDGE_BLENDING_RIGHT_ON","EDGE_BLENDING_RIGHT_OFF","EDGE_BLENDING_LOWER_ON","EDGE_BLENDING_LOWER_OFF","EDGE_BLENDING_LEFT_ON","EDGE_BLENDING_LEFT_OFF","useStyles","makeStyles","theme","formControl","spacing","minWidth","selectEmpty","marginTop","MenuDialog","classes","MENU","MENU_DEFAULT_KEY","MENU_UP_KEY","MENU_LEFT_KEY","MENU_ENTER_KEY","MENU_RIGHT_KEY","MENU_DOWN_KEY","FormControl","InputLabel","Select","labelId","value","onChange","target","MenuItem","OSD_POSITION_UPPER_LEFT","OSD_POSITION_CENTER_LEFT","OSD_POSITION_LOWER_LEFT","OSD_POSITION_TOP_CENTER","OSD_POSITION_CENTER","OSD_POSITION_LOWER_CENTER","OSD_POSITION_UPPER_RIGHT","OSD_POSITION_LOWER_RIGHT","Alert","command","header","message","handleClick","approval","aria-describedby","DialogContent","DialogContentText","DialogActions","color","autoFocus","CommandPad","useState","menuOpen","setMenuOpen","blendOpen","setBlendOpen","openPowerOnAlert","setOpenPowerOnAlert","openPowerOffAlert","setOpenPowerOffAlert","s","height","SHUTTER_CLOSED","SHUTTER_OPEN","handleSelectors","TEST_PATTERN_OFF","TEST_PATTERN_WHITE","TEST_PATTERN_BLACK","TEST_PATTERN_FOCUS_RED","POWER_OFF","POWER_ON","Worlds","expanded","setExpanded","setWorld","selected","Accordion","AccordionSummary","expandIcon","aria-controls","Typography","AccordionDetails","Object","entries","parseInt","processCMD","cmdLine","world","cmds","split","cmdArray","getCommandArray","forEach","cmd","newSelected","includes","filter","n","handleSelected","handleThru","indexOf","c","toString","negative","start","end","console","log","concat","groupEnd","array","num","findInt","reset","PJ","pj","active","darkMode","handleTableSelect","time","setTime","useEffect","setInterval","getTime","clearInterval","bStyle","b","goodWord","lastSeen","t","now","Math","floor","TableRow","TableCell","background","shutter","edgeBlending","regions","edgeBlendingUpper","edgeBlendingRight","edgeBlendingLower","edgeBlendingLeft","borderStyle","borderColor","fontSize","marginLeft","edgeBlendingMarker","blendRegion","testPattren","lampStatus","hdmiResolution","hmdiSignalLevel","inputSignalName_Main","table","maxHeight","Programmer","prefs","pjs","status","getStyle","good","backgroundColor","TableContainer","component","Table","TableHead","blend","blendMarker","hdmiInput","signalName","TableBody","sort","pjID","online","power","error","osdPostion","showOnlySelected","goFetch","query","a","fetchString","fetch","mode","res","ok","json","marginBottom","PatchAddDialog","addPJs","currentPatch","PANASONIC","make","setMake","err","Amount","setAmount","values","getMaxID","StartID","setID","BaseIP","setBaseIP","UserName","Pass","Port","setPort","checkOverlap","startID","amount","fullWidth","TextField","type","label","isNaN","helperText","handleBaseIP","disabled","auth","fab","position","bottom","right","columns","field","headerName","hide","patch","setPatch","addWindowOpen","setAddWindowOpen","setEditWindowOpen","setSelected","deleteWindowOpen","setDeleteWindowOpen","newPJs","rows","checkboxSelection","selectionModel","onSelectionModelChange","aria-label","newPatch","assign","newSelect","getSelectedString","baseIP","port","ip_address","v4","appBar","title","flex","root","Transition","forwardRef","ref","Slide","direction","ConfigDialog","config","socket","polling","setPolling","pollingInterval","setPollingInterval","fullScreen","TransitionComponent","onSubmit","event","preventDefault","form","document","querySelector","data","FormData","pair","v","POLLING","POLLING_INTERVAL","setConfig","emit","EMITTING_PATCH","SocketPatcher","AppBar","Toolbar","IconButton","edge","LOCATION","defaultValue","FormControlLabel","labelPlacement","control","Switch","checked","p","App","Props","openConfig","handleCloseConfig","setCMD","setActive","activeIndex","setActiveIndex","clearPresses","setClearPressed","setPJs","pollingProgress","setPollingProgress","undefined","setCommand","rigStatus","setStatus","on","EMITTING_PJS","EMITTING_STATUS","REQUEST_UPDATE","REQUESTING_UPDATE","REQUEST_CONFIG","REQUESTING_CONFIG","EMITTING_CONFIG","groupCollapsed","EMITTING_POLLING_PROGRESS","progress","SocketListener","EMITTING_CMD","pjIDs","clearProgrammerAfterCMD","onkeyup","handleCMD","handleNext","handleBack","getGroup","finalCMD","diffrentPJs","groupID","rel","href","LinearProgress","Container","float","Grid","container","item","InputLabelProps","shrink","cookieName","defaultPrefs","setCookie","Cookies","set","getCookie","get","getPrefrences","JSON","parse","d","ControlMenu","handleSettings","handleOpenConfig","divRef","useRef","setOpen","handleChange","CLEAR_SELECTED_ON_CMD","IF_SELECTED","DARK_MODE","button","aria-haspopup","Menu","keepMounted","anchorEl","current","Disconnected","CircularProgress","Settings","React","createContext","Pref","createStyles","backdrop","zIndex","drawer","LoadPage","prefersDarkMode","useMediaQuery","prefres","setPrefs","setOpenConfig","socketConnected","setSocketConnected","socketIOClinet","createMuiTheme","palette","ThemeProvider","Provider","CssBaseline","Backdrop","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","onUpdate","onSuccess","catch","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","hasRestoredState","ReactDOM","hydrate","StrictMode","getElementById","render","URL","origin","addEventListener","localStorage","setItem","innerHTML","lastKnown","getItem","headers","response","contentType","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.3e1ab0c6.chunk.js","sourcesContent":["\r\n\r\nexport let pjServer = 'http://localhost:3000/'\r\n//export let pjServer = 'http://192.168.10.249:3000/'\r\nif(process.env.NODE_ENV ==='production'){\r\n    pjServer = process.env.REACT_APP_SERVER? process.env.REACT_APP_SERVER : 'localhost:3000';\r\n}\r\n\r\n\r\nexport const fetchSettings: RequestInit = {\r\n    method:'get',\r\n    headers:{\r\n        \r\n    }\r\n   \r\n}\r\n\r\nexport type PJs = Record<number,PJ_OBJ>\r\n\r\nexport enum ioCommands {\r\n    REQUEST_UPDATE = 'REQUEST_UPDATE',\r\n    REQUESTING_UPDATE = 'REQUESTING_UPDATE',\r\n    EMITTING_PJS = 'EMITTING_PJS',\r\n    EMITTING_STATUS = 'EMITTING_STATUS',\r\n    REQUEST_CONFIG = 'REQUEST_CONFIG',\r\n    EMITTING_CONFIG = 'EMITTING_CONFIG',\r\n    REQUESTING_CONFIG = 'REQUESTING_CONFIG', \r\n    EMITTING_PATCH = 'EMITTING_PATCH',\r\n    EMITTING_POLLING_PROGRESS = 'EMITTING_POLLING_PROGRESS',\r\n    EMITTING_CMD = 'EMITTING_CMD'\r\n}\r\nexport interface PJ_OBJ{\r\n    id: number,\r\n    power: string,\r\n    name: string,\r\n    shutter: string,\r\n    online: string,\r\n    lastSeen: number,\r\n    lampStatus: string,\r\n    edgeBlending: string,\r\n    edgeBlendingMarker: string,\r\n    edgeBlendingUpper: string,\r\n    edgeBlendingLower: string,\r\n    edgeBlendingRight: string,\r\n    edgeBlendingLeft: string,\r\n    testPattren: string,\r\n    hmdiSignalLevel : string,\r\n    hdmiResolution: string,\r\n    osdPostion: string,\r\n    inputSignalName_Main: string,\r\n    error: string\r\n}\r\nexport interface RIG_STATUS{\r\n    online: boolean,\r\n    power: boolean,\r\n    shutter: boolean,\r\n    blend: boolean,\r\n    blendMarker: boolean,\r\n    testPattren: boolean,\r\n    lampStatus: boolean,\r\n    hdmiInput:boolean,\r\n    signalName: boolean\r\n}\r\n\r\nexport enum commands{\r\n    THRU = 'THRU',\r\n    DEL = 'DEL',\r\n    CLEAR = 'CLEAR',\r\n    ENTER = 'ENTER',\r\n    NEXT = 'NEXT',\r\n    BACK = 'BACK',\r\n    IF_PROG = 'IF_PROG'\r\n\r\n}\r\n\r\nexport enum menuCommands{\r\n    CLEAR_SELECTED_ON_CMD = 'CLEAR_SELECTED_ON_CMD',\r\n    IF_SELECTED = 'IF_SELECTED',\r\n    DARK_MODE = 'DARK_MODE'\r\n}\r\nexport const keys= ['7','8','9','4','5','6','1','2','3','-','0','+',commands.THRU,commands.DEL, commands.CLEAR, commands.NEXT, commands.IF_PROG, commands.BACK, commands.ENTER]\r\n\r\nexport enum ControlCommands{\r\n    POWER_OFF = 'POWER_OFF',\r\n    POWER_ON = 'POWER_ON',\r\n    SHUTTER_CLOSED = 'SHUTTER_CLOSED',\r\n    SHUTTER_OPEN = 'SHUTTER_OPEN',\r\n    EDGE_BLENDING_OFF = 'EDGE_BLENDING_OFF',\r\n    EDGE_BLENDING_ON = 'EDGE_BLENDING_ON',\r\n    EDGE_BLENDING_MARKERS_ON = 'EDGE_BLENDING_MARKERS_ON',\r\n    EDGE_BLENDING_MARKERS_OFF = 'EDGE_BLENDING_MARKERS_OFF',\r\n    TEST_PATTERN_OFF = 'TEST_PATTERN_OFF',\r\n    TEST_PATTERN_WHITE = 'TEST_PATTERN_WHITE',\r\n    TEST_PATTERN_BLACK = 'TEST_PATTERN_BLACK',\r\n    TEST_PATTERN_FOCUS_RED = 'TEST_PATTERN_FOCUS_RED',\r\n    MENU = 'MENU',\r\n    MENU_DOWN_KEY = 'MENU_DOWN_KEY',\r\n    MENU_UP_KEY = 'MENU_UP_KEY',\r\n    MENU_RIGHT_KEY = 'MENU_RIGHT_KEY',\r\n    MENU_LEFT_KEY = 'MENU_LEFT_KEY',\r\n    MENU_DEFAULT_KEY = 'MENU_DEFAULT_KEY',\r\n    MENU_ENTER_KEY = 'MENU_ENTER_KEY',\r\n    EDGE_BLENDING_UPPER_ON = 'EDGE_BLENDING_UPPER_ON',\r\n    EDGE_BLENDING_UPPER_OFF = 'EDGE_BLENDING_UPPER_OFF',\r\n    EDGE_BLENDING_LOWER_OFF = 'EDGE_BLENDING_LOWER_OFF',\r\n    EDGE_BLENDING_LOWER_ON = 'EDGE_BLENDING_LOWER_ON',\r\n    EDGE_BLENDING_RIGHT_OFF = 'EDGE_BLENDING_RIGHT_OFF',\r\n    EDGE_BLENDING_RIGHT_ON = 'EDGE_BLENDING_RIGHT_ON',\r\n    EDGE_BLENDING_LEFT_OFF = 'EDGE_BLENDING_LEFT_OFF',\r\n    EDGE_BLENDING_LEFT_ON = 'EDGE_BLENDING_LEFT_ON',\r\n    OSD_POSITION_UPPER_LEFT = 'OSD_POSITION_UPPER_LEFT',\r\n    OSD_POSITION_CENTER_LEFT = 'OSD_POSITION_CENTER_LEFT',\r\n    OSD_POSITION_LOWER_LEFT = 'OSD_POSITION_LOWER_LEFT',\r\n    OSD_POSITION_TOP_CENTER = 'OSD_POSITION_TOP_CENTER',\r\n    OSD_POSITION_CENTER = 'OSD_POSITION_CENTER',\r\n    OSD_POSITION_LOWER_CENTER = 'OSD_POSITION_LOWER_CENTER',\r\n    OSD_POSITION_UPPER_RIGHT = 'OSD_POSITION_UPPER_RIGHT',\r\n    OSD_POSITION_CENTER_RIGHT = 'OSD_POSITION_CENTER_RIGHT',\r\n    OSD_POSITION_LOWER_RIGHT = 'OSD_POSITION_LOWER_RIGHT',\r\n    PROJECTOR_NAME = 'PROJECTOR_NAME'\r\n\r\n}\r\n\r\nexport type ControlKeys = keyof typeof ControlCommands\r\n\r\nexport enum PROJECTOR_MAKES {\r\n    PANASONIC = 'PANASONIC'\r\n}\r\n\r\n\r\n\r\nexport type PROJECTOR_MAKE = keyof typeof PROJECTOR_MAKES\r\n\r\n\r\nexport enum ConfigHeaders{\r\n    LOCATION = 'LOCATION',\r\n    LAST_UPDATED = 'LAST_UPDATED',\r\n    POLLING = 'POLLING',\r\n    POLLING_INTERVAL = 'POLLING_INTERVAL',\r\n    PATCH = 'PATCH'\r\n    \r\n}\r\ninterface Projector{\r\n    ip_address: string,\r\n    port: number,\r\n    auth: string,\r\n    make: keyof typeof PROJECTOR_MAKES,\r\n    id: number\r\n}\r\nexport type Patch = Record<string,Projector>\r\nexport type Group = {name: string, group: number[]}\r\nexport type Groups = Record<number, Group>\r\nexport interface Config {\r\n    Patch: Patch,\r\n    Location: string,\r\n    LastUpdated: string,\r\n    Polling: boolean,\r\n    Polling_Interval: number,\r\n    Groups: Groups\r\n}\r\n\r\n\r\nexport type ConfigKeys = keyof typeof ConfigHeaders\r\nexport const defaultConfig: Config = {\r\n    Patch: {},\r\n    Location: '',\r\n    LastUpdated: Date(),\r\n    Polling: false,\r\n    Polling_Interval: 60000,\r\n    Groups: {0:{name:'All',group:[]}}\r\n}","import {Button, ButtonGroup, Paper} from '@material-ui/core'\r\nimport './numberpad.css'\r\n\r\nimport * as C from '../util/constants'\r\ninterface numberpad_props{\r\n    handlePad: (e: string)=>void\r\n}\r\nexport default function Numberpad(props:numberpad_props){\r\n    const {handlePad} =props\r\n    \r\n    const getButtons=()=>{\r\n     \r\n        return C.keys.map(key=>{\r\n            return <Button variant=\"contained\" style={{padding: '10px', width: '75px'}} size={'large'} key={key} onClick={(e)=>handlePad(key)} >{key}</Button>     \r\n        })\r\n    }\r\n\r\n    const buttonGroups=()=>{\r\n        let buttons = getButtons()\r\n        let groups =[]\r\n        let chunk = 3\r\n        for(let i=0; i<=buttons.length-chunk; i+=chunk){\r\n           \r\n            let g = buttons.slice(i,chunk+i)\r\n           \r\n            groups.push(\r\n                <ButtonGroup key={'pad_group'+i}>\r\n                   {g}\r\n                </ButtonGroup>\r\n             \r\n            )\r\n        }\r\n        return groups\r\n    }\r\n    return (\r\n        <Paper elevation={1} className='pad'>\r\n            \r\n            {buttonGroups()}\r\n            {getButtons()[C.keys.length-1]}\r\n            \r\n        </Paper>\r\n\r\n    )\r\n}","import { Dialog, DialogTitle, Button, ButtonGroup } from \"@material-ui/core\";\r\nimport { CSSProperties } from \"react\";\r\nimport { ControlKeys, ControlCommands } from '../util/constants'\r\ninterface BlendDialog_Props {\r\n    open: boolean,\r\n    handleClose: () => void,\r\n    handleCommand: (e: ControlKeys) => void\r\n}\r\n\r\nexport default function BlendDialog(props: BlendDialog_Props) {\r\n    const { open, handleClose, handleCommand } = props\r\n    const buttonStyle: CSSProperties = {\r\n        padding: '20px',\r\n        width: '140px'\r\n\r\n       \r\n    }\r\n    const buttonGroupStyle: CSSProperties = {\r\n        justifyContent: 'center',\r\n        textAlign: 'center',\r\n        margin: 'auto'\r\n       \r\n        \r\n    }\r\n    return (\r\n        <Dialog key='blend_dialog'  onClose={handleClose} aria-labelledby=\"simple-dialog-title\" open={open}>\r\n            <DialogTitle style={buttonGroupStyle} key='menu_dialog_title' id=\"simple-dialog-title\">Blending</DialogTitle>\r\n            <div key='blend_div' style={{width:300, justifyContent: 'center', textAlign: 'center'}}>\r\n            <ButtonGroup style={buttonGroupStyle} key='blend_main_keys' variant=\"outlined\">\r\n                <Button style={buttonStyle} key='blend_on' onClick={(e) => handleCommand(ControlCommands.EDGE_BLENDING_ON)} >Edge Blend On</Button>\r\n                <Button style={buttonStyle} key='blend_off' onClick={(e) => handleCommand(ControlCommands.EDGE_BLENDING_OFF)} >Edge Blend Off</Button>\r\n            </ButtonGroup>\r\n\r\n            <br></br>\r\n\r\n            <ButtonGroup style={buttonGroupStyle} key='makers_main_keys' variant=\"outlined\">\r\n                <Button style={buttonStyle} key='markers_on' onClick={(e) => handleCommand(ControlCommands.EDGE_BLENDING_MARKERS_ON)} >Markers On</Button>\r\n                <Button style={buttonStyle} key='markers_off' onClick={(e) => handleCommand(ControlCommands.EDGE_BLENDING_MARKERS_OFF)} >Markers Off</Button>\r\n            </ButtonGroup>\r\n\r\n            <br></br>\r\n\r\n            <ButtonGroup style={buttonGroupStyle} key='upper_keys' variant=\"outlined\">\r\n                <Button style={buttonStyle} key='upper_on' onClick={(e) => handleCommand(ControlCommands.EDGE_BLENDING_UPPER_ON)} >Uppere On</Button>\r\n                <Button style={buttonStyle} key='upper_off' onClick={(e) => handleCommand(ControlCommands.EDGE_BLENDING_UPPER_OFF)} >Uppper Off</Button>\r\n            </ButtonGroup>\r\n\r\n            <ButtonGroup style={buttonGroupStyle} key='right_keys' variant=\"outlined\">\r\n                <Button style={buttonStyle} key='right_on' onClick={(e) => handleCommand(ControlCommands.EDGE_BLENDING_RIGHT_ON)} >Right On</Button>\r\n                <Button style={buttonStyle} key='right_off' onClick={(e) => handleCommand(ControlCommands.EDGE_BLENDING_RIGHT_OFF)} >Right Off</Button>\r\n            </ButtonGroup>\r\n\r\n            <ButtonGroup style={buttonGroupStyle} key='lower_keys' variant=\"outlined\">\r\n                <Button style={buttonStyle} key='lower_on' onClick={(e) => handleCommand(ControlCommands.EDGE_BLENDING_LOWER_ON)} >Lower On</Button>\r\n                <Button style={buttonStyle} key='lower_off' onClick={(e) => handleCommand(ControlCommands.EDGE_BLENDING_LOWER_OFF)} >Lower Off</Button>\r\n            </ButtonGroup>\r\n\r\n            <ButtonGroup style={buttonGroupStyle} key='left_keys' variant=\"outlined\">\r\n                <Button style={buttonStyle} key='left_on' onClick={(e) => handleCommand(ControlCommands.EDGE_BLENDING_LEFT_ON)} >Left On</Button>\r\n                <Button style={buttonStyle} key='left_off' onClick={(e) => handleCommand(ControlCommands.EDGE_BLENDING_LEFT_OFF)} >Left Off</Button>\r\n            </ButtonGroup>\r\n            </div>\r\n        </Dialog>\r\n    );\r\n}","import { Dialog, DialogTitle, Button, ButtonGroup, FormControl,InputLabel,Select,MenuItem, makeStyles } from \"@material-ui/core\";\r\nimport { CSSProperties } from \"react\";\r\nimport { ControlKeys, ControlCommands } from '../util/constants'\r\ninterface MenuDialog_Props {\r\n    open: boolean,\r\n    handleClose: () => void,\r\n    handleCommand: (e: ControlKeys) => void\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    formControl: {\r\n      margin: theme.spacing(1),\r\n      minWidth: 120,\r\n    },\r\n    selectEmpty: {\r\n      marginTop: theme.spacing(2),\r\n    },\r\n  }));\r\nexport default function MenuDialog(props: MenuDialog_Props) {\r\n    const { open, handleClose, handleCommand } = props\r\n    const classes = useStyles()\r\n    const buttonStyle: CSSProperties = {\r\n        padding: '20px',\r\n        width: '100px',\r\n       \r\n    }\r\n    const buttonGroupStyle: CSSProperties = {\r\n        justifyContent: 'center',\r\n        textAlign: 'center'\r\n        \r\n    }\r\n    return (\r\n        <Dialog key='menu_dialog' onClose={handleClose} aria-labelledby=\"simple-dialog-title\" open={open}>\r\n            <DialogTitle style={buttonGroupStyle} key='menu_dialog_title' id=\"simple-dialog-title\">Menu Commands</DialogTitle>\r\n            <ButtonGroup style={buttonGroupStyle} key='menu_main_keys' variant=\"outlined\">\r\n                <Button style={buttonStyle} key='menu' onClick={(e) => handleCommand(ControlCommands.MENU)} >Menu</Button>\r\n                <Button style={buttonStyle} key='enter' onClick={(e) => handleCommand(ControlCommands.MENU_DEFAULT_KEY)} >Default</Button>\r\n            </ButtonGroup>\r\n\r\n            <br></br>\r\n\r\n            <ButtonGroup style={buttonGroupStyle} key='menu_row1_keys' variant=\"outlined\">\r\n                <Button style={buttonStyle} key='up' onClick={(e) => handleCommand(ControlCommands.MENU_UP_KEY)} >Up</Button>\r\n            </ButtonGroup>\r\n\r\n            <ButtonGroup style={buttonGroupStyle} key='menu_row2_keys' variant=\"outlined\">\r\n                <Button style={buttonStyle} key='left' onClick={(e) => handleCommand(ControlCommands.MENU_LEFT_KEY)} >Left</Button>\r\n                <Button style={buttonStyle} key='enter' onClick={(e) => handleCommand(ControlCommands.MENU_ENTER_KEY)} >Enter</Button>\r\n                <Button style={buttonStyle} key='right' onClick={(e) => handleCommand(ControlCommands.MENU_RIGHT_KEY)} >Right</Button>\r\n            </ButtonGroup>\r\n\r\n            <ButtonGroup style={buttonGroupStyle} key='menu_row3_keys' variant=\"outlined\">\r\n                <Button style={buttonStyle} key='down' onClick={(e) => handleCommand(ControlCommands.MENU_DOWN_KEY)} >Down</Button>\r\n            </ButtonGroup>\r\n\r\n            <FormControl className={classes.formControl}>\r\n                <InputLabel id='osd_position'>OSD Position</InputLabel>\r\n                <Select labelId='osd_position' id='osd_postion'\r\n                 value={''} onChange={((e)=> handleCommand(e.target.value as ControlKeys))}>\r\n                     <MenuItem value={ControlCommands.OSD_POSITION_UPPER_LEFT}>Upper Left</MenuItem>\r\n                     <MenuItem value={ControlCommands.OSD_POSITION_CENTER_LEFT}>Center Left</MenuItem>\r\n                     <MenuItem value={ControlCommands.OSD_POSITION_LOWER_LEFT}>Lower Left</MenuItem>\r\n                     <MenuItem value={ControlCommands.OSD_POSITION_TOP_CENTER}>Top Center</MenuItem>\r\n                     <MenuItem value={ControlCommands.OSD_POSITION_CENTER}>Center</MenuItem>\r\n                     <MenuItem value={ControlCommands.OSD_POSITION_LOWER_CENTER}>Lower Center</MenuItem>\r\n                     <MenuItem value={ControlCommands.OSD_POSITION_UPPER_RIGHT}>Upper Right</MenuItem>\r\n                     <MenuItem value={ControlCommands.OSD_POSITION_LOWER_RIGHT}>Lower Right</MenuItem>\r\n                 </Select>\r\n                 \r\n            </FormControl>\r\n\r\n        </Dialog>\r\n    );\r\n}","import {Button, Dialog, DialogActions, DialogTitle, DialogContent, DialogContentText } from \"@material-ui/core\";\r\nimport { ControlKeys } from \"../util/constants\";\r\ninterface Alert_Props{\r\n    open: boolean,\r\n    handleCommand: (cmd: ControlKeys)=>void,\r\n    handleClose: ()=>void,\r\n    command: ControlKeys,\r\n    header: string,\r\n    message: string\r\n}\r\nexport default function Alert(props: Alert_Props){\r\n    const {open,handleCommand, command, handleClose, header, message} = props\r\n\r\n    const handleClick=(approval: boolean)=>{\r\n        if(approval){\r\n            handleCommand(command)\r\n        }\r\n        handleClose()\r\n\r\n    }\r\n    return (\r\n        <Dialog\r\n        open={open}\r\n        onClose={handleClose}\r\n        aria-labelledby=\"alert-dialog-title\"\r\n        aria-describedby=\"alert-dialog-description\"\r\n      >\r\n        <DialogTitle id=\"alert-dialog-title\">{header}</DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText id=\"alert-dialog-description\">\r\n            <span style={{width:'50'}}>{message}</span>\r\n          </DialogContentText>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={(e)=>handleClick(false)} color=\"primary\">\r\n            Cancle\r\n          </Button>\r\n          <Button onClick={(e)=>handleClick(true)} color=\"primary\" autoFocus>\r\n            Okay\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n        \r\n    )\r\n}","import { Button, Paper, ButtonGroup, FormControl, InputLabel, MenuItem, Select } from \"@material-ui/core\";\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport {CSSProperties, useState} from 'react'\r\nimport { ControlKeys, ControlCommands} from \"../util/constants\";\r\nimport BlendDialog from \"./BlendDialog\";\r\nimport MenuDialog from './MenuDialog'\r\nimport Alert from './Alert'\r\n\r\ninterface command_props{\r\n    handleCommand: (e: ControlKeys) => void\r\n}\r\nconst useStyles = makeStyles((theme) => ({\r\n    formControl: {\r\n      margin: theme.spacing(1),\r\n      minWidth: 120,\r\n    },\r\n    selectEmpty: {\r\n      marginTop: theme.spacing(2),\r\n    },\r\n  }));\r\nexport default function CommandPad(props:command_props){\r\n    const {handleCommand } = props\r\n    const [menuOpen, setMenuOpen] = useState(false)\r\n    const [blendOpen, setBlendOpen] = useState(false)\r\n    const [openPowerOnAlert, setOpenPowerOnAlert]= useState(false)\r\n    const [openPowerOffAlert, setOpenPowerOffAlert]= useState(false)\r\n    const classes = useStyles();\r\n    const s: CSSProperties={\r\n\r\n        width: '150px',\r\n        height: '50px'\r\n\r\n    }\r\n    const handleSelectors=(e: any)=>{\r\n        let target = e.target.value as ControlKeys\r\n        handleCommand(target)\r\n\r\n    }\r\n    return(\r\n       <>\r\n        <Paper  key='commandKeys' style={{width:'300px'}}>\r\n            <ButtonGroup key='power' color=\"primary\" variant=\"outlined\">\r\n            <Button  key='shutter_on' style={s} onClick={(e) => handleCommand(ControlCommands.SHUTTER_CLOSED)} >Sutter Closed (i)</Button>\r\n            <Button  key='sutter_off' style={s}  onClick={(e) => handleCommand(ControlCommands.SHUTTER_OPEN)} >Shutter Open (o)</Button>\r\n            </ButtonGroup>\r\n            <br></br>\r\n            <ButtonGroup key='shutters' color=\"primary\" variant=\"outlined\">\r\n                <Button  key='power off'  style={s}  onClick={(e) => setOpenPowerOffAlert(true)} >Power Off</Button>\r\n                <Button  key='power on' style={s}  onClick={(e) => setOpenPowerOnAlert(true)} >Power On</Button>\r\n            </ButtonGroup>\r\n            <ButtonGroup color=\"primary\" variant=\"outlined\">\r\n                <Button color=\"primary\" key='menu' variant=\"contained\" style={s}  onClick={(e) => setMenuOpen(!menuOpen)} >Menu</Button>\r\n                <Button color=\"primary\" key='blend' variant=\"contained\" style={s}  onClick={(e) => setBlendOpen(!blendOpen)} >Blend</Button>\r\n            </ButtonGroup>\r\n            <FormControl className={classes.formControl}>\r\n                <InputLabel id='test_pattren'>Test Pattren</InputLabel>\r\n                <Select labelId='test_pattren' id='test_pattren_select'\r\n                 value={''} onChange={((e)=> handleSelectors(e))}>\r\n                     <MenuItem value={ControlCommands.TEST_PATTERN_OFF}>Off</MenuItem>\r\n                     <MenuItem value={ControlCommands.TEST_PATTERN_WHITE}>White</MenuItem>\r\n                     <MenuItem value={ControlCommands.TEST_PATTERN_BLACK}>Black</MenuItem>\r\n                     <MenuItem value={ControlCommands.TEST_PATTERN_FOCUS_RED}>Focus Red</MenuItem>\r\n                 </Select>\r\n                 \r\n            </FormControl>\r\n            <MenuDialog open={menuOpen} handleClose={()=>setMenuOpen(false)} handleCommand={handleCommand}/>\r\n            <BlendDialog open={blendOpen} handleClose={()=>setBlendOpen(false)} handleCommand={handleCommand}/>\r\n        </Paper>\r\n        <Alert open={openPowerOffAlert} handleCommand={handleCommand} handleClose={()=>setOpenPowerOffAlert(false)}\r\n        header='Power Off' message='Are you sure?' command={ControlCommands.POWER_OFF}/>\r\n        <Alert open={openPowerOnAlert} handleCommand={handleCommand} handleClose={()=>setOpenPowerOnAlert(false)}\r\n        header='Power On' message='Are you sure?' command={ControlCommands.POWER_ON}/>\r\n        </>\r\n    )\r\n}\r\n","import {Accordion, AccordionSummary,AccordionDetails,Typography, Button} from '@material-ui/core'\r\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\"\r\nimport * as C from '../util/constants'\r\nimport {useState} from 'react'\r\n\r\ninterface worlds_props{\r\n    setWorld: (g: string)=> void\r\n    name: string\r\n    groups: C.Groups\r\n    selected?: number\r\n}\r\nexport default function Worlds( props: worlds_props){\r\n    const [expanded, setExpanded]= useState(false)\r\n    const {setWorld, name, groups, selected} = props\r\n\r\n    const getWorlds = ()=>{\r\n        return Object.entries(groups).map(group=>{\r\n            let s = false\r\n            if(selected ===parseInt(group[0]))\r\n              s = true\r\n\r\n            return <Button key={group[0]} onClick={(e)=>setWorld(group[0])} variant={s?'outlined':'text'}>{group[1].name}</Button>\r\n        })\r\n    }\r\n    return (\r\n        <Accordion key={'world'+name} expanded={expanded} onChange={()=>setExpanded(!expanded)}>\r\n        <AccordionSummary\r\n          expandIcon={<ExpandMoreIcon />}\r\n          aria-controls=\"panel1bh-content\"\r\n          id=\"panel1bh-header\"\r\n        >\r\n          <Typography>{name}</Typography>\r\n          \r\n        </AccordionSummary>\r\n        <AccordionDetails>\r\n          {getWorlds()}\r\n        </AccordionDetails>\r\n      </Accordion>\r\n    )\r\n}","import * as C from './constants'\r\n\r\ntype cmdType = number | keyof typeof C.commands\r\nexport function processCMD(cmdLine: string, selected: number[], world: number[]) {\r\n    let cmds = cmdLine.split(' ')\r\n    let cmdArray: cmdType[] = []\r\n   // console.log('Processing ', cmds)\r\n    for (let i = 0; i < cmds.length; i++) {\r\n      //  console.log('Now Running', cmds[i])\r\n        if (cmds[i] === C.commands.THRU) {\r\n            cmdArray.push(C.commands.THRU)\r\n        } else {\r\n            \r\n            getCommandArray(cmds[i]).forEach(cmd => {\r\n                cmdArray.push(cmd)\r\n            })\r\n            \r\n           //cmdArray.concat(getCommandArray(cmds[i]))\r\n        }\r\n    }\r\n   // console.log('Parsing Complete', cmdArray)\r\n    selected = handleSelected( handleThru(cmdArray),selected)\r\n    selected = selected.filter(s=> world.includes(s))\r\n    \r\n //  console.log('Processing Complete', selected)\r\n    return selected\r\n}\r\n\r\nfunction handleThru(cmds: cmdType[]) {\r\n    let cmdArray: number[] = []\r\n    if (cmds.indexOf(C.commands.THRU) === 1 && cmds.length > 2) {\r\n        let negative = 1\r\n        let start = cmds[0] as number\r\n        if (start < 0) {\r\n            start = start * -1\r\n            negative = -1\r\n        }\r\n        let end = cmds[2] as number\r\n        if(end<start){\r\n          //  console.log('Running Thru Backwards',end, 'thru',start)\r\n            for (let i = start; i >= end; i--) {\r\n                console.log(i*negative)\r\n                cmdArray.push(i*negative)\r\n        }\r\n        } else{\r\n            for (let i = start; i <= end; i++) {\r\n                cmdArray.push(i*negative)\r\n        }\r\n        }\r\n        \r\n        if(cmds.length>2)\r\n            cmdArray= cmdArray.concat(handleThru(cmds.slice(3)))\r\n    } else{\r\n        return cmds.map(c=> {return parseInt(c.toString())})\r\n    }\r\n    return cmdArray\r\n}\r\n\r\nfunction handleSelected(cmds: number[], selected: number[]) {\r\n    let newSelected = selected\r\n    for (let i = 0; i < cmds.length; i++) {\r\n        let cmd = cmds[i]\r\n        if (cmd < 0 && newSelected.includes(cmd * -1)) { //Remove\r\n            //console.log('Removing ',s[i]*-1)\r\n            newSelected = newSelected.filter((n) => n !== (cmd * -1))\r\n        } else if (!newSelected.includes(cmd) && cmd > 0) {\r\n            newSelected.push(cmd)\r\n        }\r\n    }\r\n   \r\n    return newSelected\r\n}\r\n\r\nfunction getCommandArray(cmd: string) {\r\n    if (cmd.length === 0) {\r\n        console.groupEnd()\r\n        return []\r\n    }\r\n   // console.group('Processing ', cmd)\r\n\r\n    let array: number[] = []\r\n    if (cmd.slice(0, 5) === C.commands.THRU) {\r\n   //     console.log('Thru')\r\n        //return [C.commands.THRU]\r\n    } else {\r\n        let num = findInt(cmd)\r\n        array.push(num)\r\n        // console.table(array)\r\n      //  console.log(num, cmd.indexOf(num + ''))\r\n        let reduced = cmd.slice(cmd.indexOf(num + \"\") + ((num + '').length))\r\n        //console.log('Reduced',reduced)\r\n\r\n        let reset = getCommandArray(reduced)\r\n        for (let i = 0; i < reset.length; i++) {\r\n            array.push(reset[i])\r\n        }\r\n\r\n        //console.table(array)\r\n\r\n    }\r\n    //array.push(getCommandArray(c.))\r\n    return array\r\n}\r\nfunction findInt(cmd: string) {\r\n    // console.log('Finding int', c)\r\n    let i = 0\r\n    let negative = 1\r\n    if (cmd[0] === '-') {\r\n        negative = -1\r\n        cmd = cmd.slice(1)\r\n    }\r\n\r\n    // console.log('C ',c)\r\n    while (i < cmd.length) {\r\n        if (parseInt(cmd[i]) >= 0) {\r\n            i++\r\n        }\r\n        else {\r\n            i = cmd.length\r\n        }\r\n    }\r\n    // console.log('Parsed Int' ,parseInt(c.slice(0,i))*negative)\r\n    return (parseInt(cmd.slice(0, i)) * negative)\r\n}\r\n","import { TableCell, TableRow, Button } from \"@material-ui/core\"\r\nimport BorderColorIcon from '@material-ui/icons/BorderColor';\r\nimport { CSSProperties, useEffect, useState } from \"react\"\r\nimport { PJ_OBJ } from \"../util/constants\"\r\ninterface PJ_Props {\r\n    pj: PJ_OBJ,\r\n    selected: boolean,\r\n    active: boolean,\r\n    darkMode: boolean,\r\n    handleTableSelect: (id: number) => void\r\n}\r\nfunction PJ(props: PJ_Props) {\r\n    const { pj, selected, active, darkMode, handleTableSelect } = props\r\n    const [time, setTime] = useState('0')\r\n\r\n    useEffect(() => {\r\n        \r\n      //  getTime()\r\n        \r\n        let i =setInterval(getTime,1000)\r\n        \r\n        return function cleanup(){\r\n            clearInterval(i)\r\n        }\r\n       \r\n        \r\n    })\r\n\r\n    const style = () => {\r\n     //   console.log('Selected',selected, 'Active',active)\r\n        let s: CSSProperties = {\r\n            color: 'Gainsboro',\r\n            textAlign: 'center'\r\n\r\n        }\r\n        if (active) {\r\n            s.color = 'black'\r\n            s.background = 'lightgray'\r\n\r\n        } else if (selected) {\r\n            s.color = 'black'\r\n            \r\n        }\r\n        return s\r\n    }\r\n    const bStyle = (b = 'On', goodWord = 'On'):CSSProperties => {\r\n        return  {\r\n            textAlign: 'center',\r\n            margin:'auto',\r\n            color: b===goodWord? darkMode?'white' :'black' : 'red'\r\n            \r\n        }\r\n        \r\n    }\r\n    const getTime = () => {\r\n        if (pj.lastSeen < 0) {\r\n            setTime('N/A')\r\n            return \r\n        }\r\n        let t = (Date.now() - pj.lastSeen) / 1000\r\n\r\n        t = Math.floor(t)\r\n        if (t > 59) {\r\n            setTime(Math.floor(t / 60) + 'm')\r\n            return\r\n        }\r\n            setTime(t + 's')\r\n        \r\n    }\r\n\r\n    const blendRegion =()=>{\r\n        let color = ''\r\n        let regions = [pj.edgeBlendingUpper, pj.edgeBlendingRight, pj.edgeBlendingLower, pj.edgeBlendingLeft]\r\n        for(let i=0; i < regions.length; i++){\r\n            switch(regions[i]){\r\n                case 'On':\r\n                    color+= ' green'\r\n                    break;\r\n                case 'Off':\r\n                    color+= ' black'\r\n                    break\r\n                case 'Unknown':\r\n                    color+= ' yellow'\r\n                    break\r\n                default:\r\n                    color+=' red'\r\n            }\r\n        }\r\n      \r\n        return (\r\n            <p style={{ padding: 10,  margin:'auto', textAlign: 'center', borderStyle: 'solid', borderColor: color}}key={pj.id+'brbox'}> {pj.edgeBlending}\r\n             <BorderColorIcon  style={{fontSize:'15', marginLeft: '5', marginTop: 'auto', color:pj.edgeBlendingMarker==='On'?'red':'gray'}} /></p>\r\n        )\r\n    }\r\n    const getID=()=>{\r\n        return <Button> {pj.name==='Unknown'?pj.id:pj.name}</Button>\r\n    }\r\n\r\n    return (\r\n        <TableRow key={pj.id}>\r\n            <TableCell onClick={e => handleTableSelect(pj.id)} style={style()} key={pj.id + 'id'}>{getID()}</TableCell>\r\n            <TableCell style={bStyle(pj.shutter, 'Open')} key={pj.id + 'shutter'}>{pj.shutter}</TableCell>\r\n            <TableCell style={bStyle(pj.edgeBlending, 'On')} key={pj.id+\"blend\"}> {blendRegion()} </TableCell>\r\n            <TableCell style={bStyle(pj.edgeBlendingMarker, 'Off')}key={pj.id+'blendmarker'}>{pj.edgeBlendingMarker}</TableCell>\r\n            <TableCell style={bStyle(pj.testPattren, 'Off')}key={pj.id+'test'}>{pj.testPattren}</TableCell>\r\n            <TableCell style={bStyle(pj.lampStatus, 'Lamp On')} key={pj.id+'lamp'}>{pj.lampStatus}</TableCell>\r\n            <TableCell style={bStyle(pj.hdmiResolution,'1920x1200p')} key={pj.id+'hdmi'}>{pj.hdmiResolution}/{pj.hmdiSignalLevel}</TableCell>\r\n            <TableCell style={bStyle(pj.inputSignalName_Main,'1920x1200/60RB')} key={pj.id+'signal_name_main'}>{pj.inputSignalName_Main}</TableCell>\r\n            <TableCell style={bStyle()} key={pj.id + 'last'}>{time}</TableCell>\r\n        </TableRow>\r\n\r\n    )\r\n}\r\n\r\nexport default PJ\r\n\r\n//<Button className='PJ' style={{padding:'5px', margin:'5px'}} variant=\"outlined\" color=\"primary\" key={pj} >{pj}</Button>\r\n/*\r\n<TableCell style={style()}key={pj.id+'id'}>{pj.id}</TableCell>\r\n<TableCell key={pj.id+'shutter'}>{pj.shutter+''}</TableCell>\r\n<TableCell key={pj.id+'power'}>{pj.power+''}</TableCell>\r\n<TableCell key={pj.id+'online'}>{pj.online+''}</TableCell>\r\n<TableCell key={pj.id+'last'}>{(Date.now()-pj.lastSeen)/1000}</TableCell>\r\n*/","import PJ from \"./PJ\"\r\nimport * as C from '../util/constants'\r\nimport { Paper, makeStyles, Table, TableBody, TableCell, TableContainer, TableHead, TableRow} from '@material-ui/core'\r\nimport { prefres } from \"../prefrences\"\r\nimport { CSSProperties } from \"react\"\r\ninterface Programmer_Props{\r\n    selected: number[],\r\n    active: number[],\r\n    world: number[],\r\n    prefs: prefres,\r\n    status: C.RIG_STATUS,\r\n    pjs: Record<number, C.PJ_OBJ>,\r\n    handleTableSelect: (id:number)=> void\r\n}\r\nconst useStyles = makeStyles({\r\n    table:{\r\n        minWidth:300,\r\n        maxHeight:400\r\n    }\r\n})\r\nexport default function Programmer(props : Programmer_Props){\r\n    const {active, world, selected, prefs, pjs, status, handleTableSelect} = props\r\n    const classes = useStyles()\r\n    const getPJ=(pjID:number):C.PJ_OBJ=>{\r\n        let pj= pjs[pjID]\r\n        if(!pj){\r\n            return{\r\n                id: pjID,\r\n                online: 'false',\r\n                shutter: 'Unknown',\r\n                power: 'Unknown',\r\n                lastSeen: -1,\r\n                error: 'NOT SEEN',\r\n                lampStatus: 'Unknown',\r\n                edgeBlending: 'Unknown',\r\n                edgeBlendingMarker: 'Unknown',\r\n                testPattren: 'Unknown',\r\n                edgeBlendingLeft: 'Unknown',\r\n                edgeBlendingLower: 'Unknown',\r\n                edgeBlendingRight: 'Unknown',\r\n                edgeBlendingUpper: 'Unknown',\r\n                hdmiResolution: 'Unknown',\r\n                hmdiSignalLevel: 'Unknown',\r\n                osdPostion: 'Unknown',\r\n                inputSignalName_Main: 'Unknown',\r\n                name: 'Unknown'\r\n            }\r\n        }\r\n        return pj\r\n    }\r\n    const getPJs=()=>{\r\n        world.sort()\r\n       \r\n        return world.map(s=>{\r\n            let pj =getPJ(s)\r\n            if((prefs.showOnlySelected&& selected.includes(s)) || !prefs.showOnlySelected){\r\n                return <PJ key={'pj id_'+pj.id} pj={pj} handleTableSelect={handleTableSelect} selected={selected.includes(s)} darkMode={prefs.darkMode} active={active.includes(s)} />\r\n            } \r\n            return <></>\r\n            \r\n        })\r\n    }\r\n    const getStyle=(good = true)=>{\r\n        let s : CSSProperties={\r\n            width: '50',\r\n            textAlign: 'center'\r\n        }\r\n        if(!good)\r\n         s.backgroundColor = prefs.darkMode? 'red': 'red'\r\n        \r\n        return s\r\n    }\r\n    return(\r\n        <TableContainer  key='p-tc' component={Paper}>\r\n            <Table key='p-t' className={classes.table}>\r\n                <TableHead key='p-th'>\r\n                    <TableRow key='p-r'>\r\n                        <TableCell style={getStyle()} key='p_pj'> PJ </TableCell>\r\n                        <TableCell style={getStyle(status.shutter)} key='p_s'> Shutter</TableCell>\r\n                        <TableCell style={getStyle(status.blend)} key='p_b'> Blend</TableCell>\r\n                        <TableCell style={getStyle(status.blendMarker)} key='p_bm'> Blend Marker</TableCell>\r\n                        <TableCell style={getStyle(status.testPattren)} key='p_test'> Test Pattern</TableCell>\r\n                        <TableCell style={getStyle(status.lampStatus)} key='p_lamp'> Lamp Status</TableCell>\r\n                        <TableCell style={getStyle(status.hdmiInput)} key='p_hdmi'> HDMI Input</TableCell>\r\n                        <TableCell style={getStyle(status.signalName)} key='p_signal name'> Signal Name</TableCell>\r\n                        <TableCell style={getStyle()}  key='p_ls'> Last Seen</TableCell>\r\n\r\n                    </TableRow>\r\n                </TableHead>\r\n                <TableBody>\r\n                    {getPJs()}\r\n                </TableBody>\r\n            </Table>\r\n        </TableContainer>\r\n       \r\n    )\r\n}\r\n\r\n/*\r\n <Container maxWidth='sm' style={{backgroundColor: 'white', width: '200px', }}>\r\n        <Grid>\r\n            Programmer\r\n            {getSelected()}\r\n        </Grid>\r\n        </Container>\r\n        */","import * as C from './constants'\r\n//const puppeteer = require('puppeteer');\r\n\r\nasync function goFetch(query: string){\r\n    let fetchString = C.pjServer+'api/'+query\r\n   // console.log(fetchString)\r\n    try{\r\n    let res = await fetch(fetchString,{\r\n       mode: 'no-cors'\r\n    })\r\n    \r\n   // console.table(res.body)\r\n    if(res.ok){\r\n      //  console.log(await res.text())\r\n        //return await res.json()\r\n        return await res.json()\r\n    }\r\n}catch(e){\r\n    console.log(e)\r\n}\r\n    \r\n    \r\n}\r\n\r\nexport async function getPJ(target:number) {\r\n    let pj = await goFetch('status/?pj='+target)\r\n    if(pj){\r\n        return pj as unknown as C.PJ_OBJ\r\n    }\r\n    return undefined\r\n    \r\n}\r\n\r\nexport async function getPJs(){\r\n    let pjs = await goFetch('status/?pj=all')\r\n    if(pjs){\r\n        return pjs as unknown as Record<number,C.PJ_OBJ>\r\n    }\r\n}\r\nexport async function getRigStatus(){\r\n   // console.log('Getting Rig Status')\r\n    let status = await goFetch('status/?rigstatus=all')\r\n    if(status){\r\n        return status as unknown as C.RIG_STATUS\r\n    }\r\n}\r\n/*\r\nexport async function setConfig(item: C.ConfigHeaders, value: string){\r\n    await goFetch('config/?'+item+\"=\"+value)\r\n}*/\r\n\r\nexport async function setConfig(query: string){\r\n    await goFetch('config/?'+query)\r\n}\r\nexport async function setter(target: number, command:  C.ControlKeys) {\r\n    console.log('Setting ',target,command)\r\n    await goFetch('set/?pj='+target+'&command='+command)\r\n}\r\nexport async function  powerOff(target: number) {\r\n     return await setter(target, C.ControlCommands.POWER_OFF)\r\n}\r\n\r\nexport async function powerOn(target: number) {\r\n    return await setter(target,C.ControlCommands.POWER_ON)\r\n}\r\n\r\nexport async function shutterOn(target:number){\r\n    console.log('Sutter On')\r\n    return await setter(target,C.ControlCommands.SHUTTER_OPEN)\r\n}\r\nexport async function shutterOff(target:number) {\r\n    return await setter(target,C.ControlCommands.SHUTTER_CLOSED)\r\n}\r\n\r\nexport async function menu(target:number) {\r\n    \r\n}\r\n","import { Dialog, DialogTitle , TextField, Select, MenuItem, InputLabel, Button} from \"@material-ui/core\";\r\nimport React, { CSSProperties, useState } from \"react\";\r\nimport {PROJECTOR_MAKES, PROJECTOR_MAKE, Patch} from '../util/constants'\r\ninterface PatchAdd_Props{\r\n    open: boolean,\r\n    handleClose: ()=>void,\r\n    addPJs: (amount: number, startID: number, baseIP: string, port: number, auth: string, make: PROJECTOR_MAKE)=>void,\r\n    currentPatch: Patch\r\n}\r\n\r\nconst style: CSSProperties={\r\n    width: '90%',margin: 'auto', marginBottom: '5px'\r\n    \r\n}\r\nexport default function PatchAddDialog(props: PatchAdd_Props){\r\n    const {open,handleClose, addPJs, currentPatch}= props\r\n\r\n    const getMaxID=()=>{\r\n        let i = -1\r\n        Object.values(currentPatch).forEach(pj=>{\r\n            if(pj.id> i)\r\n                i = pj.id\r\n        })\r\n        if(i===-1)\r\n            return 100\r\n        \r\n            return i\r\n    }\r\n\r\n    const [make, setMake]= useState<PROJECTOR_MAKE>(PROJECTOR_MAKES.PANASONIC)\r\n    const [Amount, setAmount] = useState({value:1,err:''})\r\n    const [StartID, setID] = useState({value:getMaxID()+1,err:''})\r\n    const [BaseIP, setBaseIP]= useState({value:'192.168.10.',err:''})\r\n    const [UserName, setUserName] = useState('admin1')\r\n    const [Pass, setPass] = useState('')\r\n    const [Port, setPort] = useState({value:1024, err:''})\r\n    //const [hasErrors, setHasErrors]= useState(false)\r\n\r\n   \r\n    const getListItems=()=>{\r\n        return Object.values(PROJECTOR_MAKES).map(key=>{\r\n            //console.log(key)\r\n            return <MenuItem key={key} value={key}>{key}</MenuItem>\r\n        })\r\n    }\r\n    const handleSubmit=()=>{\r\n        let auth = ''\r\n        if(make === PROJECTOR_MAKES.PANASONIC){\r\n            auth = UserName+\":\"+Pass\r\n        }\r\n        addPJs(Amount.value,StartID.value,BaseIP.value,Port.value, auth,make)\r\n    }\r\n    const handleMake=(e: React.ChangeEvent<{value:unknown}>)=>{\r\n        setMake(e.target.value as PROJECTOR_MAKE)\r\n    }\r\n    const getBaseStart=()=>{\r\n        return parseInt(BaseIP.value.split('.')[3])\r\n    }\r\n    const checkOverlap=(startID: number, amount: number)=>{\r\n        for(let i = startID; i<amount+startID; i++){\r\n            let t = false\r\n            Object.values(currentPatch).forEach(pj=>{\r\n                if(pj.id === i)\r\n                    t = true\r\n            })\r\n            if(t)\r\n                return true\r\n        }\r\n        return false\r\n    }\r\n    const handleAmount=(e: React.ChangeEvent<HTMLTextAreaElement | HTMLInputElement>)=>{\r\n        let value = parseInt(e.target.value)\r\n        let err= ''\r\n        if(value<1 || isNaN(value)){\r\n            err='Invalid Number'\r\n        } else if(checkOverlap(StartID.value, value)){\r\n            err='Will Overlap Other IDs'\r\n        }\r\n\r\n        setAmount({value,err})\r\n    }\r\n    \r\n    const handleID=(e: React.ChangeEvent<HTMLTextAreaElement | HTMLInputElement>)=>{\r\n        let value = parseInt(e.target.value)\r\n        let err= ''\r\n        if(value<1 || isNaN(value)){\r\n            err='Invalid Number'\r\n        } else if(getBaseStart()+Amount.value >254){\r\n            err='Will Land Outside Base IP Range'\r\n        } else if(checkOverlap(value, Amount.value)){\r\n            err='Will Overlap Other IDs'\r\n        }\r\n        setID({value,err})\r\n    }\r\n    const handlePort=(e: React.ChangeEvent<HTMLTextAreaElement | HTMLInputElement>)=>{\r\n        let value = parseInt(e.target.value)\r\n        let err= ''\r\n        if(value<1 || isNaN(value)){\r\n            err='Invalid Number'\r\n        }\r\n        setPort({value,err})\r\n    }\r\n    const handleBaseIP=(value: string)=>{\r\n        \r\n        let err= ''\r\n        let s = value.split('.')\r\n        if(s.length===4){\r\n            for(let i =0; i<4;i++){\r\n                if(parseInt(s[i])<0 || parseInt(s[i])>(254-Amount.value)){\r\n                    err ='Invalid Number Range: '+s[i]\r\n                }\r\n            }\r\n        } else{\r\n            err= 'Invalid Number of .'\r\n        }\r\n        console.log(value)\r\n        \r\n        setBaseIP({value,err})\r\n    }\r\n    return( \r\n        <Dialog fullWidth={true} style={{padding: '10%'}} onClose={handleClose} aria-labelledby=\"simple-dialog-title\" open={open}>\r\n        <DialogTitle id=\"simple-dialog-title\">Add Projectors</DialogTitle>\r\n        <InputLabel style={style} id=\"pjMake\">Model</InputLabel>\r\n        <Select style={style} id='pjMake' onChange={handleMake} value={make}>\r\n        {getListItems()}\r\n        </Select>\r\n        <br></br>\r\n        <TextField style={style} error={Amount.err? true: false} variant=\"filled\" type={'number'}label={'Amount'} value={Amount.value} onChange={handleAmount} helperText={Amount.err}> </TextField>\r\n        <br></br>\r\n        <TextField style={style} error={StartID.err? true: false} value={StartID.value} helperText={StartID.err} variant=\"filled\" type={'number'} label={'StartID'} onChange={handleID} > </TextField>\r\n        <br></br>\r\n        <TextField style={style} error={BaseIP.err? true: false} value={BaseIP.value} helperText={BaseIP.err} variant=\"filled\" type={'text'}label={'BaseIP'} onChange={(e)=>handleBaseIP(e.target.value)} > </TextField>\r\n        <br></br>\r\n        <TextField style={style} error={Port.err? true: false} value={Port.value} helperText={Port.err} variant=\"filled\" type={'number'}label={'Port'} onChange={handlePort} > </TextField>\r\n        <br></br>\r\n        <TextField style={style}  value={UserName}  variant=\"filled\" label={'Username'} type={'text'} > </TextField>\r\n        <br></br>\r\n        <TextField style={style}  value={Pass}  variant=\"filled\" label={'Password'}type={'text'} > </TextField>\r\n\r\n        <Button style={{width:'20%', margin: 'auto', marginBottom:'2%'}} disabled={Amount.err || BaseIP.err || StartID.err? true: false} variant=\"contained\" color=\"primary\" onClick={handleSubmit}>Submit</Button>\r\n      </Dialog>\r\n    )\r\n}","import * as C from \"../util/constants\";\r\nimport { DataGrid } from '@material-ui/data-grid';\r\nimport { Button, Paper, makeStyles, ButtonGroup } from '@material-ui/core'\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport { useState } from \"react\";\r\nimport { v4 } from 'uuid'\r\nimport Alert from './Alert'\r\nimport PatchAddDialog from './PatchAddDialog'\r\n\r\ninterface Patch_props {\r\n  patch: C.Patch\r\n  setPatch?: (p: C.Patch) => void\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  fab: {\r\n    position: 'absolute',\r\n    bottom: theme.spacing(2),\r\n    right: theme.spacing(2),\r\n  },\r\n\r\n}));\r\nconst columns = [\r\n  { field: 'uuid', headerName: 'uuid', width: 100, hide: true },\r\n  { field: 'id', headerName: 'ID', width: 90 },\r\n  { field: 'ip_address', headerName: 'IP Address', width: 170 },\r\n  { field: 'port', headerName: 'Port', width: 130 },\r\n  { field: 'auth', headerName: 'Auth', width: 130 },\r\n  { field: 'make', headerName: 'Make', width: 130 },\r\n\r\n];\r\n\r\nexport default function Patch(props: Patch_props) {\r\n  const { patch, setPatch } = props\r\n  const [addWindowOpen, setAddWindowOpen] = useState(false)\r\n  const [editWindowOpen, setEditWindowOpen] = useState(false)\r\n  const [selected, setSelected] = useState<number[]>([])\r\n  const [deleteWindowOpen, setDeleteWindowOpen] = useState(false)\r\n  const classes = useStyles()\r\n  let newPJs: C.Patch = {}\r\n\r\n  const addPJs = (amount: number, startID: number, baseIP: string, port: number, auth: string, make: C.PROJECTOR_MAKE) => {\r\n    setAddWindowOpen(false)\r\n    console.log('Got PJs to make!')\r\n    for (let id = startID; id < amount + startID; id++) {\r\n      let ip_address = baseIP + id\r\n      //console.log('Patch', patch)\r\n      if (Object.values(patch).filter(pj => {\r\n        if (pj.id === id) {\r\n          console.log('Conflicting ID', id);\r\n          return true\r\n        }\r\n        if (pj.ip_address === ip_address) {\r\n          console.log('Conflicting IP', ip_address);\r\n          return true\r\n        }\r\n        return false\r\n      }\r\n      ).length > 0) {\r\n        console.log('Conflicting PJ')\r\n        newPJs[v4()] = { ip_address: '-', port, auth, make, id: 0 }\r\n      } else {\r\n        // console.log('new PJ!')\r\n        newPJs[v4()] = { ip_address, id, port, auth, make }\r\n      }\r\n    }\r\n    //console.log(newPJs)\r\n    let newPatch = Object.assign(patch, newPJs) as C.Patch\r\n    if (newPatch && setPatch) {\r\n      setPatch(newPatch)\r\n    }\r\n  }\r\n  /*\r\n  const getRows = () => {\r\n    return Object.entries(patch).map(e => {\r\n      let pj = e[1]\r\n      //@ts-ignore\r\n      pj.channel = pj.id\r\n      //@ts-ignore\r\n      pj.id = e[0]\r\n\r\n      return pj\r\n\r\n    })\r\n  }\r\n  */\r\n\r\n  const handleDelete = (c: C.ControlKeys) => {\r\n\r\n    let newPatch = Object.assign(patch) as C.Patch\r\n    Object.entries(newPatch).forEach(e => {\r\n      if (selected.includes(e[1].id)) {\r\n        delete newPatch[e[0]]\r\n        let newSelect = Object.assign(selected) as number[]\r\n        delete newSelect[e[1].id]\r\n        setSelected(newSelect)\r\n      }\r\n    })\r\n\r\n\r\n    //const i = Object.assign(newPatch)\r\n    if (newPatch && setPatch) {\r\n      //console.log('Deleting',Object.values(patch).length-Object.values(newPatch).length)\r\n      setPatch(newPatch)\r\n      setSelected([])\r\n    }\r\n\r\n  }\r\n  const getSelectedString = () => {\r\n    let s = ''\r\n    for (let i = 0; i < selected.length; i++) {\r\n      s += selected[i] + ' '\r\n      if (i % 9 === 0) {\r\n        s += '\\r'\r\n      }\r\n    }\r\n    return s\r\n  }\r\n\r\n\r\n\r\n  return (\r\n    <>\r\n      <Paper style={{ height: 700, width: '100%' }}>\r\n        {patch ?\r\n          <DataGrid rows={Object.values(patch)} columns={columns} checkboxSelection selectionModel={selected} onSelectionModelChange={(e) => setSelected(e.selectionModel as number[])} />\r\n          : <></>\r\n        }\r\n\r\n        <ButtonGroup color='primary' className={classes.fab} >\r\n          <Button aria-label=\"add\" onClick={(e) => setAddWindowOpen(true)}> <AddIcon /></Button>\r\n          <Button aria-label=\"edit\" disabled={selected.length < 1} onClick={(e) => setEditWindowOpen(true)}> <EditIcon /></Button>\r\n          <Button aria-label=\"edit\" disabled={selected.length < 1} onClick={(e) => setDeleteWindowOpen(true)}> <DeleteIcon /></Button>\r\n        </ButtonGroup>\r\n\r\n\r\n      </Paper>\r\n      <Alert open={deleteWindowOpen} handleCommand={handleDelete} handleClose={() => setDeleteWindowOpen(false)} command={C.ControlCommands.MENU} header='Delete Selected' message={'Are you srue you want to delete: \\r \\n' + getSelectedString()} ></Alert>\r\n      <PatchAddDialog open={addWindowOpen} handleClose={() => setAddWindowOpen(false)} addPJs={addPJs} currentPatch={patch} />\r\n    </>\r\n  )\r\n}","import { Dialog, AppBar, Toolbar, Typography, IconButton, Button, Paper, Slide, Switch, TextField, FormControlLabel, makeStyles } from \"@material-ui/core\";\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport { useState, forwardRef, useEffect } from \"react\";\r\nimport * as C from \"../util/constants\";\r\nimport { setConfig } from \"../util/getter\";\r\nimport Patch from \"./Patch\";\r\nimport { SocketPatcher } from \"../util/SocketListener\";\r\nimport { Socket } from \"socket.io-client\";\r\n//import { socket } from \"../LoadPage\";\r\nconst useStyles = makeStyles((theme) => ({\r\n  appBar: {\r\n    position: 'relative',\r\n  },\r\n  title: {\r\n    marginLeft: theme.spacing(2),\r\n    flex: 1,\r\n  },\r\n  root: {\r\n    '& .MuiTextField-root': {\r\n      margin: theme.spacing(1),\r\n      width: '25ch',\r\n    },\r\n  },\r\n}));\r\n\r\nconst Transition = forwardRef(function Transition(props, ref) {\r\n  //@ts-ignore\r\n  return (<Slide direction=\"up\" ref={ref} {...props} />);\r\n});\r\n\r\ninterface ConfigDialog_Props {\r\n  open: boolean\r\n  handleClose: () => void\r\n  config: C.Config\r\n  socket: Socket | undefined\r\n}\r\nexport default function ConfigDialog(props: ConfigDialog_Props) {\r\n  const { open, handleClose, config, socket } = props\r\n  const [polling, setPolling] = useState(config.Polling)\r\n  const [pollingInterval, setPollingInterval] = useState(config.Polling_Interval/1000)\r\n  const classes = useStyles();\r\n  const [patch, setPatch] = useState<C.Patch>(config.Patch)\r\n  useEffect(() => {\r\n    setPollingInterval(config.Polling_Interval/1000)\r\n    setPolling(config.Polling)\r\n    setPatch(config.Patch)\r\n  }, [config])\r\n \r\n\r\n  const handleSubmit = (event: any) => {\r\n    event?.preventDefault();\r\n    // console.log(event)\r\n\r\n    let form = document.querySelector('form')\r\n    if (form) {\r\n      const data = new FormData(form);\r\n      let query = ''\r\n      for (var pair of data.entries()) {\r\n      \r\n        let t = pair[0] as C.ConfigHeaders\r\n       \r\n        let v = pair[1].toString()\r\n        switch(t){\r\n          case C.ConfigHeaders.POLLING:\r\n           \r\n            break;\r\n          case C.ConfigHeaders.POLLING_INTERVAL:\r\n            query += t + '=' + pollingInterval*1000 + '&'\r\n            break;\r\n          default:\r\n            query += t + '=' + v + '&'\r\n            break;\r\n        }\r\n\r\n      }\r\n      //Hard adds Polling to ensure it is accounted for\r\n      query += C.ConfigHeaders.POLLING + '=' + polling\r\n      \r\n      setConfig(query)\r\n      if(socket)\r\n        SocketPatcher(socket, patch)\r\n    }\r\n  }\r\n  const handlePollingInterval=(value: number)=>{\r\n    if(value>10){\r\n      setPollingInterval(value)\r\n    }\r\n  }\r\n  const handlePatchUpdate=(p: C.Patch)=>{\r\n    console.log(p)\r\n    setPatch(p)\r\n  }\r\n  return (\r\n    //@ts-ignore\r\n    <Dialog fullScreen open={open} onClose={handleClose} TransitionComponent={Transition}>\r\n\r\n      <form className={classes.root} onSubmit={handleSubmit}>\r\n        <AppBar className={classes.appBar}>\r\n          <Toolbar>\r\n            <IconButton edge=\"start\" color=\"inherit\" onClick={handleClose} aria-label=\"close\">\r\n              <CloseIcon />\r\n            </IconButton>\r\n            <Typography variant=\"h6\" className={classes.title}>\r\n              Server Configuration\r\n            </Typography>\r\n            <Button autoFocus color=\"inherit\" type={'submit'} onClick={handleClose}>\r\n              Save\r\n            </Button>\r\n          </Toolbar>\r\n        </AppBar>\r\n\r\n        <Paper key='config_paper'>\r\n\r\n\r\n\r\n          <TextField key='location' style={{width:'25%'}}label={'Location'} name={C.ConfigHeaders.LOCATION} defaultValue={config.Location} />\r\n\r\n          <FormControlLabel name={C.ConfigHeaders.POLLING} value={polling} labelPlacement=\"top\"\r\n            control={<Switch checked={polling} value={polling} onChange={(e) => setPolling(!polling)} name={C.ConfigHeaders.POLLING} />}\r\n            label=\"Polling\"\r\n          />\r\n\r\n          <TextField key='polling_interval' style={{width:'25%'}} disabled={!polling} type='number' label={'Poll Interval'} onChange={(e)=> handlePollingInterval(parseInt(e.target.value))} name={C.ConfigHeaders.POLLING_INTERVAL} value={pollingInterval} />\r\n        </Paper>\r\n\r\n\r\n        <Paper key='patch'>\r\n          <Patch patch={patch} setPatch={handlePatchUpdate} />\r\n        </Paper>\r\n      </form>\r\n      <span style={{ fontSize: 10 }}>{config.LastUpdated}</span>\r\n    </Dialog>\r\n\r\n  )\r\n}","\r\nimport { Socket } from 'socket.io-client'\r\nimport * as C from './constants'\r\n//import {socket} from '../LoadPage'\r\ntype RIG_STATUS = React.Dispatch<React.SetStateAction<C.RIG_STATUS>>\r\ntype PJS = React.Dispatch<React.SetStateAction<C.PJs>>\r\ntype CONFIG = React.Dispatch<React.SetStateAction<C.Config>>\r\ntype POLLING_PROGRESS = React.Dispatch<React.SetStateAction<number>>\r\n\r\nexport default function SocketListener(\r\n    socket: Socket,\r\n    setStatus: RIG_STATUS,\r\n    setPJs: PJS,\r\n    setConfig: CONFIG,\r\n    setPollingProgress: POLLING_PROGRESS,\r\n) {\r\n   \r\n    socket.on('connected', () => {\r\n        console.log('Connected!')\r\n        // socket.emit('Hello')\r\n    })\r\n    socket.on('Hello', () => {\r\n        //console.log('Hello!')\r\n    })\r\n    socket.on(C.ioCommands.EMITTING_PJS, (pjs: C.PJs) => {\r\n        setPJs(pjs)\r\n        // console.log('Got new PJs!')\r\n    })\r\n    socket.on(C.ioCommands.EMITTING_STATUS, (status: C.RIG_STATUS) => {\r\n        console.log('Status Updated')\r\n        setStatus(status)\r\n    })\r\n    socket.on(C.ioCommands.REQUEST_UPDATE, () => {\r\n        console.log('Requesting Update!')\r\n        socket?.emit(C.ioCommands.REQUESTING_UPDATE)\r\n    })\r\n\r\n    socket.on(C.ioCommands.REQUEST_CONFIG, () => {\r\n        console.log('Requesting Config')\r\n        socket?.emit(C.ioCommands.REQUESTING_CONFIG)\r\n    })\r\n    socket.on(C.ioCommands.EMITTING_CONFIG, (config: C.Config) => {\r\n        console.groupCollapsed('Got New Config')\r\n        console.log('Config', config)\r\n        console.log('Patch', config.Patch)\r\n        console.groupEnd()\r\n        setConfig(config)\r\n        /*\r\n        if(config.Groups[0] && config.Groups[0].group)\r\n            setWorld(config.Groups[0].group)\r\n            */\r\n    })\r\n    socket.on(C.ioCommands.EMITTING_POLLING_PROGRESS, (progress: number) => {\r\n        setPollingProgress(progress)\r\n    })\r\n}\r\n    \r\n\r\n\r\n\r\nexport function SocketPatcher(socket: Socket, patch: C.Patch) {\r\n    socket.emit(C.ioCommands.EMITTING_PATCH, patch)\r\n}   ","\r\nimport { useEffect, useState } from 'react';\r\nimport './App.css';\r\nimport * as C from './util/constants'\r\n//import { getPJ } from './util/getter';\r\n//import PJ from './components/PJ'\r\nimport Numberpad from './components/Numberpad';\r\nimport CommandPad from './components/CommandPad'\r\nimport Worlds from './components/Worlds'\r\nimport {  TextField, Container,  Grid,LinearProgress } from '@material-ui/core'\r\nimport { processCMD } from './util/CMD';\r\nimport Programmer from './components/Programmer';\r\nimport  * as Prefs from './prefrences';\r\nimport SocketListener from './util/SocketListener';\r\nimport ConfigDialog from './components/ConfigDialog';\r\nimport { Socket } from 'socket.io-client';\r\n\r\n\r\n// setSocketConnect(true)\r\n//import {socket}  from './LoadPage'\r\ninterface App_Prps{\r\n  prefs: Prefs.prefres\r\n  openConfig: boolean\r\n  handleCloseConfig: ()=>void\r\n  socket: Socket | undefined\r\n}\r\n\r\n//let socket: Socket | undefined = undefined\r\n\r\nfunction App(Props: App_Prps ) {\r\n  const {prefs,openConfig,handleCloseConfig,socket} = Props\r\n  const [cmd, setCMD] = useState('')\r\n  const [active, setActive] = useState<number[]>([])\r\n  const [activeIndex, setActiveIndex] = useState(-1)\r\n  const [clearPresses, setClearPressed] = useState(0)\r\n  const [selected, setSelected] = useState<number[]>([])\r\n  const [config, setConfig] =useState(C.defaultConfig)\r\n  const [world, setWorld] = useState(0) //Default 0 - All\r\n  const [pjs, setPJs] = useState<C.PJs>({})\r\n  const [pollingProgress, setPollingProgress] = useState(100)\r\n  const [command, setCommand]=useState<C.ControlKeys | undefined>(undefined)\r\n  const [rigStatus, setStatus] = useState<C.RIG_STATUS>({\r\n    online: false,\r\n    power: false,\r\n    shutter: false,\r\n    blendMarker: false,\r\n    blend: false,\r\n    testPattren: false,\r\n    lampStatus: false,\r\n    hdmiInput: false,\r\n    signalName: false\r\n\r\n  })\r\n  \r\n \r\n\r\n  useEffect(() => {\r\n  \r\n   if(socket)\r\n   SocketListener(socket,setStatus, setPJs,setConfig,setPollingProgress)\r\n   \r\n    if(command){\r\n      console.log('Emmiting CMD',command, active)\r\n      socket?.emit(C.ioCommands.EMITTING_CMD,{cmd: command, pjIDs: active})\r\n      if (prefs.clearProgrammerAfterCMD) {\r\n        setActive([])\r\n        setSelected([])\r\n      }\r\n      setCommand(undefined)\r\n    }\r\n    \r\n  \r\n // let i =setInterval(pollPJs,10000)\r\n    //console.log(selected)\r\n    return function cleanup(){\r\n     \r\n     // socket?.disconnect()\r\n      //setSocketConnect(false)\r\n    }\r\n  \r\n   \r\n  },[active,command, prefs,socket])\r\n\r\n\r\n  document.onkeyup = ((e) => {\r\n   // console.log(e)\r\n    let key = e.key\r\n  //  console.log(key)\r\n    if (C.keys.includes(key)) {\r\n      handlePad(key)\r\n      return\r\n    }\r\n    switch (key) {\r\n      case 't':\r\n        handlePad(C.commands.THRU)\r\n        break;\r\n      case 'c':\r\n        handlePad(C.commands.CLEAR)\r\n        break;\r\n      case '=':\r\n        handlePad('+')\r\n        break;\r\n      case 'Backspace':\r\n        handlePad(C.commands.DEL)\r\n        break;\r\n      case 'Enter':\r\n        //processCMD();\r\n        handlePad(C.commands.ENTER)\r\n        break;\r\n      case 'i':\r\n        handleCommand(C.ControlCommands.SHUTTER_CLOSED)\r\n        break;\r\n      case 'o':\r\n        handleCommand(C.ControlCommands.SHUTTER_OPEN)\r\n        break;\r\n      \r\n      case 'ArrowUp':\r\n        handlePad(C.commands.IF_PROG)\r\n        break;\r\n      case 'ArrowRight':\r\n        handlePad(C.commands.NEXT)\r\n        break;\r\n      case 'ArrowLeft':\r\n        handlePad(C.commands.BACK)\r\n        break;\r\n    }\r\n\r\n  })\r\n  \r\n  const handleNext = () => {\r\n    //console.log('Nexting')\r\n    if (selected.length < 1) {\r\n      return\r\n    }\r\n    let i = activeIndex\r\n    if (activeIndex+1 < selected.length) {\r\n      i += 1\r\n    }\r\n    if (activeIndex + 1 >= selected.length) {\r\n      i =0\r\n    }\r\n    let a: number[] = []\r\n    a.push(selected[i])\r\n    setActiveIndex(i)\r\n    setActive(a)\r\n  }\r\n  const handleBack = () => {\r\n    if (selected.length < 1) {\r\n      return\r\n    }\r\n    let i = activeIndex\r\n    if (activeIndex-1 >=0) {\r\n      i -= 1\r\n    }\r\n    if (activeIndex-1 <0) {\r\n      i =selected.length-1\r\n    }\r\n    let a: number[] = []\r\n    a.push(selected[i])\r\n    setActiveIndex(i)\r\n    setActive(a)\r\n  }\r\n  \r\n  const handlePad = (e: string) => {\r\n    //console.log(e)\r\n    if (e === C.commands.CLEAR) {\r\n      setClearPressed((clearPresses + 1))\r\n      //console.log('Clear', clearPresses)\r\n      switch (clearPresses) {\r\n        case 0:\r\n          setCMD('')\r\n          break;\r\n        case 1:\r\n          setActive([])\r\n          setActiveIndex(-1)\r\n          break;\r\n        case 2:\r\n          setSelected([])\r\n          break;\r\n      }\r\n      return\r\n    }\r\n    setClearPressed(0)\r\n    switch (e) {\r\n      case C.commands.DEL:\r\n        //console.log(cmd.slice(-6) === ' THRU ')\r\n        // console.log(cmd.includes('THRU'))\r\n        if (cmd.length >= 6 && cmd.slice(-6) === ' ' + C.commands.THRU + ' ') {\r\n          let t = cmd.slice(0, cmd.length - 6)\r\n          setCMD(t)\r\n        } else {\r\n          setCMD(cmd.slice(0, (cmd.length - 1)))\r\n        }\r\n        break;\r\n      case C.commands.THRU:\r\n        if (cmd.length > 0)\r\n          setCMD(cmd + ' THRU ')\r\n        break;\r\n      case C.commands.ENTER:\r\n        handleCMD()\r\n        break;\r\n      case '-':\r\n        if (cmd[cmd.length - 1] !== ' ') {\r\n          setCMD(cmd + e)\r\n        }\r\n        break\r\n      case C.commands.NEXT:\r\n        handleNext();\r\n        break;\r\n      case C.commands.BACK:\r\n        handleBack()\r\n        break;\r\n      case C.commands.IF_PROG:\r\n        setActive(selected);\r\n        setActiveIndex(-1)\r\n        break;\r\n      default:\r\n      \r\n        setCMD(cmd + e)\r\n       // console.log('setting CMD',cmd)\r\n    }\r\n  //  console.log('CMD',cmd)\r\n  }\r\n  const handleTableSelect=(id:number)=>{\r\n   // let s = [...selected]\r\n    let a = [...active]\r\n    if(a.includes(id)){\r\n      setActive(a.filter(pj=> pj !== id))\r\n    } else{\r\n     \r\n      a.push(id)\r\n      setActive(a)\r\n     // s.push(id)\r\n      //console.log(s)\r\n     // setSelected(s)\r\n    }\r\n  }\r\n\r\n  const handleCMD =() => {\r\n   \r\n    let s = processCMD(cmd, active, getGroup(world))\r\n    finalCMD(s)\r\n    setCMD('')\r\n    \r\n  }\r\n  const finalCMD= (n:number[])=>{\r\n   // console.log(n)\r\n    setActive(n)\r\n    let diffrentPJs: number[] =[]\r\n  //  console.log(n)\r\n    n.forEach(id=>{\r\n      if(!selected.includes(id)){\r\n        diffrentPJs.push(id)\r\n      }\r\n    })\r\n    \r\n    setSelected(diffrentPJs.concat(selected))\r\n    \r\n  }\r\n  const handleCommand=(command: keyof typeof C.ControlCommands)=>{\r\n    handleCMD()\r\n    setCommand(command)\r\n    \r\n  }\r\n  const getGroup=(groupID:string | number)=>{\r\n    let g  = config.Groups[parseInt(groupID.toString())]?.group \r\n    return  g? g :[]\r\n  }\r\n  const handleGroupSelection=(groupID: string)=>{\r\n    let group = getGroup(groupID)\r\n    if(group)\r\n    finalCMD(group)\r\n  }\r\n  const handleWorldSelection=(groupID:string)=>{\r\n    setWorld(parseInt(groupID))\r\n  }\r\n\r\n  const getStatusBar=()=>{\r\n\r\n    if(pollingProgress===100)\r\n     return <LinearProgress style={{width:'99%', margin:'auto'}}  variant=\"determinate\" value={0} />\r\n\r\n     return <LinearProgress style={{width:'99%', margin:'auto'}}  variant=\"determinate\" value={pollingProgress} />\r\n  }\r\n\r\n  return (\r\n    <div className=\"App\">\r\n\r\n      <link rel=\"stylesheet\" href=\"https://fonts.googleapis.com/css?family=Roboto:300,400,500,700&display=swap\" />\r\n      <link rel=\"stylesheet\" href=\"https://fonts.googleapis.com/icon?family=Material+Icons\" />\r\n      {getStatusBar()}\r\n      <Container style={{position: 'relative', bottom:'3px', textAlign:'left', float:'left'}}>\r\n      </Container>\r\n      <Grid container spacing={6} className='inputArea' >\r\n        <Grid item >\r\n          <Numberpad handlePad={handlePad} />\r\n        </Grid>\r\n        <Grid item>\r\n          <CommandPad  handleCommand={handleCommand} />\r\n        </Grid>\r\n      </Grid>\r\n      <TextField\r\n        id=\"cmd\"\r\n\r\n        style={{ margin: 8, width: '90%' }}\r\n        value={cmd}\r\n        helperText=\"Command Line\"\r\n        fullWidth\r\n        margin=\"normal\"\r\n        InputLabelProps={{\r\n          shrink: true,\r\n        }}\r\n        variant=\"outlined\"\r\n        \r\n      />\r\n     \r\n      <Container key='groups_Worlds' style={{width:'80%'}}>\r\n      <Worlds setWorld={handleWorldSelection} groups={config.Groups} name={'Worlds'} selected={world}/>\r\n      <Worlds setWorld={handleGroupSelection} groups={config.Groups} name={'Groups'}/>\r\n      </Container>\r\n      <br key=\"programmer break\"></br>\r\n      <Container key='programmer'>\r\n        <Programmer handleTableSelect={handleTableSelect} key={'pg'} prefs={prefs} world={getGroup(world)} status={rigStatus} selected={selected} active={active} \r\n        pjs={pjs} />\r\n       \r\n       \r\n        <br key='stats break'></br>\r\n      \r\n\r\n      </Container>\r\n      <ConfigDialog socket={socket} open={openConfig} handleClose={()=>handleCloseConfig()} config={config}/>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","\r\nimport Cookies from 'js-cookie'\r\nexport interface prefres{\r\n    darkMode: boolean,\r\n    clearProgrammerAfterCMD: boolean,\r\n    showOnlySelected: boolean\r\n}\r\nconst cookieName= 'prefs'\r\n//const prefersDarkMode = useMediaQuery('(prefers-color-scheme: dark)');\r\nexport const defaultPrefs: prefres={\r\n    darkMode: true, //prefersDarkMode,\r\n    clearProgrammerAfterCMD: false,\r\n    showOnlySelected: false\r\n}\r\n\r\nexport const setCookie=(prefs: prefres)=>{\r\n    Cookies.set(cookieName,prefs)\r\n}\r\nconst getCookie =()=>{\r\n    return Cookies.get(cookieName)\r\n    /*\r\n    let c = Cookies.get(cookieName)\r\n    if(c){\r\n        return JSON.parse(c) \r\n       // return c as unknown as prefres\r\n    } else {\r\n        setCookie(defaultPrefs)\r\n        return defaultPrefs\r\n    }\r\n    */\r\n}\r\n\r\nexport function getPrefrences(darkMode=true):prefres{\r\n    let c = getCookie()\r\n    if(c){\r\n        return JSON.parse(c)\r\n    }else{\r\n        let d = defaultPrefs\r\n        d.darkMode = darkMode\r\n        setCookie(d)\r\n        return d\r\n    }\r\n     \r\n    //return getCookie()\r\n}\r\n\r\n\r\n\r\nexport function setCookie_DarkMode(mode: boolean){\r\n    let c = getPrefrences()\r\n    c.darkMode=mode\r\n    setCookie(c)\r\n\r\n}\r\nexport function setCookie_ClearProgrammerAfterCMD(mode: boolean){\r\n    let c = getPrefrences()\r\n    c.clearProgrammerAfterCMD = mode\r\n    setCookie(c)\r\n}\r\nexport function setCookie_ShowOnlySelected(mode:boolean){\r\n    let c =getPrefrences()\r\n    console.log(mode)\r\n    c['showOnlySelected'] = mode\r\n    setCookie(c)\r\n}\r\n\r\nexport function getDarkMode(){\r\n    return getPrefrences().darkMode\r\n}\r\n\r\nexport function getClearProgrammerAfterCMD(){\r\n    return getPrefrences().clearProgrammerAfterCMD\r\n}\r\nexport function getShowOnlySelected(){\r\n    return getPrefrences().showOnlySelected\r\n}","import { Button, Menu, MenuItem, FormControlLabel, Switch  } from '@material-ui/core'\r\n//import {SettingsIcon} from '@material-ui/icons/Settings';\r\nimport SettingsIcon from \"@material-ui/icons/Settings\";\r\nimport { useState, useRef} from 'react'\r\nimport { prefres } from '../prefrences';\r\nimport * as C from '../util/constants'\r\n\r\n\r\ninterface menu_props {\r\n  handleSettings: (e: prefres) => void,\r\n  prefs: prefres,\r\n  handleOpenConfig: ()=>void\r\n}\r\nexport default function ControlMenu(props: menu_props) {\r\n\r\n // const value = useContext(Settings)\r\n  //console.log(value)\r\n  const { prefs, handleSettings, handleOpenConfig } = props\r\n  const divRef = useRef(null)\r\n\r\n  const [open, setOpen] = useState(false)\r\n  \r\n\r\n  const handleOpen = () => {\r\n    setOpen(true)\r\n\r\n\r\n  }\r\n  const handleClose = (e: C.menuCommands | undefined) => {\r\n    setOpen(false)\r\n  }\r\n\r\n  const handleChange = (e: C.menuCommands) => {\r\n    \r\n    let p = Object.assign({},prefs)\r\n    switch (e) {\r\n      case C.menuCommands.CLEAR_SELECTED_ON_CMD:\r\n        p.clearProgrammerAfterCMD = !prefs.clearProgrammerAfterCMD\r\n        break;\r\n      case C.menuCommands.IF_SELECTED:\r\n        p.showOnlySelected = !prefs.showOnlySelected\r\n        break;\r\n      case C.menuCommands.DARK_MODE:\r\n        p.darkMode = !prefs.darkMode\r\n        break;\r\n    }\r\n    handleSettings(p)\r\n  }\r\n  let button =\r\n    <Button ref={divRef} aria-controls=\"simple-menu\" aria-haspopup=\"true\" onClick={() => handleOpen()}>\r\n      <SettingsIcon />\r\n    </Button>\r\n  if(process.env.NODE_ENV === 'development'){\r\n    document.title = 'PJ Dev'\r\n  }\r\n  return (\r\n    <div>\r\n\r\n      {button}\r\n\r\n\r\n      <Menu\r\n        id=\"simple-menu\"\r\n        keepMounted\r\n        //@ts-ignore\r\n        anchorEl={divRef.current}\r\n        open={open}\r\n        onClose={() => handleClose(undefined)}\r\n      >\r\n        <MenuItem >\r\n          <FormControlLabel\r\n            control={<Switch key={C.menuCommands.CLEAR_SELECTED_ON_CMD} checked={prefs.clearProgrammerAfterCMD}\r\n              onClick={(e) => handleChange(C.menuCommands.CLEAR_SELECTED_ON_CMD)} name=\"clearSelectedOnPress\" />}\r\n            label=\"Clear Programmer On CMD\"\r\n          />\r\n        </MenuItem>\r\n        <MenuItem>\r\n\r\n          <FormControlLabel\r\n            control={<Switch key={C.menuCommands.IF_SELECTED} checked={prefs.showOnlySelected}\r\n              onChange={(e) => handleChange(C.menuCommands.IF_SELECTED)} name=\"showonlyselected\" />}\r\n            label=\"Show Only Selected\"\r\n          />\r\n        </MenuItem>\r\n        <MenuItem>\r\n\r\n          <FormControlLabel\r\n            control={<Switch key={C.menuCommands.DARK_MODE} checked={prefs.darkMode}\r\n              onChange={(e) => handleChange(C.menuCommands.DARK_MODE)} name=\"darkMode\" />}\r\n            label=\"Dark Mode\"\r\n          />\r\n       \r\n        </MenuItem>\r\n        <MenuItem>\r\n        <Button onClick={(e)=>{setOpen(false); handleOpenConfig()}}>Edit Config</Button>\r\n        </MenuItem>\r\n      </Menu>\r\n     \r\n      <span style={{textAlign:'center', fontSize: 10}}> Projector Controler v{process.env.REACT_APP_VERSION}{process.env.NODE_ENV==='development'?' Beta':''}</span>\r\n    </div>\r\n  )\r\n\r\n}","import { CircularProgress } from \"@material-ui/core\";\r\n\r\nexport default function Disconnected(){\r\n    return (\r\n      \r\n            <div style={{width:'100%', textAlign:'center'}} >\r\n     \r\n            <CircularProgress  color=\"secondary\" />\r\n            <p>Can't connect to server</p>\r\n            \r\n            </div>\r\n   \r\n    )\r\n}","import React, { useEffect, useState } from 'react';\r\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\r\nimport { createMuiTheme, createStyles, makeStyles, ThemeProvider, Theme } from '@material-ui/core/styles';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport App from './App';\r\nimport * as Pref from './prefrences';\r\nimport ControlMenu from './components/ControlMenu';\r\nimport socketIOClinet , { Socket }  from 'socket.io-client'\r\nimport { Backdrop } from '@material-ui/core';\r\nimport Disconnected from './components/Disconnected';\r\nexport const Settings = React.createContext(Pref.defaultPrefs)\r\n\r\nexport let socket : (Socket | undefined) = undefined\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    backdrop: {\r\n      zIndex: theme.zIndex.drawer + 1,\r\n      color: '#fff',\r\n    },\r\n  }),\r\n);\r\nexport default function LoadPage() {\r\n    const prefersDarkMode = useMediaQuery('(prefers-color-scheme: dark)');\r\n    // const prefersDarkMode = getDarkMode()  \r\n    const classes = useStyles()\r\n    const [prefres, setPrefs] = useState(Pref.defaultPrefs)\r\n    const [openConfig,setOpenConfig] = useState(false)\r\n    const [socketConnected,setSocketConnected]= useState(false)\r\n    \r\n    useEffect(() => {\r\n      try{\r\n        let s = socketIOClinet()\r\n    \r\n        s.on('connect',()=>{\r\n            socket = s\r\n            setSocketConnected(true)\r\n        })\r\n        s.on('disconnect',()=>{\r\n            socket = undefined\r\n            setSocketConnected(false)\r\n        })\r\n      }catch(e){\r\n\r\n      }\r\n      //  setSocket(socketIOClinet())\r\n        setPrefs(Pref.getPrefrences(prefersDarkMode))\r\n    }, [prefersDarkMode])\r\n\r\n    const theme = createMuiTheme({\r\n        palette: {\r\n            type: prefres.darkMode ? 'dark' : 'light',\r\n        }\r\n    })\r\n   \r\n    const handlePrefs = (p: Pref.prefres) => {\r\n       // console.log(prefres)\r\n        setPrefs(p)\r\n      //  console.log(prefres)\r\n        Pref.setCookie(p)\r\n    }\r\n    return (\r\n        <ThemeProvider theme={theme}>\r\n            <Settings.Provider value={prefres}/>\r\n            <CssBaseline />\r\n            <Backdrop className={classes.backdrop} open={!socketConnected} >\r\n                <Disconnected/>\r\n            </Backdrop>\r\n                <ControlMenu handleOpenConfig={()=> setOpenConfig(true)}handleSettings={handlePrefs} prefs={prefres} />\r\n                <App socket={socket} prefs={prefres} openConfig={openConfig} handleCloseConfig={()=>setOpenConfig(false)}/>\r\n              \r\n                \r\n            \r\n        </ThemeProvider>\r\n    );\r\n}","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n    window.location.hostname === 'localhost' ||\r\n      // [::1] is the IPv6 localhost address.\r\n      window.location.hostname === '[::1]' ||\r\n      // 127.0.0.0/8 are considered localhost for IPv4.\r\n      window.location.hostname.match(\r\n        /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n      )\r\n  );\r\n  \r\n  export function register(config) {\r\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n      // The URL constructor is available in all browsers that support SW.\r\n      const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n      if (publicUrl.origin !== window.location.origin) {\r\n        // Our service worker won't work if PUBLIC_URL is on a different origin\r\n        // from what our page is served on. This might happen if a CDN is used to\r\n        // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n        return;\r\n      }\r\n      window.addEventListener('beforeunload',()=>{\r\n        window.localStorage.setItem('page',{data:document.getElementById('root').innerHTML})\r\n      })\r\n      window.addEventListener('load', () => {\r\n        console.log('SW Worker Loaded!')\r\n        let lastKnown = window.localStorage.getItem('page')\r\n        if(lastKnown){\r\n          console.log('Found Previous State!')\r\n          document.getElementById('root').innerHTML= lastKnown.data\r\n          window.hasRestoredState = true\r\n        }\r\n        window.localStorage.setItem('page',{data:document.getElementById('root').innerHTML})\r\n        const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n  \r\n        if (isLocalhost) {\r\n          // This is running on localhost. Let's check if a service worker still exists or not.\r\n          checkValidServiceWorker(swUrl, config);\r\n  \r\n          // Add some additional logging to localhost, pointing developers to the\r\n          // service worker/PWA documentation.\r\n          navigator.serviceWorker.ready.then(() => {\r\n            console.log(\r\n              'This web app is being served cache-first by a service ' +\r\n                'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n            );\r\n          });\r\n        } else {\r\n          // Is not localhost. Just register service worker\r\n          registerValidSW(swUrl, config);\r\n        }\r\n      });\r\n    }\r\n  }\r\n  \r\n  function registerValidSW(swUrl, config) {\r\n    navigator.serviceWorker\r\n      .register(swUrl)\r\n      .then(registration => {\r\n        registration.onupdatefound = () => {\r\n          const installingWorker = registration.installing;\r\n          if (installingWorker == null) {\r\n            return;\r\n          }\r\n          installingWorker.onstatechange = () => {\r\n            if (installingWorker.state === 'installed') {\r\n              if (navigator.serviceWorker.controller) {\r\n                // At this point, the updated precached content has been fetched,\r\n                // but the previous service worker will still serve the older\r\n                // content until all client tabs are closed.\r\n                console.log(\r\n                  'New content is available and will be used when all ' +\r\n                    'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n                );\r\n  \r\n                // Execute callback\r\n                if (config && config.onUpdate) {\r\n                  config.onUpdate(registration);\r\n                }\r\n              } else {\r\n                // At this point, everything has been precached.\r\n                // It's the perfect time to display a\r\n                // \"Content is cached for offline use.\" message.\r\n                console.log('Content is cached for offline use.');\r\n  \r\n                // Execute callback\r\n                if (config && config.onSuccess) {\r\n                  config.onSuccess(registration);\r\n                }\r\n              }\r\n            }\r\n          };\r\n        };\r\n      })\r\n      .catch(error => {\r\n        console.error('Error during service worker registration:', error);\r\n      });\r\n  }\r\n  \r\n  function checkValidServiceWorker(swUrl, config) {\r\n    // Check if the service worker can be found. If it can't reload the page.\r\n    fetch(swUrl, {\r\n      headers: { 'Service-Worker': 'script' },\r\n    })\r\n      .then(response => {\r\n        // Ensure service worker exists, and that we really are getting a JS file.\r\n        const contentType = response.headers.get('content-type');\r\n        if (\r\n          response.status === 404 ||\r\n          (contentType != null && contentType.indexOf('javascript') === -1)\r\n        ) {\r\n          // No service worker found. Probably a different app. Reload the page.\r\n          navigator.serviceWorker.ready.then(registration => {\r\n            registration.unregister().then(() => {\r\n              window.location.reload();\r\n            });\r\n          });\r\n        } else {\r\n          // Service worker found. Proceed as normal.\r\n          registerValidSW(swUrl, config);\r\n        }\r\n      })\r\n      .catch(() => {\r\n        console.log(\r\n          'No internet connection found. App is running in offline mode.'\r\n        );\r\n      });\r\n  }\r\n  \r\n  export function unregister() {\r\n    if ('serviceWorker' in navigator) {\r\n      navigator.serviceWorker.ready\r\n        .then(registration => {\r\n          registration.unregister();\r\n        })\r\n        .catch(error => {\r\n          console.error(error.message);\r\n        });\r\n    }\r\n  }\r\n  ","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport LoadPage from './LoadPage'\r\nimport * as serviceWorker from './serviceWorker';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nif(window.hasRestoredState){\r\n  ReactDOM.hydrate(\r\n    <React.StrictMode>\r\n \r\n    <LoadPage/>\r\n  \r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n  )\r\n}else {\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n \r\n    <LoadPage/>\r\n  \r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n}\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://cra.link/PWA\r\nserviceWorker.register();\r\n"],"sourceRoot":""}