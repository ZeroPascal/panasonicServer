{"version":3,"sources":["util/constants.ts","components/numberpad.tsx","components/BlendDialog.tsx","components/CommandInterfaces/OSDPostion.tsx","components/CommandInterfaces/Testpattern.tsx","components/CommandInterfaces/BackColor.tsx","components/MenuDialog.tsx","components/Alert.tsx","components/CommandInterfaces/LensCal.tsx","components/LensDialog.tsx","components/CommandInterfaces/Power.tsx","components/CommandInterfaces/Shutter.tsx","components/ProjectorSetupDialog.tsx","components/CommandPad.tsx","util/CMD.ts","components/PJCard.tsx","components/ProgrammerTable.tsx","components/Programmer.tsx","util/getter.ts","components/PatchAddDialog.tsx","components/Patch.tsx","util/UpdateLog.ts","components/About.tsx","components/ConfigDialog.tsx","util/SocketListener.ts","components/InputPopup.tsx","components/Worlds.tsx","components/WorldBox.tsx","App.tsx","prefrences.ts","components/ControlMenu.tsx","components/Disconnected.tsx","LoadPage.tsx","serviceWorker.js","reportWebVitals.js","index.js"],"names":["pjServer","process","ioCommands","commands","menuCommands","THRU","DEL","CLEAR","NEXT","IF_PROG","BACK","ENTER","STORE_GROUP","ControlCommands","PROJECTOR_MAKES","ConfigHeaders","keys","defaultConfig","Patch","Location","LastUpdated","Date","Polling","Polling_Interval","Groups","0","name","group","ButtonStyle","width","height","marginBottom","Numberpad","props","handlePad","getButtons","C","map","key","w","Button","variant","style","margin","padding","touchAction","size","onClick","e","Paper","elevation","className","buttons","groups","i","length","g","slice","push","ButtonGroup","buttonGroups","BlendDialog","open","handleClose","handleCommand","buttonStyle","buttonGroupStyle","justifyContent","textAlign","Dialog","onClose","aria-labelledby","DialogTitle","id","EDGE_BLENDING_ON","EDGE_BLENDING_OFF","EDGE_BLENDING_MARKERS_ON","EDGE_BLENDING_MARKERS_OFF","EDGE_BLENDING_UPPER_ON","EDGE_BLENDING_UPPER_OFF","EDGE_BLENDING_RIGHT_ON","EDGE_BLENDING_RIGHT_OFF","EDGE_BLENDING_LOWER_ON","EDGE_BLENDING_LOWER_OFF","EDGE_BLENDING_LEFT_ON","EDGE_BLENDING_LEFT_OFF","useStyles","makeStyles","theme","formControl","spacing","minWidth","selectEmpty","marginTop","OSDPostion","classes","FormControl","InputLabel","Select","labelId","value","onChange","target","MenuItem","OSD_POSITION_UPPER_LEFT","OSD_POSITION_CENTER_LEFT","OSD_POSITION_LOWER_LEFT","OSD_POSITION_TOP_CENTER","OSD_POSITION_CENTER","OSD_POSITION_LOWER_CENTER","OSD_POSITION_UPPER_RIGHT","OSD_POSITION_LOWER_RIGHT","Testpattern","TEST_PATTERN_OFF","TEST_PATTERN_WHITE","TEST_PATTERN_BLACK","TEST_PATTERN_FOCUS_RED","TEST_PATTERN_FOCUS_WHITE","BackColor","BACK_COLOR_BLUE","BACK_COLOR_BLACK","BACK_COLOR_DEFAULT_LOGO","BACK_COLOR_USER_LOGO","MenuDialog","MENU","MENU_DEFAULT_KEY","MENU_UP_KEY","MENU_LEFT_KEY","MENU_ENTER_KEY","MENU_RIGHT_KEY","MENU_DOWN_KEY","OSD_ON","OSD_OFF","FREEZE_ON","FREEZE_OFF","Alert","command","header","message","handleClick","approval","aria-describedby","DialogContent","DialogContentText","DialogActions","color","autoFocus","LensCal","useState","openHomeAlert","setOpenHomeAlert","openCalAlert","setOpenCalAlert","LENS_POSTION_HOME","shift","setShift","focus","setFocus","zoom","setZoom","getButton","cmd","text","Accordion","expanded","AccordionSummary","expandIcon","aria-controls","Typography","AccordionDetails","Container","marginLeft","paddingLeft","LENS_SHIFT_H_FN","LENS_SHIFT_H_NN","LENS_SHIFT_H_SN","LENS_SHIFT_H_SP","LENS_SHIFT_H_NP","LENS_SHIFT_H_FP","LENS_SHIFT_V_FN","LENS_SHIFT_V_NN","LENS_SHIFT_V_SN","LENS_SHIFT_V_SP","LENS_SHIFT_V_NP","LENS_SHIFT_V_FP","LENS_FOCUS_FN","LENS_FOCUS_NN","LENS_FOCUS_SN","LENS_FOCUS_SP","LENS_FOCUS_NP","LENS_FOCUS_FP","LENS_ZOOM_FN","LENS_ZOOM_NN","LENS_ZOOM_SN","LENS_ZOOM_SP","LENS_ZOOM_NP","LENS_ZOOM_FP","Power","openPowerOnAlert","setOpenPowerOnAlert","openPowerOffAlert","setOpenPowerOffAlert","POWER_OFF","POWER_ON","Shutter","SHUTTER_CLOSED","SHUTTER_OPEN","ProjectorSetup","pj","setName","ID","setID","useEffect","popUp","PROJECTOR_NAME","PROJECTOR_ID","TextField","label","CommandPad","active","pjs","menuOpen","setMenuOpen","blendOpen","setBlendOpen","lensOpen","setLensOpen","pjSetupOpen","setPJSetupOpen","disabled","log","s","console","_world","_groups","parse","cmdArray","parsed","groupEnd","parseThru","GROUP","parseGroup","parseNegative","parsePostive","parseNumber","Number","parseInt","isFinite","error","sub","concat","n","pop","Math","max","negative","x","table","PJCard","pj_tupple","handlePJCard","cardStyle","background","border","selected","ProgrammerTable","TableRow","TableCell","component","scope","shutter","regions","edgeBlendingUpper","edgeBlendingRight","edgeBlendingLower","edgeBlendingLeft","borderStyle","borderColor","edgeBlending","fontSize","edgeBlendingMarker","blendRegion","testPattren","lampStatus","hdmiResolution","hdmiSignalLevel","hdmiVerticalFrequency","osdPostion","root","flexGrow","paper","maxHeight","Programmer","world","prefs","handleTableSelect","getPJs","useMemo","sort","pjList","forEach","online","power","lastSeen","backColor","inputSignalName_Main","showOnlySelected","includes","useMediaQuery","programmerTableView","TableContainer","Table","TableHead","TableBody","Grid","container","item","xs","goFetch","query","a","fetchString","fetch","mode","res","ok","json","PatchAddDialog","addPJs","currentPatch","PANASONIC","make","setMake","err","Amount","setAmount","Object","values","getMaxID","StartID","BaseIP","setBaseIP","UserName","setUserName","Pass","setPass","Port","setPort","checkOverlap","startID","amount","t","fullWidth","type","isNaN","helperText","split","handleBaseIP","auth","fab","position","bottom","right","columns","field","headerName","hide","patch","setPatch","addWindowOpen","setAddWindowOpen","setEditWindowOpen","setSelected","deleteWindowOpen","setDeleteWindowOpen","newPJs","rows","checkboxSelection","selectionModel","onSelectionModelChange","aria-label","c","newPatch","assign","entries","newSelect","getSelectedString","baseIP","port","ip_address","filter","v4","updateLog","version","date","notes","createStyles","bullet","display","transform","menuButton","marginRight","title","pos","About","bull","AppBar","update","Card","CardContent","note","appBar","flex","Transition","forwardRef","ref","Slide","direction","ConfigDialog","config","socket","polling","setPolling","pollingInterval","setPollingInterval","aboutOpen","setAboutOpen","fullScreen","TransitionComponent","onSubmit","event","preventDefault","form","document","querySelector","data","FormData","pair","v","toString","POLLING","POLLING_INTERVAL","setConfig","emit","EMITTING_PATCH","SocketPatcher","Toolbar","paddingBottom","IconButton","edge","LOCATION","defaultValue","FormControlLabel","labelPlacement","control","Switch","checked","p","handleInput","startText","setText","Worlds","setWorld","groupEditCMD","getWorlds","WorldBox","handleWorldSelection","handleGroupSelection","handleGroupConfig","worldOpen","setWorldOpen","groupOpen","setGroupOpen","configOpen","setConfigOpen","divRef","useRef","handleConfigSelect","generalMessage","DELETE_GROUP","LABEL_GROUP","getHelperText","Fade","in","float","current","Menu","keepMounted","anchorEl","removeFocus","activeElement","HTMLElement","blur","App","Props","openConfig","handleCloseConfig","setCMD","undefined","vartiable","setVartiable","setActive","activeIndex","setActiveIndex","clearPresses","setClearPressed","groupNameOpen","setGroupNameOpen","groupName","setGroupName","setPJs","pollingProgress","setPollingProgress","setCommand","setGroupEditCMD","selectedGroup","setSelectedGroup","setLastPJClicked","blendMarker","blend","hdmiInput","signalName","rigStatus","setStatus","on","EMITTING_PJS","EMITTING_STATUS","status","REQUEST_UPDATE","REQUESTING_UPDATE","REQUEST_CONFIG","EMITTING_CONFIG","groupCollapsed","EMITTING_POLLING_PROGRESS","progress","SocketListener","EMITTING_CMD","pjIDs","clearProgrammerAfterCMD","onkeyup","handleCMD","handleNext","handleBack","cmdLine","cmds","trim","processed","newSelected","handleSelected","processCMD","getGroup","finalCMD","groupID","handleGroupAndWorld","UPDATE_GROUP","handleGroupUpdate","rel","href","LinearProgress","InputLabelProps","shrink","cookieName","defaultPrefs","darkMode","setCookie","Cookies","set","getCookie","get","getPrefrences","JSON","d","ControlMenu","handleSettings","handleOpenConfig","setOpen","handleChange","CLEAR_SELECTED_ON_CMD","IF_SELECTED","DARK_MODE","PROGRAMMER_TABLE_VIEW","button","aria-haspopup","Disconnected","CircularProgress","Settings","React","createContext","Pref","socketIOClinet","backdrop","zIndex","drawer","LoadPage","prefersDarkMode","prefres","setPrefs","setOpenConfig","socketConnected","setSocketConnected","createMuiTheme","palette","ThemeProvider","Provider","CssBaseline","Backdrop","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","onUpdate","onSuccess","catch","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById","URL","origin","addEventListener","headers","response","contentType","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.4e3ea00b.chunk.js","sourcesContent":["import { CSSProperties } from \"react\";\r\n\r\n\r\nexport let pjServer = 'http://localhost:3000/'\r\n//export let pjServer = 'http://192.168.10.249:3000/'\r\nif(process.env.NODE_ENV ==='production'){\r\n    pjServer = process.env.REACT_APP_SERVER? process.env.REACT_APP_SERVER : 'localhost:3000';\r\n}\r\n\r\n\r\nexport const fetchSettings: RequestInit = {\r\n    method:'get',\r\n    headers:{\r\n        \r\n    }\r\n   \r\n}\r\n\r\n\r\nexport type PJs = Record<number,PJ_OBJ>\r\n\r\nexport enum ioCommands {\r\n    REQUEST_UPDATE = 'REQUEST_UPDATE',\r\n    REQUESTING_UPDATE = 'REQUESTING_UPDATE',\r\n    EMITTING_PJS = 'EMITTING_PJS',\r\n    EMITTING_STATUS = 'EMITTING_STATUS',\r\n    REQUEST_CONFIG = 'REQUEST_CONFIG',\r\n    EMITTING_CONFIG = 'EMITTING_CONFIG',\r\n    REQUESTING_CONFIG = 'REQUESTING_CONFIG', \r\n    EMITTING_PATCH = 'EMITTING_PATCH',\r\n    EMITTING_POLLING_PROGRESS = 'EMITTING_POLLING_PROGRESS',\r\n    EMITTING_CMD = 'EMITTING_CMD',\r\n    STORE_GROUP = 'STORE_GROUP',\r\n    UPDATE_GROUP = 'UPDATE_GROUP',\r\n    LABEL_GROUP= 'LABEL_GROUP',\r\n    DELETE_GROUP='DELETE_GROUP'\r\n    \r\n}\r\nexport type PJ_OBJ = {\r\n    id: number,\r\n    power: string,\r\n    name: string,\r\n    shutter: string,\r\n    online: string,\r\n    lastSeen: number,\r\n    lampStatus: string,\r\n    edgeBlending: string,\r\n    edgeBlendingMarker: string,\r\n    edgeBlendingUpper: string,\r\n    edgeBlendingLower: string,\r\n    edgeBlendingRight: string,\r\n    edgeBlendingLeft: string,\r\n    testPattren: string,\r\n    backColor: string,\r\n    hdmiSignalLevel: string,\r\n    hdmiResolution: string,\r\n    hdmiVerticalFrequency: string,\r\n    osdPostion: string,\r\n    inputSignalName_Main: string,\r\n    error: string\r\n\r\n}\r\nexport interface RIG_STATUS{\r\n    online: boolean,\r\n    power: boolean,\r\n    shutter: boolean,\r\n    blend: boolean,\r\n    blendMarker: boolean,\r\n    testPattren: boolean,\r\n    lampStatus: boolean,\r\n    hdmiInput:boolean,\r\n    signalName: boolean\r\n}\r\n\r\nexport enum commands{\r\n    THRU = 'THRU',\r\n    DEL = 'DEL',\r\n    CLEAR = 'CLEAR',\r\n    ENTER = 'ENTER',\r\n    NEXT = 'NEXT',\r\n    BACK = 'BACK',\r\n    IF_PROG = 'IF_PROG',\r\n    GROUP = 'GROUP'\r\n\r\n}\r\n\r\nexport enum menuCommands{\r\n    CLEAR_SELECTED_ON_CMD = 'CLEAR_SELECTED_ON_CMD',\r\n    IF_SELECTED = 'IF_SELECTED',\r\n    DARK_MODE = 'DARK_MODE',\r\n    PROGRAMMER_TABLE_VIEW ='PROGRAMMER_TABLE_VIEW'\r\n}\r\nexport const _keys= ['7','8','9','4','5','6','1','2','3','-','0','+',commands.THRU,commands.DEL, commands.CLEAR, commands.NEXT, commands.IF_PROG, commands.BACK, commands.ENTER, ioCommands.STORE_GROUP]\r\n\r\nexport const keys= ['7','8','9','4','5','6','1','2','3','-','0','+',commands.THRU,commands.DEL, commands.CLEAR, commands.NEXT, commands.IF_PROG, commands.BACK, commands.ENTER]\r\n\r\nexport enum ControlCommands {\r\n    POWER_OFF = 'POWER_OFF',\r\n    POWER_ON = 'POWER_ON',\r\n    SHUTTER_CLOSED = 'SHUTTER_CLOSED',\r\n    SHUTTER_OPEN = 'SHUTTER_OPEN',\r\n    EDGE_BLENDING_OFF = 'EDGE_BLENDING_OFF',\r\n    EDGE_BLENDING_ON = 'EDGE_BLENDING_ON',\r\n    EDGE_BLENDING_MARKERS_ON = 'EDGE_BLENDING_MARKERS_ON',\r\n    EDGE_BLENDING_MARKERS_OFF = 'EDGE_BLENDING_MARKERS_OFF',\r\n    TEST_PATTERN_OFF = 'TEST_PATTERN_OFF',\r\n    TEST_PATTERN_WHITE = 'TEST_PATTERN_WHITE',\r\n    TEST_PATTERN_BLACK = 'TEST_PATTERN_BLACK',\r\n    TEST_PATTERN_FOCUS_RED = 'TEST_PATTERN_FOCUS_RED',\r\n    TEST_PATTERN_FOCUS_WHITE= 'TEST_PATTERN_FOCUS_WHITE',\r\n    MENU = 'MENU',\r\n    MENU_DOWN_KEY = 'MENU_DOWN_KEY',\r\n    MENU_UP_KEY = 'MENU_UP_KEY',\r\n    MENU_RIGHT_KEY = 'MENU_RIGHT_KEY',\r\n    MENU_LEFT_KEY = 'MENU_LEFT_KEY',\r\n    MENU_DEFAULT_KEY = 'MENU_DEFAULT_KEY',\r\n    MENU_ENTER_KEY = 'MENU_ENTER_KEY',\r\n    EDGE_BLENDING_UPPER_ON = 'EDGE_BLENDING_UPPER_ON',\r\n    EDGE_BLENDING_UPPER_OFF = 'EDGE_BLENDING_UPPER_OFF',\r\n    EDGE_BLENDING_LOWER_OFF = 'EDGE_BLENDING_LOWER_OFF',\r\n    EDGE_BLENDING_LOWER_ON = 'EDGE_BLENDING_LOWER_ON',\r\n    EDGE_BLENDING_RIGHT_OFF = 'EDGE_BLENDING_RIGHT_OFF',\r\n    EDGE_BLENDING_RIGHT_ON = 'EDGE_BLENDING_RIGHT_ON',\r\n    EDGE_BLENDING_LEFT_OFF = 'EDGE_BLENDING_LEFT_OFF',\r\n    EDGE_BLENDING_LEFT_ON = 'EDGE_BLENDING_LEFT_ON',\r\n    OSD_POSITION_UPPER_LEFT = 'OSD_POSITION_UPPER_LEFT',\r\n    OSD_POSITION_CENTER_LEFT = 'OSD_POSITION_CENTER_LEFT',\r\n    OSD_POSITION_LOWER_LEFT = 'OSD_POSITION_LOWER_LEFT',\r\n    OSD_POSITION_TOP_CENTER = 'OSD_POSITION_TOP_CENTER',\r\n    OSD_POSITION_CENTER = 'OSD_POSITION_CENTER',\r\n    OSD_POSITION_LOWER_CENTER = 'OSD_POSITION_LOWER_CENTER',\r\n    OSD_POSITION_UPPER_RIGHT = 'OSD_POSITION_UPPER_RIGHT',\r\n    OSD_POSITION_CENTER_RIGHT = 'OSD_POSITION_CENTER_RIGHT',\r\n    OSD_POSITION_LOWER_RIGHT = 'OSD_POSITION_LOWER_RIGHT',\r\n    PROJECTOR_NAME = 'PROJECTOR_NAME',\r\n    NUMBER_KEY_0 = 'NUMBER_KEY_0',\r\n    NUMBER_KEY_1 = 'NUMBER_KEY_1',\r\n    NUMBER_KEY_2 = 'NUMBER_KEY_2',\r\n    NUMBER_KEY_3 = 'NUMBER_KEY_3',\r\n    NUMBER_KEY_4 = 'NUMBER_KEY_4',\r\n    NUMBER_KEY_5 = 'NUMBER_KEY_5',\r\n    NUMBER_KEY_6 = 'NUMBER_KEY_6',\r\n    NUMBER_KEY_7 = 'NUMBER_KEY_7',\r\n    NUMBER_KEY_8 = 'NUMBER_KEY_8',\r\n    NUMBER_KEY_9 = 'NUMBER_KEY_9',\r\n    LENS_POSTION_HOME = 'LENS_POSTION_HOME',\r\n    LENS_CALIBRATION = 'LENS_CALIBRATION',\r\n    LENS_SHIFT_H_SP = 'LENS_SHIFT_H_SP',\r\n    LENS_SHIFT_H_SN = 'LENS_SHIFT_H_SN',\r\n    LENS_SHIFT_H_NP = 'LENS_SHIFT_H_NP',\r\n    LENS_SHIFT_H_NN = 'LENS_SHIFT_H_NN',\r\n    LENS_SHIFT_H_FP = 'LENS_SHIFT_H_FP',\r\n    LENS_SHIFT_H_FN = 'LENS_SHIFT_H_FN',\r\n    LENS_SHIFT_V_SP = 'LENS_SHIFT_V_SP',\r\n    LENS_SHIFT_V_SN = 'LENS_SHIFT_V_SN',\r\n    LENS_SHIFT_V_NP = 'LENS_SHIFT_V_NP',\r\n    LENS_SHIFT_V_NN = 'LENS_SHIFT_V_NN',\r\n    LENS_SHIFT_V_FP = 'LENS_SHIFT_V_FP',\r\n    LENS_SHIFT_V_FN = 'LENS_SHIFT_V_FN',\r\n    LENS_FOCUS_SP = 'LENS_FOCUS_SP',\r\n    LENS_FOCUS_SN = 'LENS_FOCUS_SN',\r\n    LENS_FOCUS_NP = 'LENS_FOCUS_NP',\r\n    LENS_FOCUS_NN = 'LENS_FOCUS_NN',\r\n    LENS_FOCUS_FP = 'LENS_FOCUS_FP',\r\n    LENS_FOCUS_FN = 'LENS_FOCUS_FN',\r\n    LENS_ZOOM_SP = 'LENS_ZOOM_SP',\r\n    LENS_ZOOM_SN = 'LENS_ZOOM_SN',\r\n    LENS_ZOOM_NP = 'LENS_ZOOM_NP',\r\n    LENS_ZOOM_NN = 'LENS_ZOOM_NN',\r\n    LENS_ZOOM_FP = 'LENS_ZOOM_FP',\r\n    LENS_ZOOM_FN = 'LENS_ZOOM_FN',\r\n    BACK_COLOR_BLUE = 'BACK_COLOR_BLUE',\r\n    BACK_COLOR_BLACK = 'BACK_COLOR_BLACK',\r\n    BACK_COLOR_USER_LOGO = 'BACK_COLOR_USER_LOGO',\r\n    BACK_COLOR_DEFAULT_LOGO = 'BACK_COLOR_DEFAULT_LOGO',\r\n    PROJECTOR_ID = 'PROJECTOR_ID',\r\n    OSD_ON = 'OSD_ON',\r\n    OSD_OFF = 'OSD_OFF',\r\n    FREEZE_OFF = 'FREEZE_OFF',\r\n    FREEZE_ON = 'FREEZE_ON',\r\n    CEILING_MOUNT_ON ='CEILING_MOUNT_ON',\r\n    CEILING_MOUNT_OFF='CEILING_MOUNT_OFF',\r\n    STANDBY_MODE_NETWORK='STANDBY_MODE_NETWORK',\r\n    AUTO_SHUTDOWN_OFF='AUTO_SHUTDOWN_OFF',\r\n    POWER_HOG_ON='POWER_HOG_ON'\r\n\r\n\r\n}\r\n\r\n\r\nexport type ControlKeys = keyof typeof ControlCommands\r\n\r\nexport enum PROJECTOR_MAKES {\r\n    PANASONIC = 'PANASONIC',\r\n    BARCO = 'BARCO'\r\n}\r\n\r\n\r\n\r\nexport type PROJECTOR_MAKE = keyof typeof PROJECTOR_MAKES\r\n\r\n\r\nexport enum ConfigHeaders{\r\n    LOCATION = 'LOCATION',\r\n    LAST_UPDATED = 'LAST_UPDATED',\r\n    POLLING = 'POLLING',\r\n    POLLING_INTERVAL = 'POLLING_INTERVAL',\r\n    PATCH = 'PATCH'\r\n    \r\n}\r\ninterface Projector{\r\n    ip_address: string,\r\n    port: number,\r\n    auth: string,\r\n    make: keyof typeof PROJECTOR_MAKES,\r\n    id: number\r\n}\r\nexport type Patch = Record<string,Projector>\r\nexport type Group = {name: string, group: number[]}\r\nexport type Groups = Record<number, Group>\r\nexport interface Config {\r\n    Patch: Patch,\r\n    Location: string,\r\n    LastUpdated: string,\r\n    Polling: boolean,\r\n    Polling_Interval: number,\r\n    Groups: Groups\r\n}\r\n\r\n\r\nexport type ConfigKeys = keyof typeof ConfigHeaders\r\nexport const defaultConfig: Config = {\r\n    Patch: {},\r\n    Location: '',\r\n    LastUpdated: Date(),\r\n    Polling: false,\r\n    Polling_Interval: 60000,\r\n    Groups: {0:{name:'All',group:[]}}\r\n}\r\n\r\nexport type HandleCommand = (cmd: ControlKeys, text?: string )=> void\r\n\r\nexport const ButtonStyle: CSSProperties={\r\n\r\n    width: '150px',\r\n    height: '50px',\r\n    marginBottom: 1\r\n\r\n}","import {Button, ButtonGroup, Paper} from '@material-ui/core'\r\nimport './numberpad.css'\r\n\r\nimport * as C from '../util/constants'\r\ninterface numberpad_props{\r\n    handlePad: (e: string)=>void\r\n}\r\nexport default function Numberpad(props:numberpad_props){\r\n    const {handlePad} =props\r\n    \r\n    const getButtons=()=>{\r\n     \r\n        return C.keys.map(key=>{\r\n            let w = key === C.ioCommands.STORE_GROUP? '125px' : '75px'\r\n            return <Button variant=\"contained\" style={{margin: 2, padding: '10px', width: w, touchAction: 'manuplation'}} size={'large'} key={key} onClick={(e)=>handlePad(key)} >{key}</Button>     \r\n        })\r\n    }\r\n\r\n    const buttonGroups=()=>{\r\n        let buttons = getButtons()\r\n        let groups =[]\r\n        let chunk = 3\r\n        for(let i=0; i<=buttons.length-chunk; i+=chunk){\r\n           \r\n            let g = buttons.slice(i,chunk+i)\r\n           \r\n            groups.push(\r\n                <ButtonGroup key={'pad_group'+i}>\r\n                   {g}\r\n                </ButtonGroup>\r\n             \r\n            )\r\n        }\r\n        return groups\r\n    }\r\n    return (\r\n        <Paper style={{touchAction: 'manuplation'}}elevation={1} className='pad'>\r\n            \r\n            {buttonGroups()}\r\n            {getButtons()[C.keys.length-1]}\r\n            \r\n        </Paper>\r\n\r\n    )\r\n}","import { Dialog, DialogTitle, Button, ButtonGroup } from \"@material-ui/core\";\r\nimport { CSSProperties } from \"react\";\r\nimport { ControlKeys, ControlCommands } from '../util/constants'\r\ninterface BlendDialog_Props {\r\n    open: boolean,\r\n    handleClose: () => void,\r\n    handleCommand: (e: ControlKeys) => void\r\n}\r\n\r\nexport default function BlendDialog(props: BlendDialog_Props) {\r\n    const { open, handleClose, handleCommand } = props\r\n    const buttonStyle: CSSProperties = {\r\n        padding: '20px',\r\n        width: '140px'\r\n\r\n       \r\n    }\r\n    const buttonGroupStyle: CSSProperties = {\r\n        justifyContent: 'center',\r\n        textAlign: 'center',\r\n        margin: 'auto'\r\n       \r\n        \r\n    }\r\n    return (\r\n        <Dialog key='blend_dialog'  onClose={handleClose} aria-labelledby=\"simple-dialog-title\" open={open}>\r\n            <DialogTitle style={buttonGroupStyle} key='menu_dialog_title' id=\"simple-dialog-title\">Blending</DialogTitle>\r\n            <div key='blend_div' style={{width:300, justifyContent: 'center', textAlign: 'center'}}>\r\n            <ButtonGroup style={buttonGroupStyle} key='blend_main_keys' variant=\"outlined\">\r\n                <Button style={buttonStyle} key='blend_on' onClick={(e) => handleCommand(ControlCommands.EDGE_BLENDING_ON)} >Edge Blend On</Button>\r\n                <Button style={buttonStyle} key='blend_off' onClick={(e) => handleCommand(ControlCommands.EDGE_BLENDING_OFF)} >Edge Blend Off</Button>\r\n            </ButtonGroup>\r\n\r\n            <br></br>\r\n\r\n            <ButtonGroup style={buttonGroupStyle} key='makers_main_keys' variant=\"outlined\">\r\n                <Button style={buttonStyle} key='markers_on' onClick={(e) => handleCommand(ControlCommands.EDGE_BLENDING_MARKERS_ON)} >Markers On</Button>\r\n                <Button style={buttonStyle} key='markers_off' onClick={(e) => handleCommand(ControlCommands.EDGE_BLENDING_MARKERS_OFF)} >Markers Off</Button>\r\n            </ButtonGroup>\r\n\r\n            <br></br>\r\n\r\n            <ButtonGroup style={buttonGroupStyle} key='upper_keys' variant=\"outlined\">\r\n                <Button style={buttonStyle} key='upper_on' onClick={(e) => handleCommand(ControlCommands.EDGE_BLENDING_UPPER_ON)} >Uppere On</Button>\r\n                <Button style={buttonStyle} key='upper_off' onClick={(e) => handleCommand(ControlCommands.EDGE_BLENDING_UPPER_OFF)} >Uppper Off</Button>\r\n            </ButtonGroup>\r\n\r\n            <ButtonGroup style={buttonGroupStyle} key='right_keys' variant=\"outlined\">\r\n                <Button style={buttonStyle} key='right_on' onClick={(e) => handleCommand(ControlCommands.EDGE_BLENDING_RIGHT_ON)} >Right On</Button>\r\n                <Button style={buttonStyle} key='right_off' onClick={(e) => handleCommand(ControlCommands.EDGE_BLENDING_RIGHT_OFF)} >Right Off</Button>\r\n            </ButtonGroup>\r\n\r\n            <ButtonGroup style={buttonGroupStyle} key='lower_keys' variant=\"outlined\">\r\n                <Button style={buttonStyle} key='lower_on' onClick={(e) => handleCommand(ControlCommands.EDGE_BLENDING_LOWER_ON)} >Lower On</Button>\r\n                <Button style={buttonStyle} key='lower_off' onClick={(e) => handleCommand(ControlCommands.EDGE_BLENDING_LOWER_OFF)} >Lower Off</Button>\r\n            </ButtonGroup>\r\n\r\n            <ButtonGroup style={buttonGroupStyle} key='left_keys' variant=\"outlined\">\r\n                <Button style={buttonStyle} key='left_on' onClick={(e) => handleCommand(ControlCommands.EDGE_BLENDING_LEFT_ON)} >Left On</Button>\r\n                <Button style={buttonStyle} key='left_off' onClick={(e) => handleCommand(ControlCommands.EDGE_BLENDING_LEFT_OFF)} >Left Off</Button>\r\n            </ButtonGroup>\r\n            </div>\r\n        </Dialog>\r\n    );\r\n}","import {ControlKeys, ControlCommands} from '../../util/constants'\r\nimport {FormControl, InputLabel, Select, MenuItem, makeStyles} from '@material-ui/core'\r\n\r\ninterface OSDProps{\r\n    handleCommand: (e: ControlKeys) => void\r\n}\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    formControl: {\r\n      margin: theme.spacing(1),\r\n      minWidth: 120,\r\n    },\r\n    selectEmpty: {\r\n      marginTop: theme.spacing(2),\r\n    },\r\n  }));\r\nexport default function OSDPostion(props: OSDProps){\r\n    const {handleCommand} = props\r\n    const classes = useStyles()\r\n\r\n    return (\r\n        <>\r\n    <FormControl className={classes.formControl}>\r\n    <InputLabel id='osd_position'>OSD Position</InputLabel>\r\n    <Select labelId='osd_position' id='osd_postion'\r\n     value={''} onChange={((e)=> handleCommand(e.target.value as ControlKeys))}>\r\n         <MenuItem value={ControlCommands.OSD_POSITION_UPPER_LEFT}>Upper Left</MenuItem>\r\n         <MenuItem value={ControlCommands.OSD_POSITION_CENTER_LEFT}>Center Left</MenuItem>\r\n         <MenuItem value={ControlCommands.OSD_POSITION_LOWER_LEFT}>Lower Left</MenuItem>\r\n         <MenuItem value={ControlCommands.OSD_POSITION_TOP_CENTER}>Top Center</MenuItem>\r\n         <MenuItem value={ControlCommands.OSD_POSITION_CENTER}>Center</MenuItem>\r\n         <MenuItem value={ControlCommands.OSD_POSITION_LOWER_CENTER}>Lower Center</MenuItem>\r\n         <MenuItem value={ControlCommands.OSD_POSITION_UPPER_RIGHT}>Upper Right</MenuItem>\r\n         <MenuItem value={ControlCommands.OSD_POSITION_LOWER_RIGHT}>Lower Right</MenuItem>\r\n     </Select>\r\n     \r\n</FormControl>\r\n</> )\r\n}","import { ControlKeys, ControlCommands } from '../../util/constants'\r\nimport { FormControl, InputLabel, Select, MenuItem, makeStyles } from '@material-ui/core'\r\n\r\ninterface TestPatterProps {\r\n    handleCommand: (e: ControlKeys) => void\r\n}\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    formControl: {\r\n        margin: theme.spacing(1),\r\n        minWidth: 120,\r\n    },\r\n    selectEmpty: {\r\n        marginTop: theme.spacing(2),\r\n    },\r\n}));\r\nexport default function Testpattern(props: TestPatterProps) {\r\n    const { handleCommand } = props\r\n    const classes = useStyles()\r\n\r\n    return (\r\n        <>\r\n            <FormControl className={classes.formControl}>\r\n                <InputLabel id='test_pattren'>Test Pattren</InputLabel>\r\n                <Select labelId='test_pattren' id='test_pattren_select'\r\n                    value={''} onChange={((e) => handleCommand(e.target.value as ControlKeys))}>\r\n                    <MenuItem value={ControlCommands.TEST_PATTERN_OFF}>Off</MenuItem>\r\n                    <MenuItem value={ControlCommands.TEST_PATTERN_WHITE}>White</MenuItem>\r\n                    <MenuItem value={ControlCommands.TEST_PATTERN_BLACK}>Black</MenuItem>\r\n                    <MenuItem value={ControlCommands.TEST_PATTERN_FOCUS_RED}>Focus Red</MenuItem>\r\n                    <MenuItem value={ControlCommands.TEST_PATTERN_FOCUS_WHITE}>Focus White</MenuItem>\r\n                </Select>\r\n\r\n            </FormControl>\r\n        </>)\r\n}","import {ControlKeys, ControlCommands} from '../../util/constants'\r\nimport {FormControl, InputLabel, Select, MenuItem, makeStyles} from '@material-ui/core'\r\n\r\ninterface Props{\r\n    handleCommand: (e: ControlKeys) => void\r\n}\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    formControl: {\r\n      margin: theme.spacing(1),\r\n      minWidth: 120,\r\n    },\r\n    selectEmpty: {\r\n      marginTop: theme.spacing(2),\r\n    },\r\n  }));\r\nexport default function BackColor(props: Props){\r\n    const {handleCommand} = props\r\n    const classes = useStyles()\r\n\r\n    return (\r\n        <>\r\n    <FormControl className={classes.formControl}>\r\n    <InputLabel id='backcolor'>Back Color</InputLabel>\r\n    <Select labelId='backcolor' id='backcolor'\r\n     value={''} onChange={((e)=> handleCommand(e.target.value as ControlKeys))}>\r\n         <MenuItem value={ControlCommands.BACK_COLOR_BLUE}>Blue</MenuItem>\r\n         <MenuItem value={ControlCommands.BACK_COLOR_BLACK}>Black</MenuItem>\r\n         <MenuItem value={ControlCommands.BACK_COLOR_DEFAULT_LOGO}>Default Logo</MenuItem>\r\n         <MenuItem value={ControlCommands.BACK_COLOR_USER_LOGO}>User Logo</MenuItem>\r\n     </Select>\r\n     \r\n</FormControl>\r\n</> )\r\n}","    import { Dialog, DialogTitle, Button, ButtonGroup} from \"@material-ui/core\";\r\nimport { CSSProperties } from \"react\";\r\nimport { ControlKeys, ControlCommands } from '../util/constants'\r\nimport OSDPostion from \"./CommandInterfaces/OSDPostion\";\r\nimport Testpattern from \"./CommandInterfaces/Testpattern\";\r\nimport BackColor from './CommandInterfaces/BackColor'\r\ninterface MenuDialog_Props {\r\n    open: boolean,\r\n    handleClose: () => void,\r\n    handleCommand: (e: ControlKeys) => void\r\n}\r\n\r\nexport default function MenuDialog(props: MenuDialog_Props) {\r\n    const { open, handleClose, handleCommand } = props\r\n   \r\n    const buttonStyle: CSSProperties = {\r\n        padding: '20px',\r\n        width: '100px',\r\n       \r\n    }\r\n    const buttonGroupStyle: CSSProperties = {\r\n        justifyContent: 'center',\r\n        textAlign: 'center'\r\n        \r\n    }\r\n    return (\r\n        <Dialog key='menu_dialog' onClose={handleClose} aria-labelledby=\"simple-dialog-title\" open={open}>\r\n            <DialogTitle style={buttonGroupStyle} key='menu_dialog_title' id=\"simple-dialog-title\">Menu Commands</DialogTitle>\r\n            <ButtonGroup style={buttonGroupStyle} key='menu_main_keys' variant=\"outlined\">\r\n                <Button style={buttonStyle} key='menu' onClick={(e) => handleCommand(ControlCommands.MENU)} >Menu</Button>\r\n                <Button style={buttonStyle} key='enter' onClick={(e) => handleCommand(ControlCommands.MENU_DEFAULT_KEY)} >Default</Button>\r\n            </ButtonGroup>\r\n\r\n            <br></br>\r\n\r\n            <ButtonGroup style={buttonGroupStyle} key='menu_row1_keys' variant=\"outlined\">\r\n                <Button style={buttonStyle} key='up' onClick={(e) => handleCommand(ControlCommands.MENU_UP_KEY)} >Up</Button>\r\n            </ButtonGroup>\r\n\r\n            <ButtonGroup style={buttonGroupStyle} key='menu_row2_keys' variant=\"outlined\">\r\n                <Button style={buttonStyle} key='left' onClick={(e) => handleCommand(ControlCommands.MENU_LEFT_KEY)} >Left</Button>\r\n                <Button style={buttonStyle} key='enter' onClick={(e) => handleCommand(ControlCommands.MENU_ENTER_KEY)} >Enter</Button>\r\n                <Button style={buttonStyle} key='right' onClick={(e) => handleCommand(ControlCommands.MENU_RIGHT_KEY)} >Right</Button>\r\n            </ButtonGroup>\r\n\r\n            <ButtonGroup style={buttonGroupStyle} key='menu_row3_keys' variant=\"outlined\">\r\n                <Button style={buttonStyle} key='down' onClick={(e) => handleCommand(ControlCommands.MENU_DOWN_KEY)} >Down</Button>\r\n            </ButtonGroup>\r\n\r\n            <ButtonGroup style={buttonGroupStyle} key='menu_row4_keys' variant=\"outlined\">\r\n                <Button style={buttonStyle} key='osd on' onClick={(e)=>handleCommand(ControlCommands.OSD_ON)}>OSD ON</Button>\r\n                <Button style={buttonStyle} key='osd off' onClick={(e)=>handleCommand(ControlCommands.OSD_OFF)}>OSD OFF</Button>\r\n                <Button style={buttonStyle} key='freeze on' onClick={(e)=>handleCommand(ControlCommands.FREEZE_ON)}>Freeze ON</Button>\r\n                <Button style={buttonStyle} key='freeze off' onClick={(e)=>handleCommand(ControlCommands.FREEZE_OFF)}>Freeze Off</Button>\r\n            </ButtonGroup>\r\n\r\n\r\n           <Testpattern handleCommand={handleCommand} />\r\n           <OSDPostion handleCommand={handleCommand}/>\r\n           <BackColor handleCommand={handleCommand}/>\r\n\r\n        </Dialog>\r\n    );\r\n}\r\n\r\n/*\r\n\r\n            <ButtonGroup style={buttonGroupStyle} key='ceiling_mount_keys' variant='outlined'>\r\n                <Button style={buttonStyle} key='ceiling_mount_on' onClick={(e)=>handleCommand(ControlCommands.CEILING_MOUNT_ON)}>Ceiling On</Button>\r\n                <Button style={buttonStyle} key='ceiling_mount_off' onClick={(e)=>handleCommand(ControlCommands.CEILING_MOUNT_OFF)}>Ceiling Off</Button>\r\n            </ButtonGroup>\r\n            <ButtonGroup style={buttonGroupStyle} key='ceiling_mount_keys' variant='outlined'>\r\n                <Button style={buttonStyle} key='power_hog' onClick={(e)=>handleCommand(ControlCommands.POWER_HOG_ON)}>Barco POWER HOG</Button>\r\n               \r\n            </ButtonGroup>\r\n            */","import {Button, Dialog, DialogActions, DialogTitle, DialogContent, DialogContentText } from \"@material-ui/core\";\r\nimport { ControlKeys } from \"../util/constants\";\r\ninterface Alert_Props{\r\n    open: boolean,\r\n    handleCommand: (cmd: ControlKeys)=>void,\r\n    handleClose: ()=>void,\r\n    command: ControlKeys,\r\n    header: string,\r\n    message: string\r\n}\r\nexport default function Alert(props: Alert_Props){\r\n    const {open,handleCommand, command, handleClose, header, message} = props\r\n\r\n    const handleClick=(approval: boolean)=>{\r\n        if(approval){\r\n            handleCommand(command)\r\n        }\r\n        handleClose()\r\n\r\n    }\r\n    return (\r\n        <Dialog\r\n        open={open}\r\n        onClose={handleClose}\r\n        aria-labelledby=\"alert-dialog-title\"\r\n        aria-describedby=\"alert-dialog-description\"\r\n      >\r\n        <DialogTitle id=\"alert-dialog-title\">{header}</DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText id=\"alert-dialog-description\">\r\n            <span style={{width:'50'}}>{message}</span>\r\n          </DialogContentText>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={(e)=>handleClick(false)} color=\"primary\">\r\n            Cancle\r\n          </Button>\r\n          <Button onClick={(e)=>handleClick(true)} color=\"primary\" autoFocus>\r\n            Okay\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n        \r\n    )\r\n}","import { ButtonGroup, Button } from \"@material-ui/core\";\r\nimport { useState } from \"react\";\r\nimport { ControlKeys, ControlCommands, ButtonStyle } from \"../../util/constants\";\r\nimport Alert from \"../Alert\";\r\n\r\ninterface Props{\r\n    handleCommand: (e: ControlKeys) => void\r\n}\r\nexport default function LensCal(props: Props){\r\n    const {handleCommand} = props\r\n    const [openHomeAlert, setOpenHomeAlert]= useState(false)\r\n    const [openCalAlert, setOpenCalAlert]= useState(false)\r\n    return(\r\n        <div style={{margin:'auto'}}>\r\n        <ButtonGroup key='shutters' color=\"primary\" variant=\"outlined\">\r\n        <Button  key='home'  style={ButtonStyle}  onClick={(e) => setOpenHomeAlert(true)} >Lens Home</Button>\r\n        <Button  key='cal' style={ButtonStyle}  onClick={(e) => setOpenCalAlert(true)} >Lens Cal</Button>\r\n    </ButtonGroup>\r\n    <Alert open={openHomeAlert} handleCommand={handleCommand} handleClose={()=>setOpenHomeAlert(false)}\r\n        header='Home Lense' message='Are you sure?' command={ControlCommands.LENS_POSTION_HOME}/>\r\n        <Alert open={openCalAlert} handleCommand={handleCommand} handleClose={()=>setOpenCalAlert(false)}\r\n        header='Cal Lens' message='Are you sure?' command={ControlCommands.LENS_POSTION_HOME}/>\r\n        </div>\r\n    )\r\n}","import { Dialog, DialogTitle, Button, ButtonGroup, Accordion, AccordionSummary, Typography, AccordionDetails, Container } from \"@material-ui/core\";\r\nimport ExpandMore from \"@material-ui/icons/ExpandMore\";\r\nimport { CSSProperties, useState } from \"react\";\r\nimport { ControlKeys, ControlCommands } from '../util/constants'\r\nimport LensCal from \"./CommandInterfaces/LensCal\";\r\ninterface MenuDialog_Props {\r\n    open: boolean,\r\n    handleClose: () => void,\r\n    handleCommand: (e: ControlKeys) => void\r\n}\r\n\r\nexport default function MenuDialog(props: MenuDialog_Props) {\r\n    const { open, handleClose, handleCommand } = props\r\n    const [shift, setShift] =useState(false)\r\n    const [focus, setFocus] = useState(false)\r\n    const [zoom, setZoom] = useState(false)\r\n   \r\n    const buttonStyle: CSSProperties = {\r\n        padding: '20px',\r\n        width: '50px',\r\n        touchAction: 'manipulation'\r\n       \r\n    }\r\n    const buttonGroupStyle: CSSProperties = {\r\n        justifyContent: 'center',\r\n        textAlign: 'center'\r\n        \r\n    }\r\n    const close=()=>{\r\n        setShift(false)\r\n        setZoom(false)\r\n        setFocus(false)\r\n        handleClose()\r\n    }\r\n    const getButton=(cmd: ControlKeys, text: string)=>{\r\n        return <Button style={buttonStyle} key={text} onClick={(e)=>handleCommand(cmd)}>{text}</Button>\r\n    }\r\n    return (\r\n        <Dialog key='lens_dialog' onClose={close} aria-labelledby=\"simple-dialog-title\" open={open}>\r\n            <DialogTitle style={buttonGroupStyle} key='menu_dialog_title' id=\"simple-dialog-title\">Lens Commands</DialogTitle>\r\n            <LensCal handleCommand={handleCommand} />\r\n            <Accordion key=\"shift\" style={{width:'100%'}} expanded={shift} onChange={()=>setShift(!shift)}>\r\n                <AccordionSummary expandIcon={<ExpandMore/>} aria-controls='shift' id='shift-panel' >\r\n                    <Typography> Shift</Typography>\r\n                </AccordionSummary>\r\n                <AccordionDetails>\r\n                    <Container style={{width: '70%', marginLeft: '0', paddingLeft:'0'}}>\r\n            <ButtonGroup style={buttonGroupStyle} key='h_shif' variant=\"outlined\">\r\n            {getButton(ControlCommands.LENS_SHIFT_H_FN, '<<<')}\r\n            {getButton(ControlCommands.LENS_SHIFT_H_NN, '<<')}\r\n            {getButton(ControlCommands.LENS_SHIFT_H_SN, '<')}\r\n                {getButton(ControlCommands.LENS_SHIFT_H_SP, '>')}\r\n                {getButton(ControlCommands.LENS_SHIFT_H_NP, '>>')}\r\n                {getButton(ControlCommands.LENS_SHIFT_H_FP, '>>>')}\r\n            </ButtonGroup>\r\n           \r\n            <br></br>\r\n          \r\n            <ButtonGroup style={buttonGroupStyle} key='v_shift' variant=\"outlined\">\r\n            {getButton(ControlCommands.LENS_SHIFT_V_FN, '^^^')}\r\n            {getButton(ControlCommands.LENS_SHIFT_V_NN, '^^')}\r\n            {getButton(ControlCommands.LENS_SHIFT_V_SN, '^')}\r\n                {getButton(ControlCommands.LENS_SHIFT_V_SP, 'v')}\r\n                {getButton(ControlCommands.LENS_SHIFT_V_NP, 'vv')}\r\n                {getButton(ControlCommands.LENS_SHIFT_V_FP, 'vvv')}\r\n            </ButtonGroup>\r\n            </Container>\r\n            </AccordionDetails>\r\n            </Accordion>\r\n            <br></br>\r\n            <Accordion key=\"shift\" expanded={focus} onChange={()=>setFocus(!focus)}>\r\n                <AccordionSummary expandIcon={<ExpandMore/>} aria-controls='focus' id='focus-panel' >\r\n                    <Typography> Focus</Typography>\r\n                </AccordionSummary>\r\n                <AccordionDetails>\r\n                <Container style={{width: '70%', marginLeft: '0', paddingLeft:'0'}}>\r\n            <ButtonGroup style={buttonGroupStyle} key='foucs' variant=\"outlined\">\r\n            {getButton(ControlCommands.LENS_FOCUS_FN, '<<<\\r')}\r\n            {getButton(ControlCommands.LENS_FOCUS_NN, '<<\\r')}\r\n            {getButton(ControlCommands.LENS_FOCUS_SN, '<\\r')}\r\n            {getButton(ControlCommands.LENS_FOCUS_SP, '>\\r')}\r\n            {getButton(ControlCommands.LENS_FOCUS_NP, '>>\\r')}\r\n            {getButton(ControlCommands.LENS_FOCUS_FP, '>>>\\r')}\r\n            </ButtonGroup>\r\n            </Container>\r\n            </AccordionDetails>\r\n            </Accordion>\r\n            <br></br>\r\n            <Accordion key=\"zoom\" expanded={zoom} onChange={()=>setZoom(!zoom)}>\r\n                <AccordionSummary expandIcon={<ExpandMore/>} aria-controls='zoom' id='zoom-panel' >\r\n                    <Typography> Zoom</Typography>\r\n                </AccordionSummary>\r\n                <AccordionDetails>\r\n                <Container style={{width: '70%', marginLeft: '0', paddingLeft:'0'}}>\r\n            <ButtonGroup style={buttonGroupStyle} key='zoom' variant=\"outlined\">\r\n            {getButton(ControlCommands.LENS_ZOOM_FN, '---')}\r\n            {getButton(ControlCommands.LENS_ZOOM_NN, '--')}\r\n            {getButton(ControlCommands.LENS_ZOOM_SN, '-')}\r\n            {getButton(ControlCommands.LENS_ZOOM_SP, '+')}\r\n            {getButton(ControlCommands.LENS_ZOOM_NP, '++')}\r\n            {getButton(ControlCommands.LENS_ZOOM_FP, '+++')}\r\n            </ButtonGroup>\r\n            </Container>\r\n            </AccordionDetails>\r\n            </Accordion>\r\n\r\n\r\n        </Dialog>\r\n    );\r\n}","import { ButtonGroup, Button } from \"@material-ui/core\";\r\nimport { useState } from \"react\";\r\nimport { ControlKeys, ControlCommands, ButtonStyle } from \"../../util/constants\";\r\nimport Alert from \"../Alert\";\r\n\r\ninterface PowerProps{\r\n    handleCommand: (e: ControlKeys) => void\r\n}\r\nexport default function Power(props: PowerProps){\r\n    const {handleCommand} = props\r\n    const [openPowerOnAlert, setOpenPowerOnAlert]= useState(false)\r\n    const [openPowerOffAlert, setOpenPowerOffAlert]= useState(false)\r\n    return(\r\n        <>\r\n        <ButtonGroup key='shutters' color=\"primary\" variant=\"outlined\">\r\n        <Button  key='power off'  style={ButtonStyle}  onClick={(e) => setOpenPowerOffAlert(true)} >Power Off</Button>\r\n        <Button  key='power on' style={ButtonStyle}  onClick={(e) => setOpenPowerOnAlert(true)} >Power On</Button>\r\n    </ButtonGroup>\r\n    <Alert open={openPowerOffAlert} handleCommand={handleCommand} handleClose={()=>setOpenPowerOffAlert(false)}\r\n        header='Power Off' message='Are you sure?' command={ControlCommands.POWER_OFF}/>\r\n        <Alert open={openPowerOnAlert} handleCommand={handleCommand} handleClose={()=>setOpenPowerOnAlert(false)}\r\n        header='Power On' message='Are you sure?' command={ControlCommands.POWER_ON}/>\r\n        </>\r\n    )\r\n}","import { ButtonGroup, Button } from \"@material-ui/core\"\r\nimport { ControlKeys, ControlCommands, ButtonStyle } from \"../../util/constants\"\r\n\r\ninterface ShutterProps{\r\n    handleCommand: (e: ControlKeys) => void\r\n}\r\nexport default function Shutter(props: ShutterProps){\r\n    const {handleCommand} = props\r\n    return (\r\n        <ButtonGroup key='power' color=\"primary\" variant=\"outlined\">\r\n        <Button  key='shutter_on' style={ButtonStyle} onClick={(e) => handleCommand(ControlCommands.SHUTTER_CLOSED)} >Sutter Closed (i)</Button>\r\n        <Button  key='sutter_off' style={ButtonStyle}  onClick={(e) => handleCommand(ControlCommands.SHUTTER_OPEN)} >Shutter Open (o)</Button>\r\n        </ButtonGroup>\r\n    )\r\n}","import { Dialog, DialogTitle, Button, TextField, Container } from \"@material-ui/core\";\r\nimport { CSSProperties, useState, useEffect } from \"react\";\r\nimport { ControlKeys, ControlCommands, HandleCommand, PJ_OBJ } from '../util/constants'\r\ninterface Props {\r\n    open: boolean,\r\n    handleClose: () => void,\r\n    handleCommand: HandleCommand\r\n    pj: PJ_OBJ\r\n}\r\n\r\nexport default function ProjectorSetup(props: Props) {\r\n    const { open, handleClose, handleCommand, pj } = props\r\n    const [name, setName] = useState( '' )\r\n    const [ID, setID] = useState('')\r\n    const buttonStyle: CSSProperties = {\r\n        padding: '20px',\r\n        width: '100px',\r\n        margin: 'auto'\r\n       \r\n    }\r\n    const buttonGroupStyle: CSSProperties = {\r\n        justifyContent: 'center',\r\n        textAlign: 'center'\r\n        \r\n    }\r\n\r\n    useEffect(()=>{\r\n        if(pj && pj.name){\r\n            setName(pj.name)\r\n        }\r\n    },[pj])\r\n\r\n\r\n    const handleClick=(cmd: ControlKeys)=>{\r\n        switch (cmd){\r\n            case ControlCommands.PROJECTOR_NAME:\r\n                handleCommand(cmd, name)\r\n                break\r\n            case ControlCommands.PROJECTOR_ID:\r\n                handleCommand(cmd, ID)\r\n                break;\r\n        }\r\n       \r\n        handleClose()\r\n    }\r\n    \r\n    const getButton=(cmd: ControlKeys, text: string, popUp: boolean)=>{\r\n\r\n        return <Button style={buttonStyle} key={text} onClick={(e)=>handleClick(cmd)}>{text}</Button>\r\n    }\r\n    return (\r\n        <Dialog key='setup_dialog' onClose={handleClose} aria-labelledby=\"simple-dialog-title\" open={open}>\r\n            <DialogTitle style={buttonGroupStyle} key='menu_dialog_title' id=\"simple-dialog-title\">PJ Setup</DialogTitle>\r\n           \r\n        <Container key='name'>    \r\n            <TextField key='pj_name_input' label='PJ Name' value={name} onChange={(e)=>setName(e.target.value)}></TextField>\r\n            {getButton(ControlCommands.PROJECTOR_NAME, 'Store Name', true)}\r\n        </Container>    \r\n        <Container key='id'>\r\n            <TextField key='pj_id_input' label='PJ Input' value={ID} onChange={(e)=>setID(e.target.value)}></TextField>\r\n            {getButton(ControlCommands.PROJECTOR_ID, 'Store ID', true)}\r\n        </Container>\r\n\r\n        </Dialog>\r\n    );\r\n}","import { Button, Paper, ButtonGroup, } from \"@material-ui/core\";\r\nimport {useState} from 'react'\r\nimport { ButtonStyle, HandleCommand, PJs} from \"../util/constants\";\r\nimport BlendDialog from \"./BlendDialog\";\r\nimport MenuDialog from './MenuDialog'\r\nimport LensDialog from './LensDialog'\r\nimport Power from './CommandInterfaces/Power'\r\nimport Shutter from \"./CommandInterfaces/Shutter\";\r\nimport ProjectorSetupDialog from \"./ProjectorSetupDialog\";\r\nimport { useEffect } from \"react\";\r\n\r\ninterface command_props{\r\n    handleCommand: HandleCommand\r\n    active: number[]\r\n    pjs: PJs\r\n}\r\nexport default function CommandPad(props:command_props){\r\n    const {handleCommand, active, pjs } = props\r\n    const [menuOpen, setMenuOpen] = useState(false)\r\n    const [blendOpen, setBlendOpen] = useState(false)\r\n    const [lensOpen,setLensOpen] = useState(false)\r\n    const [pjSetupOpen,setPJSetupOpen] =useState(false)\r\n\r\n    useEffect(()=>{\r\n        if(active.length!==1 || !pjs[active[0]]){\r\n            setPJSetupOpen(false)\r\n        }\r\n    },[active, pjs])\r\n    \r\n    const getPJSetup=()=>{\r\n        if(active.length===1)\r\n            return (<Button key='pj_setup' variant=\"contained\"  style={ButtonStyle} onClick={((e)=>setPJSetupOpen(!pjSetupOpen))}>PJ Setup</Button>)\r\n        \r\n            return (<Button key='pj_setup' variant=\"contained\" disabled style={ButtonStyle} onClick={((e)=>setPJSetupOpen(!pjSetupOpen))}>PJ Setup</Button>)\r\n\r\n    }\r\n    const getPJ=()=>{\r\n        return pjs[active[0]]\r\n    }\r\n    return(\r\n       <>\r\n        <Paper  key='commandKeys' style={{width:'300px'}}>\r\n           <Shutter handleCommand={handleCommand}/>\r\n            <br></br>\r\n           <Power handleCommand={handleCommand}/>\r\n            <ButtonGroup color=\"primary\" variant=\"outlined\">\r\n                <Button color=\"primary\" key='menu' variant=\"contained\" style={ButtonStyle}  onClick={(e) => setMenuOpen(!menuOpen)} >Menu</Button>\r\n                <Button color=\"primary\" key='blend' variant=\"contained\" style={ButtonStyle}  onClick={(e) => setBlendOpen(!blendOpen)} >Blend</Button>\r\n            </ButtonGroup>\r\n            <ButtonGroup color='primary' variant='outlined'>\r\n                <Button key='lens' variant=\"contained\" style={ButtonStyle} onClick={((e)=>setLensOpen(!lensOpen))}>Lens</Button>\r\n                {getPJSetup()}\r\n            </ButtonGroup>\r\n            \r\n            <MenuDialog open={menuOpen} handleClose={()=>setMenuOpen(false)} handleCommand={handleCommand}/>\r\n            <BlendDialog open={blendOpen} handleClose={()=>setBlendOpen(false)} handleCommand={handleCommand}/>\r\n            <LensDialog open={lensOpen} handleClose={()=>setLensOpen(false)} handleCommand={handleCommand} />\r\n            <ProjectorSetupDialog open={pjSetupOpen} handleClose={()=>setPJSetupOpen(false)} pj={getPJ()} handleCommand={handleCommand} />\r\n        </Paper>\r\n       \r\n        </>\r\n    )\r\n}\r\n","\r\nimport * as C from './constants'\r\n\r\n\r\n\r\nconst log=(s:string)=>{\r\n    console.log(s)\r\n}\r\nlet _world : number[] =[]\r\nlet _groups :C.Groups = {}\r\nexport function processCMD(cmdLine: string, selected: number[], world: number[], groups: C.Groups) {\r\n    _world = world\r\n    _groups= groups\r\n    cmdLine = cmdLine.trim()\r\n    let cmds = cmdLine.split(' ')\r\n    console.group('CMDs '+cmds)\r\n  \r\n    let processed = parse(cmds)\r\n    log('Parsed: '+processed)\r\n    processed = handleSelected(processed,selected)\r\n    log('Filtred: '+processed)\r\n\r\n    processed = processed.filter(p=> world.includes(p))\r\n    log('Worlds: '+processed)\r\n    console.groupEnd()\r\n    return processed\r\n}\r\n\r\nfunction handleSelected(processed: number[], selected: number[]):number[]{\r\n    let newSelected = selected\r\n    \r\n    for(let i=0; i<processed.length; i++){\r\n        let p = processed[i]\r\n        if(p<0 && newSelected.includes(p*-1)){\r\n            newSelected = newSelected.filter((n)=> n!== (p*-1))\r\n        } else if(!newSelected.includes(p) && p>0){\r\n            newSelected.push(p)\r\n        }\r\n    }\r\n    return newSelected\r\n    \r\n}\r\n\r\nfunction parse(cmdArray: string[], parsed: number[] = []): number[] {\r\n    \r\n    if (cmdArray.length === 0){ \r\n        //log('Parsing Tree Complete')\r\n        console.groupEnd()\r\n        return parsed;\r\n    }\r\n    console.group('Parsing: '+cmdArray+ ' |  '+parsed)\r\n    switch (cmdArray[0]) {\r\n        case C.commands.THRU:\r\n            log('Parsing THRU')\r\n            return parseThru(cmdArray, parsed)\r\n        case C.commands.GROUP:\r\n            log('Parsing GROUP')\r\n            return parseGroup(cmdArray,parsed)\r\n        case '-':\r\n            log('Parsing Negative')\r\n            return parseNegative(cmdArray, parsed)\r\n        case '+':\r\n            log('Parsing Postive')\r\n            return parsePostive(cmdArray,parsed)\r\n        default:\r\n            log('Parsing Number')\r\n            return parseNumber(cmdArray, parsed)\r\n    }\r\n}\r\nfunction parseNumber(cmdArray: string[], parsed: number[]): number[] {\r\n    if (!cmdArray) return []\r\n    let i = Number.parseInt(cmdArray[0])\r\n    \r\n    if (isFinite(i)) {\r\n        parsed.push(i)\r\n     //   log('parsedNumber: '+i+' | '+parsed)\r\n        return parse(cmdArray.slice(1), parsed)\r\n    }\r\n    console.error('Invalid Number', i)\r\n    return parsed\r\n\r\n}\r\n\r\nfunction parsePostive(cmdArray:string[], parsed: number[]):number[]{\r\n    if(!cmdArray) return []\r\n    let i = 1\r\n  //  log('CMD Lenght: '+cmdArray.length)\r\n  //  log(i+' '+cmdArray[i])\r\n    while(cmdArray[i+1] !=='+' && cmdArray[i+1] !== '-' && i< cmdArray.length){\r\n        i++\r\n      //  log(i+' '+cmdArray[i]+' '+(cmdArray[i]==='+'))\r\n    }\r\n    let slice = []\r\n    if(i===1){\r\n        slice = cmdArray.slice(1,2)\r\n    } else{\r\n        slice = cmdArray.slice(1,i+1)\r\n    }\r\n    log(cmdArray+' | Postive Slice ('+ cmdArray[i] + ' @ '+i+') '+slice)\r\n    let sub = parse(slice)\r\n\r\n    \r\n //   log('Sub '+sub+ ' | '+cmdArray[i+1]+' i:'+ i + ' ' +cmdArray.slice(i+1))\r\n    return parse(cmdArray.slice(i+1),parsed.concat(sub))\r\n}\r\n\r\nfunction parseNegative(cmdArray: string[], parsed: number[]): number[] {\r\n  \r\n        if(!cmdArray) return []\r\n        let i = 1\r\n   //     log('CMD Lenght: '+cmdArray.length)\r\n   //    log(i+' '+cmdArray[i])\r\n        while(cmdArray[i+1] !=='+' && cmdArray[i+1] !== '-' && i< cmdArray.length){\r\n            i++\r\n     //       log(i+' '+cmdArray[i]+' '+(cmdArray[i]==='+'))\r\n        }\r\n        let slice = []\r\n        if(i===1){\r\n            slice = cmdArray.slice(1,2)\r\n        } else{\r\n            slice = cmdArray.slice(1,i+1)\r\n        }\r\n        log(cmdArray+' | Negative Slice ('+ cmdArray[i] + ' @ '+i+') '+slice)\r\n        let sub = parse(slice)\r\n \r\n        for(let n=0; n<sub.length;n++){\r\n            sub[n] = sub[n]*-1\r\n        }\r\n     //   log('Sub '+sub+ ' | '+cmdArray[i+1]+' i:'+ i + ' ' +cmdArray.slice(i+1))\r\n        return parse(cmdArray.slice(i+1),parsed.concat(sub))\r\n\r\n}\r\nfunction parseThru(cmdArray: string[], parsed:number[]):number[] {\r\n    if(cmdArray.length ===0) return []\r\n    let i = parsed.pop()\r\n    if(!i) { \r\n        console.error('Invalid THRU Placement. Number Must Procced THRU CMD')\r\n        return []\r\n    }\r\n  //  log(''+cmdArray.slice(1))\r\n    let n = parse(cmdArray.slice(1,2))[0]\r\n    if(!n){\r\n        n = Math.max(..._world)\r\n        //console.error('Invaild THRU Placement. Number Must Follow THRU CMD', n)\r\n        //return []\r\n    }\r\n    let sub = []\r\n    let negative = 1\r\n    if(i<0){\r\n        i = i*-1\r\n        negative = -1\r\n    }\r\n    if(i<n){\r\n        for(let x = i; x<=n;x++){\r\n            sub.push(x*negative)\r\n        }\r\n    } else{\r\n        for(let x=n; x<=i; x++){\r\n            sub.push(x*negative)\r\n        }\r\n    }\r\n    return parse(cmdArray.slice(2),parsed.concat(sub))\r\n\r\n}\r\nfunction parseGroup(cmdArray: string[], parsed:number[]):number[]{\r\n    if(cmdArray.length < 1) return []\r\n    log(cmdArray+' '+parseInt(cmdArray[0])+'')\r\n    let g = _groups[parseInt(cmdArray[1])]\r\n    console.table(_groups)\r\n    if(!g) return []\r\n    log('Group '+g)\r\n    return parse(cmdArray.slice(3),parsed.concat(g.group))\r\n}","import { Button, } from \"@material-ui/core\";\r\nimport { CSSProperties } from \"react\";\r\n\r\nimport { PJ_OBJ } from \"../util/constants\";\r\n\r\n\r\n\r\ninterface PJCardProps{\r\n    pj_tupple: {pj:PJ_OBJ,selected: boolean, active: boolean}\r\n    handlePJCard: (pjID: number) => void;\r\n}\r\nexport default function PJCard(props:PJCardProps){\r\n    const {pj_tupple, handlePJCard} = props\r\n    let pj = pj_tupple.pj\r\n\r\n    //const classes = useStyles();\r\n\r\n    const cardStyle: CSSProperties={\r\n      \r\n        background: pj_tupple.active? 'gray': 'white',\r\n        border: pj_tupple.selected? 'thick solid cornflowerBlue' : 0,\r\n        color: pj_tupple.active || pj_tupple.selected? 'lightwhite': 'black',   \r\n        width: 80,\r\n        height: 50\r\n    }\r\n    \r\n    return(\r\n       \r\n       <Button variant='contained'  style={cardStyle} onClick={()=>handlePJCard(pj.id)}>{pj.id}\r\n       </Button>\r\n       \r\n       \r\n    )\r\n}\r\n/*\r\n <Card className={classes.root} variant=\"outlined\" style={cardStyle} key={pj.id+'card'}>\r\n            <CardContent>\r\n                <Typography className={classes.title} color={'primary'}>\r\n                    {pj.name? pj.name: ''}\r\n                </Typography>\r\n                <Typography  className={classes.title} color={'primary'}>\r\n                ({pj.id})\r\n                </Typography>\r\n            </CardContent>\r\n        </Card>\r\n        */","import { TableCell, TableRow } from \"@material-ui/core\";\r\nimport { PJ_OBJ } from \"../util/constants\";\r\nimport BorderColorIcon from '@material-ui/icons/BorderColor';\r\n\r\ninterface tableProps{\r\n    pj_tupple:  {pj:PJ_OBJ,selected: boolean, active: boolean}\r\n}\r\n\r\nexport default function ProgrammerTable(props: tableProps){\r\n    const {pj_tupple} = props\r\n    let pj = pj_tupple.pj\r\n\r\n    const blendRegion =()=>{\r\n        let color = ''\r\n        let regions = [pj.edgeBlendingUpper, pj.edgeBlendingRight, pj.edgeBlendingLower, pj.edgeBlendingLeft]\r\n        for(let i=0; i < regions.length; i++){\r\n            switch(regions[i]){\r\n                case 'On':\r\n                    color+= ' green'\r\n                    break;\r\n                case 'Off':\r\n                    color+= ' black'\r\n                    break\r\n                case 'Unknown':\r\n                    color+= ' yellow'\r\n                    break\r\n                default:\r\n                    color+=' red'\r\n            }\r\n        }\r\n      \r\n        return (\r\n            <p key={pj.id+'bp'} style={{ padding: 10,  margin:'auto', textAlign: 'center', borderStyle: 'solid', borderColor: color}}> {pj.edgeBlending}\r\n             <BorderColorIcon key={pj.id+'blend'} style={{fontSize:'15', marginLeft: '5', marginTop: 'auto', color:pj.edgeBlendingMarker==='On'?'red':'gray'}} /></p>\r\n        )\r\n    }\r\n    return (\r\n        <TableRow key={pj.id+'row'}>\r\n            <TableCell key={pj.id+'name'} component='th' scope='row'>\r\n                {pj.name}\r\n            </TableCell>\r\n            <TableCell key={pj.id+'id'}>{pj.id}</TableCell>\r\n            <TableCell key={pj.id+'shutter'}>{pj.shutter}</TableCell>\r\n            <TableCell key={pj.id+'blendregion'}>{blendRegion()}</TableCell>\r\n            <TableCell key={pj.id+'markers'}>{pj.edgeBlendingMarker}</TableCell>\r\n            <TableCell key={pj.id+'test'}>{pj.testPattren}</TableCell>\r\n            <TableCell key={pj.id+'lamp'}>{pj.lampStatus}</TableCell>\r\n            <TableCell key={pj.id+'sig'}>{pj.hdmiResolution}/{pj.hdmiSignalLevel}/{pj.hdmiVerticalFrequency}</TableCell>\r\n            <TableCell key={pj.id+'osd'}>{pj.osdPostion}</TableCell>\r\n\r\n        </TableRow>\r\n    )\r\n}","\r\nimport * as C from '../util/constants'\r\nimport { Paper, makeStyles, Table, TableBody, TableCell, TableContainer, TableHead, TableRow,  Grid, useMediaQuery, GridSize } from '@material-ui/core'\r\nimport { prefres } from \"../prefrences\"\r\nimport {  useMemo, useState } from \"react\"\r\nimport PJCard from \"./PJCard\"\r\nimport ProgrammerTable from \"./ProgrammerTable\"\r\n\r\ninterface Programmer_Props {\r\n    selected: number[],\r\n    active: number[],\r\n    world: number[],\r\n    prefs: prefres,\r\n    status: C.RIG_STATUS,\r\n    pjs: Record<number, C.PJ_OBJ>,\r\n    handleTableSelect: (id: number) => void\r\n}\r\nconst useStyles = makeStyles({\r\n    root: {\r\n        flexGrow: 1,\r\n    },\r\n    paper: {\r\n        height: 140,\r\n        width: 100,\r\n    },\r\n    table: {\r\n        minWidth: 300,\r\n        maxHeight: 400\r\n    },\r\n    \r\n})\r\nexport default function Programmer(props: Programmer_Props) {\r\n    const { active, world, selected, prefs, pjs, handleTableSelect } = props\r\n    const classes = useStyles()\r\n\r\n\r\n    // const pj = useMemo(()=>getPJ(pjID),[pjID])\r\n/*\r\n    const _getPJs = useMemo(() => {\r\n        world.sort()\r\n        // console.log('Programmer Making PJs')\r\n        return world.map(s => {\r\n\r\n            let pj = pjs[s] ? pjs[s] : {\r\n                id: s,\r\n                online: 'false',\r\n                shutter: 'Unknown',\r\n                power: 'Unknown',\r\n                lastSeen: -1,\r\n                error: 'NOT SEEN',\r\n                lampStatus: 'Unknown',\r\n                edgeBlending: 'Unknown',\r\n                edgeBlendingMarker: 'Unknown',\r\n                testPattren: 'Unknown',\r\n                backColor: 'Unknown',\r\n                edgeBlendingLeft: 'Unknown',\r\n                edgeBlendingLower: 'Unknown',\r\n                edgeBlendingRight: 'Unknown',\r\n                edgeBlendingUpper: 'Unknown',\r\n                hdmiResolution: 'Unknown',\r\n                hdmiSignalLevel: 'Unknown',\r\n                hdmiVerticalFrequency: 'Unknown',\r\n                osdPostion: 'Unknown',\r\n                inputSignalName_Main: 'Unknown',\r\n                name: 'Unknown'\r\n            }\r\n            if ((prefs.showOnlySelected && selected.includes(s)) || !prefs.showOnlySelected) {\r\n                return <PJ key={'pj id_' + pj.id} pj={pj} handleTableSelect={handleTableSelect} selected={selected.includes(s)} darkMode={prefs.darkMode} active={active.includes(s)} />\r\n            }\r\n            return <></>\r\n\r\n        })\r\n    }, [world, active, selected, handleTableSelect, prefs.darkMode, prefs.showOnlySelected, pjs])\r\n    */\r\n    const getPJs = useMemo(() => {\r\n      //  console.groupCollapsed('Recomputing PJ List')\r\n       // console.log('Active', active)\r\n       // console.log('Selected', selected)\r\n        console.groupEnd();\r\n        world.sort()\r\n        let pjList: { pj: C.PJ_OBJ, selected: boolean, active: boolean }[] = []\r\n        world.forEach(s => {\r\n            let pj = pjs[s] ? pjs[s] :\r\n                {\r\n                    id: s,\r\n                    online: 'false',\r\n                    shutter: 'Unknown',\r\n                    power: 'Unknown',\r\n                    lastSeen: -1,\r\n                    error: 'NOT SEEN',\r\n                    lampStatus: 'Unknown',\r\n                    edgeBlending: 'Unknown',\r\n                    edgeBlendingMarker: 'Unknown',\r\n                    testPattren: 'Unknown',\r\n                    backColor: 'Unknown',\r\n                    edgeBlendingLeft: 'Unknown',\r\n                    edgeBlendingLower: 'Unknown',\r\n                    edgeBlendingRight: 'Unknown',\r\n                    edgeBlendingUpper: 'Unknown',\r\n                    hdmiResolution: 'Unknown',\r\n                    hdmiSignalLevel: 'Unknown',\r\n                    hdmiVerticalFrequency: 'Unknown',\r\n                    osdPostion: 'Unknown',\r\n                    inputSignalName_Main: 'Unknown',\r\n                    name: 'Unknown'\r\n                }\r\n            if ((prefs.showOnlySelected && selected.includes(s)) || !prefs.showOnlySelected) {\r\n                pjList.push({ pj, selected: selected.includes(s), active: active.includes(s) })\r\n            }\r\n\r\n        })\r\n        return pjList\r\n\r\n    }, [world, pjs, prefs, selected, active])\r\n\r\n    \r\n    const [spacing, setSpacing] = useState( useMediaQuery('(min-width:600px)')? 2 : 0)\r\n    \r\n    const getCards = () => {\r\n       \r\n        return getPJs.map(pj_tupple => {\r\n            return <Grid key={'g_' + pj_tupple.pj.id} item xs={spacing as GridSize} style={{margin: 'auto'}}>\r\n                <PJCard handlePJCard={handleTableSelect} pj_tupple={pj_tupple} />\r\n            </Grid>\r\n        })\r\n    }\r\n\r\n    const getRows = () => {\r\n        return getPJs.map(pj_tupple => {\r\n\r\n            return <ProgrammerTable key={pj_tupple.pj.id+'card'} pj_tupple={pj_tupple} />\r\n        })\r\n    }\r\n    /*\r\n    const getStyle = (good = true) => {\r\n        let s: CSSProperties = {\r\n            width: '50',\r\n            textAlign: 'center'\r\n        }\r\n        if (!good)\r\n            s.backgroundColor = prefs.darkMode ? 'red' : 'red'\r\n\r\n        return s\r\n    }*/\r\n    return (\r\n        <>  {prefs.programmerTableView?\r\n            <TableContainer key='pjtablecon' component={Paper}>\r\n                <Table key='pjtablet' className={classes.table} size='small'>\r\n                    <TableHead key='pjtablehead'>\r\n                        <TableRow key='pjtableheadrow'>\r\n                            <TableCell key='pjtable_name'>Name</TableCell>\r\n                            <TableCell key='pjtable_id'>ID</TableCell>\r\n                            <TableCell key='pjtable_shutter'>Shutter</TableCell>\r\n                            <TableCell key='pjtable_blend'>Blend</TableCell>\r\n                            <TableCell key='pjtable_mark'>Blend Marker</TableCell>\r\n                            <TableCell key='pjtable_test'>Test Pattren</TableCell>\r\n                            <TableCell key='pjtable_lamp'>Lamp</TableCell>\r\n                            <TableCell key='pjtable_hdmi'>HDMI</TableCell>\r\n                            <TableCell key='pjtable_osd'>OSD</TableCell>\r\n                        </TableRow>\r\n                    </TableHead>\r\n                    <TableBody>\r\n                        {getRows()}\r\n                    </TableBody>\r\n                </Table>\r\n            </TableContainer>\r\n        :\r\n\r\n            <Grid key='programmer' className={classes.root} spacing={2} container>\r\n                {getCards()}\r\n            </Grid>\r\n}\r\n        </>\r\n    )\r\n}\r\n/**\r\n<TableContainer key='p-tc' component={Paper}>\r\n<Table key='p-t' className={classes.table}>\r\n    <TableHead key='p-th'>\r\n        <TableRow key='p-r'>\r\n            <TableCell style={getStyle()} key='p_pj'> PJ </TableCell>\r\n            <TableCell style={getStyle(status.shutter)} key='p_s'> Shutter</TableCell>\r\n            <TableCell style={getStyle(status.blend)} key='p_b'> Blend</TableCell>\r\n            <TableCell style={getStyle(status.blendMarker)} key='p_bm'> Blend Marker</TableCell>\r\n            <TableCell style={getStyle(status.testPattren)} key='p_test'> Test Pattern</TableCell>\r\n            <TableCell style={getStyle(status.lampStatus)} key='p_lamp'> Lamp Status</TableCell>\r\n            <TableCell style={getStyle(status.hdmiInput)} key='p_hdmi'> HDMI Input</TableCell>\r\n            <TableCell style={getStyle(status.signalName)} key='p_signal name'> Signal Name</TableCell>\r\n            <TableCell style={getStyle()} key='p_ls'> Last Seen</TableCell>\r\n\r\n        </TableRow>\r\n    </TableHead>\r\n    <TableBody>\r\n        {getPJs}\r\n    </TableBody>\r\n</Table>\r\n</TableContainer>\r\n*/","import * as C from './constants'\r\n//const puppeteer = require('puppeteer');\r\n\r\nasync function goFetch(query: string){\r\n    let fetchString = C.pjServer+'api/'+query\r\n   // console.log(fetchString)\r\n    try{\r\n    let res = await fetch(fetchString,{\r\n       mode: 'no-cors'\r\n    })\r\n    \r\n   // console.table(res.body)\r\n    if(res.ok){\r\n      //  console.log(await res.text())\r\n        //return await res.json()\r\n        return await res.json()\r\n    }\r\n}catch(e){\r\n    console.log(e)\r\n}\r\n    \r\n    \r\n}\r\n\r\nexport async function getPJ(target:number) {\r\n    let pj = await goFetch('status/?pj='+target)\r\n    if(pj){\r\n        return pj as unknown as C.PJ_OBJ\r\n    }\r\n    return undefined\r\n    \r\n}\r\n\r\nexport async function getPJs(){\r\n    let pjs = await goFetch('status/?pj=all')\r\n    if(pjs){\r\n        return pjs as unknown as Record<number,C.PJ_OBJ>\r\n    }\r\n}\r\nexport async function getRigStatus(){\r\n   // console.log('Getting Rig Status')\r\n    let status = await goFetch('status/?rigstatus=all')\r\n    if(status){\r\n        return status as unknown as C.RIG_STATUS\r\n    }\r\n}\r\n/*\r\nexport async function setConfig(item: C.ConfigHeaders, value: string){\r\n    await goFetch('config/?'+item+\"=\"+value)\r\n}*/\r\n\r\nexport async function setConfig(query: string){\r\n    await goFetch('config/?'+query)\r\n}\r\nexport async function setter(target: number, command:  C.ControlKeys) {\r\n    console.log('Setting ',target,command)\r\n    await goFetch('set/?pj='+target+'&command='+command)\r\n}\r\nexport async function  powerOff(target: number) {\r\n     return await setter(target, C.ControlCommands.POWER_OFF)\r\n}\r\n\r\nexport async function powerOn(target: number) {\r\n    return await setter(target,C.ControlCommands.POWER_ON)\r\n}\r\n\r\nexport async function shutterOn(target:number){\r\n    console.log('Sutter On')\r\n    return await setter(target,C.ControlCommands.SHUTTER_OPEN)\r\n}\r\nexport async function shutterOff(target:number) {\r\n    return await setter(target,C.ControlCommands.SHUTTER_CLOSED)\r\n}\r\n\r\nexport async function menu(target:number) {\r\n    \r\n}\r\n","import { Dialog, DialogTitle , TextField, Select, MenuItem, InputLabel, Button} from \"@material-ui/core\";\r\nimport React, { CSSProperties, useState } from \"react\";\r\nimport {PROJECTOR_MAKES, PROJECTOR_MAKE, Patch} from '../util/constants'\r\ninterface PatchAdd_Props{\r\n    open: boolean,\r\n    handleClose: ()=>void,\r\n    addPJs: (amount: number, startID: number, baseIP: string, port: number, auth: string, make: PROJECTOR_MAKE)=>void,\r\n    currentPatch: Patch\r\n}\r\n\r\nconst style: CSSProperties={\r\n    width: '90%',margin: 'auto', marginBottom: '5px'\r\n    \r\n}\r\nexport default function PatchAddDialog(props: PatchAdd_Props){\r\n    const {open,handleClose, addPJs, currentPatch}= props\r\n\r\n    const getMaxID=()=>{\r\n        let i = -1\r\n        Object.values(currentPatch).forEach(pj=>{\r\n            if(pj.id> i)\r\n                i = pj.id\r\n        })\r\n        if(i===-1)\r\n            return 100\r\n        \r\n            return i\r\n    }\r\n\r\n    const [make, setMake]= useState<PROJECTOR_MAKE>(PROJECTOR_MAKES.PANASONIC)\r\n    const [Amount, setAmount] = useState({value:1,err:''})\r\n    const [StartID, setID] = useState({value:getMaxID()+1,err:''})\r\n    const [BaseIP, setBaseIP]= useState({value:'192.168.10.',err:''})\r\n    const [UserName, setUserName] = useState('admin1')\r\n    const [Pass, setPass] = useState('')\r\n    const [Port, setPort] = useState({value:1024, err:''})\r\n    //const [hasErrors, setHasErrors]= useState(false)\r\n\r\n   \r\n    const getListItems=()=>{\r\n        return Object.values(PROJECTOR_MAKES).map(key=>{\r\n            //console.log(key)\r\n            return <MenuItem key={key} value={key}>{key}</MenuItem>\r\n        })\r\n    }\r\n    const handleSubmit=()=>{\r\n        let auth = ''\r\n        if(make === PROJECTOR_MAKES.PANASONIC){\r\n            auth = UserName+\":\"+Pass\r\n        }\r\n        addPJs(Amount.value,StartID.value,BaseIP.value,Port.value, auth,make)\r\n    }\r\n    const handleMake=(e: React.ChangeEvent<{value:unknown}>)=>{\r\n        setMake(e.target.value as PROJECTOR_MAKE)\r\n    }\r\n    const getBaseStart=()=>{\r\n        return parseInt(BaseIP.value.split('.')[3])\r\n    }\r\n    const checkOverlap=(startID: number, amount: number)=>{\r\n        for(let i = startID; i<amount+startID; i++){\r\n            let t = false\r\n            Object.values(currentPatch).forEach(pj=>{\r\n                if(pj.id === i)\r\n                    t = true\r\n            })\r\n            if(t)\r\n                return true\r\n        }\r\n        return false\r\n    }\r\n    const handleAmount=(e: React.ChangeEvent<HTMLTextAreaElement | HTMLInputElement>)=>{\r\n        let value = parseInt(e.target.value)\r\n        let err= ''\r\n        if(value<1 || isNaN(value)){\r\n            err='Invalid Number'\r\n        } else if(checkOverlap(StartID.value, value)){\r\n            err='Will Overlap Other IDs'\r\n        }\r\n\r\n        setAmount({value,err})\r\n    }\r\n    \r\n    const handleID=(e: React.ChangeEvent<HTMLTextAreaElement | HTMLInputElement>)=>{\r\n        let value = parseInt(e.target.value)\r\n        let err= ''\r\n        if(value<1 || isNaN(value)){\r\n            err='Invalid Number'\r\n        } else if(getBaseStart()+Amount.value >254){\r\n            err='Will Land Outside Base IP Range'\r\n        } else if(checkOverlap(value, Amount.value)){\r\n            err='Will Overlap Other IDs'\r\n        }\r\n        setID({value,err})\r\n    }\r\n    const handlePort=(e: React.ChangeEvent<HTMLTextAreaElement | HTMLInputElement>)=>{\r\n        let value = parseInt(e.target.value)\r\n        let err= ''\r\n        if(value<1 || isNaN(value)){\r\n            err='Invalid Number'\r\n        }\r\n        setPort({value,err})\r\n    }\r\n    const handleBaseIP=(value: string)=>{\r\n        \r\n        let err= ''\r\n        let s = value.split('.')\r\n        if(s.length===4){\r\n            for(let i =0; i<4;i++){\r\n                if(parseInt(s[i])<0 || parseInt(s[i])>(254-Amount.value)){\r\n                    err ='Invalid Number Range: '+s[i]\r\n                }\r\n            }\r\n        } else{\r\n            err= 'Invalid Number of .'\r\n        }\r\n        console.log(value)\r\n        \r\n        setBaseIP({value,err})\r\n    }\r\n\r\n    const handlePass=(value: string)=>{\r\n        setPass(value)\r\n    }\r\n    const handleUser=(value:string)=>{\r\n        setUserName(value)\r\n    }\r\n    return( \r\n        <Dialog fullWidth={true} style={{padding: '10%'}} onClose={handleClose} aria-labelledby=\"simple-dialog-title\" open={open}>\r\n        <DialogTitle id=\"simple-dialog-title\">Add Projectors</DialogTitle>\r\n        <InputLabel style={style} id=\"pjMake\">Model</InputLabel>\r\n        <Select style={style} id='pjMake' onChange={handleMake} value={make}>\r\n        {getListItems()}\r\n        </Select>\r\n        <br></br>\r\n        <TextField style={style} error={Amount.err? true: false} variant=\"filled\" type={'number'}label={'Amount'} value={Amount.value} onChange={handleAmount} helperText={Amount.err}> </TextField>\r\n        <br></br>\r\n        <TextField style={style} error={StartID.err? true: false} value={StartID.value} helperText={StartID.err} variant=\"filled\" type={'number'} label={'StartID'} onChange={handleID} > </TextField>\r\n        <br></br>\r\n        <TextField style={style} error={BaseIP.err? true: false} value={BaseIP.value} helperText={BaseIP.err} variant=\"filled\" type={'text'}label={'BaseIP'} onChange={(e)=>handleBaseIP(e.target.value)} > </TextField>\r\n        <br></br>\r\n        <TextField style={style} error={Port.err? true: false} value={Port.value} helperText={Port.err} variant=\"filled\" type={'number'}label={'Port'} onChange={handlePort} > </TextField>\r\n        <br></br>\r\n        <TextField style={style}  value={UserName}  variant=\"filled\" label={'Username'} type={'text'} onChange={(e)=>handleUser(e.target.value)}> </TextField>\r\n        <br></br>\r\n        <TextField style={style}  value={Pass}  variant=\"filled\" label={'Password'}type={'text'} onChange={(e)=>handlePass(e.target.value)}> </TextField>\r\n\r\n        <Button style={{width:'20%', margin: 'auto', marginBottom:'2%'}} disabled={Amount.err || BaseIP.err || StartID.err? true: false} variant=\"contained\" color=\"primary\" onClick={handleSubmit}>Submit</Button>\r\n      </Dialog>\r\n    )\r\n}","import * as C from \"../util/constants\";\r\nimport { DataGrid } from '@material-ui/data-grid';\r\nimport { Button, Paper, makeStyles, ButtonGroup } from '@material-ui/core'\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport { useState } from \"react\";\r\nimport { v4 } from 'uuid'\r\nimport Alert from './Alert'\r\nimport PatchAddDialog from './PatchAddDialog'\r\n\r\ninterface Patch_props {\r\n  patch: C.Patch\r\n  setPatch?: (p: C.Patch) => void\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  fab: {\r\n    position: 'absolute',\r\n    bottom: theme.spacing(2),\r\n    right: theme.spacing(2),\r\n  },\r\n\r\n}));\r\nconst columns = [\r\n  { field: 'uuid', headerName: 'uuid', width: 100, hide: true },\r\n  { field: 'id', headerName: 'ID', width: 90 },\r\n  { field: 'ip_address', headerName: 'IP Address', width: 170 },\r\n  { field: 'port', headerName: 'Port', width: 130 },\r\n  { field: 'auth', headerName: 'Auth', width: 130 },\r\n  { field: 'make', headerName: 'Make', width: 130 },\r\n\r\n];\r\n\r\nexport default function Patch(props: Patch_props) {\r\n  const { patch, setPatch } = props\r\n  const [addWindowOpen, setAddWindowOpen] = useState(false)\r\n  const [editWindowOpen, setEditWindowOpen] = useState(false)\r\n  const [selected, setSelected] = useState<number[]>([])\r\n  const [deleteWindowOpen, setDeleteWindowOpen] = useState(false)\r\n  const classes = useStyles()\r\n  let newPJs: C.Patch = {}\r\n\r\n  const addPJs = (amount: number, startID: number, baseIP: string, port: number, auth: string, make: C.PROJECTOR_MAKE) => {\r\n    setAddWindowOpen(false)\r\n    console.log('Got PJs to make!')\r\n    for (let id = startID; id < amount + startID; id++) {\r\n      let ip_address = baseIP + id\r\n      //console.log('Patch', patch)\r\n      if (Object.values(patch).filter(pj => {\r\n        if (pj.id === id) {\r\n          console.log('Conflicting ID', id);\r\n          return true\r\n        }\r\n        if (pj.ip_address === ip_address) {\r\n          console.log('Conflicting IP', ip_address);\r\n          return true\r\n        }\r\n        return false\r\n      }\r\n      ).length > 0) {\r\n        console.log('Conflicting PJ')\r\n        newPJs[v4()] = { ip_address: '-', port, auth, make, id: 0 }\r\n      } else {\r\n        // console.log('new PJ!')\r\n        newPJs[v4()] = { ip_address, id, port, auth, make }\r\n      }\r\n    }\r\n    //console.log(newPJs)\r\n    let newPatch = Object.assign(patch, newPJs) as C.Patch\r\n    if (newPatch && setPatch) {\r\n      setPatch(newPatch)\r\n    }\r\n  }\r\n  /*\r\n  const getRows = () => {\r\n    return Object.entries(patch).map(e => {\r\n      let pj = e[1]\r\n      //@ts-ignore\r\n      pj.channel = pj.id\r\n      //@ts-ignore\r\n      pj.id = e[0]\r\n\r\n      return pj\r\n\r\n    })\r\n  }\r\n  */\r\n\r\n  const handleDelete = (c: C.ControlKeys) => {\r\n\r\n    let newPatch = Object.assign(patch) as C.Patch\r\n    Object.entries(newPatch).forEach(e => {\r\n      if (selected.includes(e[1].id)) {\r\n        delete newPatch[e[0]]\r\n        let newSelect = Object.assign(selected) as number[]\r\n        delete newSelect[e[1].id]\r\n        setSelected(newSelect)\r\n      }\r\n    })\r\n\r\n\r\n    //const i = Object.assign(newPatch)\r\n    if (newPatch && setPatch) {\r\n      //console.log('Deleting',Object.values(patch).length-Object.values(newPatch).length)\r\n      setPatch(newPatch)\r\n      setSelected([])\r\n    }\r\n\r\n  }\r\n  const getSelectedString = () => {\r\n    let s = ''\r\n    for (let i = 0; i < selected.length; i++) {\r\n      s += selected[i] + ' '\r\n      if (i % 9 === 0) {\r\n        s += '\\r'\r\n      }\r\n    }\r\n    return s\r\n  }\r\n\r\n\r\n\r\n  return (\r\n    <>\r\n      <Paper style={{ height: 700, width: '100%' }}>\r\n        {patch ?\r\n          <DataGrid rows={Object.values(patch)} columns={columns} checkboxSelection selectionModel={selected} onSelectionModelChange={(e) => setSelected(e.selectionModel as number[])} />\r\n          : <></>\r\n        }\r\n\r\n        <ButtonGroup color='primary' className={classes.fab} >\r\n          <Button aria-label=\"add\" onClick={(e) => setAddWindowOpen(true)}> <AddIcon /></Button>\r\n          <Button aria-label=\"edit\" disabled={selected.length < 1} onClick={(e) => setEditWindowOpen(true)}> <EditIcon /></Button>\r\n          <Button aria-label=\"edit\" disabled={selected.length < 1} onClick={(e) => setDeleteWindowOpen(true)}> <DeleteIcon /></Button>\r\n        </ButtonGroup>\r\n\r\n\r\n      </Paper>\r\n      <Alert open={deleteWindowOpen} handleCommand={handleDelete} handleClose={() => setDeleteWindowOpen(false)} command={C.ControlCommands.MENU} header='Delete Selected' message={'Are you srue you want to delete: \\r \\n' + getSelectedString()} ></Alert>\r\n      <PatchAddDialog open={addWindowOpen} handleClose={() => setAddWindowOpen(false)} addPJs={addPJs} currentPatch={patch} />\r\n    </>\r\n  )\r\n}","\r\nexport type update ={version:string,date:string, notes:string[]}\r\nexport type updates =update[]\r\nconst updateLog: updates=[\r\n    {version: '0.1.4.', date: '9/5/21', notes:[\r\n        'Added About'\r\n    ]},\r\n    {version: '0.1.4.1', date: '9/5/21', notes:[\r\n        'More About', 'Less Mess'\r\n    ]}\r\n]\r\n\r\nexport default updateLog","\r\nimport { Card, Dialog, Paper, Typography, makeStyles, CardContent, Theme, createStyles, AppBar } from '@material-ui/core';\r\n\r\nimport updateLog from '../util/UpdateLog'\r\ninterface About_Props{\r\n    open: boolean\r\n    handleClose: ()=>void\r\n}\r\nconst useStyles = makeStyles((theme: Theme)=> createStyles({\r\n    root: {\r\n      minWidth: 275,\r\n      flexGrow: 1,\r\n    },\r\n    bullet: {\r\n      display: 'inline-block',\r\n      margin: '0 2px',\r\n      transform: 'scale(0.8)',\r\n    },\r\n    menuButton: {\r\n        marginRight: theme.spacing(2),\r\n    },\r\n    title: {\r\n      fontSize: 14,\r\n    },\r\n    pos: {\r\n      marginBottom: 12,\r\n    },\r\n  }));\r\nexport default function About(props: About_Props){\r\n    const {open,handleClose}=props;\r\n    const classes = useStyles();\r\n    const bull = <span className={classes.bullet}>•</span>;\r\n    const getNotes=(notes: string[])=>{\r\n        return notes.map(note=>{\r\n           return <Typography key={note} variant='body2'>\r\n                {bull}{note}\r\n            </Typography>\r\n        })\r\n    }\r\n    const getUpdates=()=>{\r\n        return updateLog.map(update=>{\r\n            return <Card className={classes.root} key={update.version}>\r\n                <CardContent>\r\n                    <Typography variant='h6' component='h2'>\r\n                        {update.version}\r\n                    </Typography>\r\n                    <Typography className={classes.pos}>\r\n                        {update.date}\r\n                    </Typography>\r\n                    {getNotes(update.notes)}\r\n               \r\n                </CardContent>\r\n                \r\n                </Card>\r\n        })\r\n    }\r\n    return(\r\n        <Dialog open={open} onClose={handleClose}>\r\n            <div className={classes.root}>\r\n                <AppBar position='static'>\r\n                <Typography variant='h4'>vanPJ</Typography>\r\n              <Typography className={classes.pos} >Logic.Lighting | MIT Licence</Typography>\r\n                    </AppBar>\r\n          <Paper style={{width: '50%'}}>  \r\n              \r\n        {getUpdates()}\r\n        </Paper>\r\n        </div>\r\n        </Dialog>\r\n    )\r\n}","import { Dialog, AppBar, Toolbar, Typography, IconButton, Button, Paper, Slide, Switch, TextField, FormControlLabel, makeStyles } from \"@material-ui/core\";\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport InfoIcon from '@material-ui/icons/Info';\r\nimport { useState, forwardRef, useEffect } from \"react\";\r\nimport * as C from \"../util/constants\";\r\nimport { setConfig } from \"../util/getter\";\r\nimport Patch from \"./Patch\";\r\nimport { SocketPatcher } from \"../util/SocketListener\";\r\nimport { Socket } from \"socket.io-client\";\r\nimport About from \"./About\";\r\n//import { socket } from \"../LoadPage\";\r\nconst useStyles = makeStyles((theme) => ({\r\n  appBar: {\r\n    position: 'relative',\r\n  },\r\n  title: {\r\n    marginLeft: theme.spacing(2),\r\n    flex: 1,\r\n  },\r\n  root: {\r\n    '& .MuiTextField-root': {\r\n      margin: theme.spacing(1),\r\n      width: '25ch',\r\n    },\r\n  },\r\n}));\r\n\r\nconst Transition = forwardRef(function Transition(props, ref) {\r\n  //@ts-ignore\r\n  return (<Slide direction=\"up\" ref={ref} {...props} />);\r\n});\r\n\r\ninterface ConfigDialog_Props {\r\n  open: boolean\r\n  handleClose: () => void\r\n  config: C.Config\r\n  socket: Socket | undefined\r\n}\r\nexport default function ConfigDialog(props: ConfigDialog_Props) {\r\n  const { open, handleClose, config, socket } = props\r\n  const [polling, setPolling] = useState(config.Polling)\r\n  const [pollingInterval, setPollingInterval] = useState(config.Polling_Interval/1000)\r\n  const classes = useStyles();\r\n  const [patch, setPatch] = useState<C.Patch>(config.Patch)\r\n  const [aboutOpen, setAboutOpen] =useState(false)\r\n\r\n  useEffect(() => {\r\n    setPollingInterval(config.Polling_Interval/1000)\r\n    setPolling(config.Polling)\r\n    setPatch(config.Patch)\r\n  }, [config])\r\n \r\n\r\n  const handleSubmit = (event: any) => {\r\n    event?.preventDefault();\r\n    // console.log(event)\r\n\r\n    let form = document.querySelector('form')\r\n    if (form) {\r\n      const data = new FormData(form);\r\n      let query = ''\r\n      for (var pair of data.entries()) {\r\n      \r\n        let t = pair[0] as C.ConfigHeaders\r\n       \r\n        let v = pair[1].toString()\r\n        switch(t){\r\n          case C.ConfigHeaders.POLLING:\r\n           \r\n            break;\r\n          case C.ConfigHeaders.POLLING_INTERVAL:\r\n            query += t + '=' + pollingInterval*1000 + '&'\r\n            break;\r\n          default:\r\n            query += t + '=' + v + '&'\r\n            break;\r\n        }\r\n\r\n      }\r\n      //Hard adds Polling to ensure it is accounted for\r\n      query += C.ConfigHeaders.POLLING + '=' + polling\r\n      \r\n      setConfig(query)\r\n      if(socket)\r\n        SocketPatcher(socket, patch)\r\n    }\r\n  }\r\n  const handlePollingInterval=(value: number)=>{\r\n    if(value>10){\r\n      setPollingInterval(value)\r\n    }\r\n  }\r\n  const handlePatchUpdate=(p: C.Patch)=>{\r\n    console.log(p)\r\n    setPatch(p)\r\n  }\r\n  return (\r\n    \r\n    //@ts-ignore\r\n    <Dialog fullScreen open={open} onClose={handleClose} TransitionComponent={Transition}>\r\n\r\n      <form className={classes.root} onSubmit={handleSubmit}>\r\n        <AppBar className={classes.appBar}>\r\n          <Toolbar style={{ paddingBottom: 0, marginBottom: 0, height: 30}}>\r\n            <IconButton edge=\"start\" color=\"inherit\" onClick={handleClose} aria-label=\"close\">\r\n              <CloseIcon />\r\n            </IconButton>\r\n            <Typography variant=\"h6\" className={classes.title}>\r\n              Server Configuration\r\n              <span style={{ fontSize: 10, marginLeft:30 }}> &nbsp;&nbsp;&nbsp; Last Update: {config.LastUpdated}</span> \r\n            </Typography>\r\n           \r\n            <Button autoFocus color=\"inherit\" type={'submit'} onClick={handleClose}>\r\n              Save\r\n            </Button>\r\n            <IconButton color='inherit' onClick={()=>setAboutOpen(true)}><InfoIcon></InfoIcon></IconButton>\r\n           \r\n          </Toolbar>\r\n         \r\n        </AppBar>\r\n\r\n        <Paper key='config_paper'>\r\n\r\n\r\n\r\n          <TextField key='location' style={{width:'25%'}}label={'Location'} name={C.ConfigHeaders.LOCATION} defaultValue={config.Location} />\r\n\r\n          <FormControlLabel name={C.ConfigHeaders.POLLING} value={polling} labelPlacement=\"top\"\r\n            control={<Switch checked={polling} value={polling} onChange={(e) => setPolling(!polling)} name={C.ConfigHeaders.POLLING} />}\r\n            label=\"Polling\"\r\n          />\r\n\r\n          <TextField key='polling_interval' style={{width:'25%'}} disabled={!polling} type='number' label={'Poll Interval'} onChange={(e)=> handlePollingInterval(parseInt(e.target.value))} name={C.ConfigHeaders.POLLING_INTERVAL} value={pollingInterval} />\r\n        </Paper>\r\n\r\n\r\n        <Paper key='patch'>\r\n          <Patch patch={patch} setPatch={handlePatchUpdate} />\r\n        </Paper>\r\n      </form>\r\n     \r\n      <About open={aboutOpen} handleClose={()=>setAboutOpen(false)}></About>\r\n    </Dialog>\r\n   \r\n      \r\n  \r\n    \r\n  )\r\n}","\r\nimport { Socket } from 'socket.io-client'\r\nimport * as C from './constants'\r\n//import {socket} from '../LoadPage'\r\ntype RIG_STATUS = React.Dispatch<React.SetStateAction<C.RIG_STATUS>>\r\ntype PJS = React.Dispatch<React.SetStateAction<C.PJs>>\r\ntype CONFIG = React.Dispatch<React.SetStateAction<C.Config>>\r\ntype POLLING_PROGRESS = React.Dispatch<React.SetStateAction<number>>\r\n\r\nexport default function SocketListener(\r\n    socket: Socket,\r\n    setStatus: RIG_STATUS,\r\n    setPJs: PJS,\r\n    setConfig: CONFIG,\r\n    setPollingProgress: POLLING_PROGRESS,\r\n) {\r\n   \r\n    socket.on('connected', () => {\r\n        console.log('Connected!')\r\n        // socket.emit('Hello')\r\n    })\r\n    socket.on('Hello', () => {\r\n        //console.log('Hello!')\r\n    })\r\n    socket.on(C.ioCommands.EMITTING_PJS, (pjs: C.PJs) => {\r\n        setPJs(pjs)\r\n         console.log('Got new PJs!')\r\n    })\r\n    socket.on(C.ioCommands.EMITTING_STATUS, (status: C.RIG_STATUS) => {\r\n       // console.log('Status Updated')\r\n        setStatus(status)\r\n    })\r\n    socket.on(C.ioCommands.REQUEST_UPDATE, () => {\r\n        console.log('Requesting Update!')\r\n        socket?.emit(C.ioCommands.REQUESTING_UPDATE)\r\n    })\r\n\r\n    socket.on(C.ioCommands.REQUEST_CONFIG, () => {\r\n        console.log('Requesting Config')\r\n       // socket?.emit(C.ioCommands.REQUESTING_CONFIG)\r\n    })\r\n    socket.on(C.ioCommands.EMITTING_CONFIG, (config: C.Config) => {\r\n        console.groupCollapsed('Got New Config')\r\n        console.log('Config', config)\r\n        console.log('Patch', config.Patch)\r\n        console.groupEnd()\r\n        setConfig(config)\r\n        /*\r\n        if(config.Groups[0] && config.Groups[0].group)\r\n            setWorld(config.Groups[0].group)\r\n            */\r\n    })\r\n    socket.on(C.ioCommands.EMITTING_POLLING_PROGRESS, (progress: number) => {\r\n        setPollingProgress(progress)\r\n    })\r\n}\r\n    \r\n\r\n\r\n\r\nexport function SocketPatcher(socket: Socket, patch: C.Patch) {\r\n    socket.emit(C.ioCommands.EMITTING_PATCH, patch)\r\n}   ","import {Button, Dialog, DialogActions, DialogTitle, DialogContent, DialogContentText, TextField } from \"@material-ui/core\";\r\nimport { useEffect, useState } from \"react\";\r\ninterface Alert_Props{\r\n    open: boolean,\r\n    handleInput: (text: string)=>void,\r\n    handleClose: ()=>void,\r\n    header: string,\r\n    message: string,\r\n    startText: string | undefined\r\n}\r\nexport default function Alert(props: Alert_Props){\r\n    const {open,handleInput, handleClose, header, message ,startText} = props\r\n    const [text, setText] = useState('')\r\n\r\n    useEffect(()=>{\r\n      if(startText)\r\n      setText(startText)\r\n    },[startText])\r\n\r\n    const handleClick=(approval: boolean)=>{\r\n        if(approval){\r\n            handleInput(text)\r\n        }\r\n        handleClose()\r\n        setText('')\r\n\r\n    }\r\n    return (\r\n        <Dialog\r\n        open={open}\r\n        onClose={handleClose}\r\n        aria-labelledby=\"alert-dialog-title\"\r\n        aria-describedby=\"alert-dialog-description\"\r\n      >\r\n        <DialogTitle id=\"alert-dialog-title\">{header}</DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText id=\"alert-dialog-description\">\r\n            <span style={{width:'50'}}>{message}</span>\r\n          </DialogContentText>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <TextField value={text} onChange={(e)=>setText(e.target.value)}></TextField>\r\n          <Button onClick={(e)=>handleClick(false)} color=\"primary\">\r\n            Cancle\r\n          </Button>\r\n          <Button onClick={(e)=>handleClick(true)} color=\"primary\" autoFocus>\r\n            Okay\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n        \r\n    )\r\n}","import { Button} from '@material-ui/core'\r\nimport { useMemo } from 'react'\r\nimport * as C from '../util/constants'\r\n\r\ninterface worlds_props{\r\n    setWorld: (g: string)=> void\r\n    name: string\r\n    groupEditCMD: C.ioCommands | undefined\r\n    groups: C.Groups\r\n    selected?: number\r\n}\r\n/*\r\ninterface worldTuppel{\r\n  key: string,\r\n  name: string,\r\n  selected: boolean\r\n}*/\r\nexport default function Worlds( props: worlds_props){\r\n\r\n    const {setWorld, groups, groupEditCMD, selected} = props\r\n\r\n    const getWorlds = useMemo(()=>{\r\n        let g= Object.entries(groups).map(group=>{\r\n          return {key: group[0], name: group[1].name, selected: selected ===parseInt(group[0])  }\r\n       \r\n        })\r\n      if(groupEditCMD === C.ioCommands.STORE_GROUP){\r\n        g.push({key:C.ioCommands.STORE_GROUP, name: 'Add Group', selected: false})\r\n      }\r\n      return g\r\n    },[groups,groupEditCMD,selected])\r\n\r\n    const getButtons =()=>{\r\n   \r\n      return getWorlds.map(group=>{\r\n        return <Button key={group.key} onClick={(e)=>{e.preventDefault(); setWorld(group.key)}} variant={group.selected?'outlined':'text'}>{group.name}</Button>\r\n      })\r\n    }\r\n    return (\r\n        <div {...props} >\r\n          {getButtons()}\r\n          </div>\r\n    )\r\n}\r\n","import { Button, ButtonGroup, createStyles, Fade, makeStyles, Menu, MenuItem, Paper, Theme, Typography } from \"@material-ui/core\";\r\nimport Worlds from \"./Worlds\";\r\nimport { Config, ioCommands } from '../util/constants'\r\nimport { useRef, useState } from \"react\";\r\nimport SettingsIcon from \"@material-ui/icons/Settings\";\r\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\"\r\nimport PublicIcon from '@material-ui/icons/Public';\r\n\r\nimport ExpandLessIcon from '@material-ui/icons/ExpandLess'\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n    createStyles({\r\n        root: {\r\n\r\n        },\r\n        container: {\r\n            display: 'flex',\r\n        },\r\n        paper: {\r\n            margin: theme.spacing(1),\r\n        },\r\n    }),\r\n);\r\n\r\ninterface WorldBox_Props {\r\n    handleWorldSelection: (g: string) => void,\r\n    handleGroupSelection: (g: string) => void,\r\n    handleGroupConfig: (cmd: ioCommands) => void,\r\n    groupEditCMD: ioCommands | undefined,\r\n    config: Config,\r\n    world: number\r\n}\r\nexport default function WorldBox(props: WorldBox_Props) {\r\n    const { handleWorldSelection, handleGroupSelection, handleGroupConfig, groupEditCMD, config, world } = props;\r\n    const [worldOpen, setWorldOpen] = useState(false)\r\n    const [groupOpen, setGroupOpen] = useState(false)\r\n    const [configOpen, setConfigOpen] = useState(false)\r\n    const divRef = useRef(null)\r\n    const classes = useStyles();\r\n\r\n    const handleConfigButton = () => {\r\n        //@ts-ignore\r\n        divRef.current.focus()\r\n\r\n        setConfigOpen(true)\r\n\r\n    }\r\n    const handleConfigSelect = (cmd: ioCommands) => {\r\n        setConfigOpen(false)\r\n        handleGroupConfig(cmd)\r\n    }\r\n    const handleWorld = (w: boolean) => {\r\n        setWorldOpen(!w)\r\n        if (!w) {\r\n            setGroupOpen(false)\r\n        }\r\n    }\r\n    const handleGroup = (g: boolean) => {\r\n        setGroupOpen(!g)\r\n        if (!g) {\r\n            setWorldOpen(false)\r\n        }\r\n    }\r\n    const getStyle = () => {\r\n        if (!worldOpen && !groupOpen) {\r\n            return {\r\n                width: '90%', margin: 'auto', height: '40px'\r\n            }\r\n        }\r\n        return {\r\n            width: '90%', margin: 'auto'\r\n        }\r\n\r\n    }\r\n    const getHelperText = () => {\r\n        let generalMessage = ' | Hit Clear to Cancle'\r\n        switch (groupEditCMD) {\r\n            case ioCommands.STORE_GROUP:\r\n                return <Typography>Select Group To Store {generalMessage}</Typography>\r\n            case ioCommands.DELETE_GROUP:\r\n                return <Typography>Select Group To Delete {generalMessage}</Typography>\r\n            case ioCommands.LABEL_GROUP:\r\n                return <Typography>Select Group to Label {generalMessage}</Typography>\r\n        }\r\n    }\r\n    return (\r\n        <div className='WorldBox' >\r\n            <Paper style={getStyle()}>\r\n                <ButtonGroup style={{ marginTop: '1px', marginBottom: '2px' }} >\r\n                    <Button key='world_button'\r\n                        onClick={() => handleWorld(worldOpen)}> Worlds {world !==0? <PublicIcon fontSize=\"small\" /> : '  '}\r\n                        {worldOpen ? <ExpandLessIcon /> : <ExpandMoreIcon />} </Button>\r\n                    <Button key='group_button' onClick={() => handleGroup(groupOpen)}>Groups\r\n                        {groupOpen ? <ExpandLessIcon /> : <ExpandMoreIcon />}\r\n                    </Button>\r\n                </ButtonGroup>\r\n                {getHelperText()}\r\n\r\n                <div className={classes.container} style={{width:'100%'}}>\r\n\r\n\r\n                    {worldOpen ? <Fade key='world_Grow' in={worldOpen}>\r\n\r\n\r\n                        <Worlds key=\"world_box\" setWorld={handleWorldSelection} groupEditCMD={groupEditCMD} groups={config.Groups} name={'Worlds'} selected={world} />\r\n                    </Fade> :\r\n                        <Fade key='group_box' in={groupOpen}>\r\n                            <Worlds setWorld={handleGroupSelection} groupEditCMD={groupEditCMD} groups={config.Groups} name={'Groups'} />\r\n                        </Fade>\r\n                    }\r\n                    {groupOpen || worldOpen ?\r\n                        <Button ref={divRef} style={{ float: 'right', marginLeft:'auto' }} onClick={() => handleConfigButton()}><SettingsIcon /></Button>\r\n                        : <></>}\r\n                </div>\r\n\r\n            </Paper>\r\n            <Menu id='groups-menu' keepMounted anchorEl={divRef.current}\r\n                open={configOpen}\r\n                onClose={() => setConfigOpen(false)}>\r\n                <MenuItem>\r\n                    <Button key='add_group' onClick={() => handleConfigSelect(ioCommands.STORE_GROUP)}>Store Group</Button>\r\n                </MenuItem>\r\n                <MenuItem>\r\n                    <Button key='rename_group' onClick={() => handleConfigSelect(ioCommands.LABEL_GROUP)}>Rename Group</Button>\r\n                </MenuItem>\r\n                <MenuItem>\r\n                    <Button key='delete_group' onClick={() => handleConfigSelect(ioCommands.DELETE_GROUP)}>Delete Group</Button>\r\n                </MenuItem>\r\n            </Menu>\r\n\r\n        </div>\r\n    )\r\n}\r\n//\r\n/*\r\n <Container key='groups_Worlds' style={{width:'80%'}}>\r\n\r\n\r\n        </Container>\r\n        */","\r\nimport { useEffect, useState } from 'react';\r\nimport './App.css';\r\nimport * as C from './util/constants'\r\n//import { getPJ } from './util/getter';\r\n//import PJ from './components/PJ'\r\nimport Numberpad from './components/numberpad';\r\nimport CommandPad from './components/CommandPad'\r\nimport { TextField, Container, Grid, LinearProgress } from '@material-ui/core'\r\nimport { processCMD } from './util/CMD';\r\nimport Programmer from './components/Programmer';\r\nimport * as Prefs from './prefrences';\r\nimport SocketListener from './util/SocketListener';\r\nimport ConfigDialog from './components/ConfigDialog';\r\nimport { Socket } from 'socket.io-client';\r\nimport InputPopup from './components/InputPopup';\r\nimport WorldBox from './components/WorldBox';\r\n\r\n\r\n// setSocketConnect(true)\r\n//import {socket}  from './LoadPage'\r\ninterface App_Prps {\r\n  prefs: Prefs.prefres\r\n  openConfig: boolean\r\n  handleCloseConfig: () => void\r\n  socket: Socket | undefined\r\n}\r\n\r\nconst removeFocus=()=>{\r\n  if(document.activeElement instanceof HTMLElement){\r\n  document.activeElement.blur();\r\n  }\r\n}\r\n//let socket: Socket | undefined = undefined\r\n\r\nfunction App(Props: App_Prps) {\r\n  const { prefs, openConfig, handleCloseConfig, socket } = Props\r\n  const [cmd, setCMD] = useState('')\r\n  const [vartiable, setVartiable] = useState<string | undefined>(undefined)\r\n  const [active, setActive] = useState<number[]>([])\r\n  const [activeIndex, setActiveIndex] = useState(-1)\r\n  const [clearPresses, setClearPressed] = useState(0)\r\n  const [selected, setSelected] = useState<number[]>([])\r\n  const [groupNameOpen, setGroupNameOpen] = useState(false)\r\n  const [groupName, setGroupName] = useState<string | undefined>(undefined)\r\n  const [config, setConfig] = useState(C.defaultConfig)\r\n  const [world, setWorld] = useState(0) //Default 0 - All\r\n  const [pjs, setPJs] = useState<C.PJs>({})\r\n  const [pollingProgress, setPollingProgress] = useState(100)\r\n  const [command, setCommand] = useState<C.ControlKeys | undefined>(undefined)\r\n  const [groupEditCMD, setGroupEditCMD] = useState<C.ioCommands | undefined>(undefined)\r\n  const [selectedGroup, setSelectedGroup] = useState<number | undefined>(undefined)\r\n  const [lastPJClicked, setLastPJClicked] = useState<number | undefined>(undefined)\r\n  const [rigStatus, setStatus] = useState<C.RIG_STATUS>({\r\n    online: false,\r\n    power: false,\r\n    shutter: false,\r\n    blendMarker: false,\r\n    blend: false,\r\n    testPattren: false,\r\n    lampStatus: false,\r\n    hdmiInput: false,\r\n    signalName: false\r\n\r\n  })\r\n\r\n\r\n\r\n  useEffect(() => {\r\n\r\n    if (socket)\r\n      SocketListener(socket, setStatus, setPJs, setConfig, setPollingProgress)\r\n\r\n    if (command) {\r\n      console.log('Emmiting CMD', command, active)\r\n\r\n      socket?.emit(C.ioCommands.EMITTING_CMD, { cmd: command, pjIDs: active, vartiable: vartiable })\r\n      if (prefs.clearProgrammerAfterCMD) {\r\n        setActive([])\r\n        setSelected([])\r\n      }\r\n      setCommand(undefined)\r\n    }\r\n\r\n\r\n    // let i =setInterval(pollPJs,10000)\r\n    //console.log(selected)\r\n    return function cleanup() {\r\n\r\n      // socket?.disconnect()\r\n      //setSocketConnect(false)\r\n    }\r\n\r\n\r\n  }, [active, command, prefs, socket, vartiable, pjs])\r\n\r\n\r\n  document.onkeyup = ((e) => {\r\n    if (openConfig || groupNameOpen) return\r\n  \r\n   \r\n\r\n    let key = e.key\r\n     \r\n    if (C.keys.includes(key)) {\r\n      handlePad(key)\r\n      return\r\n    }\r\n\r\n    switch (key) {\r\n      case 't':\r\n        handlePad(C.commands.THRU)\r\n        break;\r\n      case 'c':\r\n        handlePad(C.commands.CLEAR)\r\n        break;\r\n      case '=':\r\n        handlePad('+')\r\n        break;\r\n      case 'Backspace':\r\n        handlePad(C.commands.DEL)\r\n        break;\r\n      case 'Enter':\r\n        //processCMD();\r\n        handlePad(C.commands.ENTER)\r\n        break;\r\n      case 'i':\r\n        handleCommand(C.ControlCommands.SHUTTER_CLOSED)\r\n        break;\r\n      case 'o':\r\n        handleCommand(C.ControlCommands.SHUTTER_OPEN)\r\n        break;\r\n\r\n      case 'ArrowUp':\r\n        handlePad(C.commands.IF_PROG)\r\n        break;\r\n      case 'ArrowRight':\r\n        handlePad(C.commands.NEXT)\r\n        break;\r\n      case 'ArrowLeft':\r\n        handlePad(C.commands.BACK)\r\n        break;\r\n    }\r\n\r\n  })\r\n\r\n  const handleNext = () => {\r\n    //console.log('Nexting')\r\n    if (selected.length < 1) {\r\n      return\r\n    }\r\n    let i = activeIndex\r\n    if (activeIndex + 1 < selected.length) {\r\n      i += 1\r\n    }\r\n    if (activeIndex + 1 >= selected.length) {\r\n      i = 0\r\n    }\r\n    let a: number[] = []\r\n    a.push(selected[i])\r\n    setActiveIndex(i)\r\n    setActive(a)\r\n  }\r\n  const handleBack = () => {\r\n    if (selected.length < 1) {\r\n      return\r\n    }\r\n    let i = activeIndex\r\n    if (activeIndex - 1 >= 0) {\r\n      i -= 1\r\n    }\r\n    if (activeIndex - 1 < 0) {\r\n      i = selected.length - 1\r\n    }\r\n    let a: number[] = []\r\n    a.push(selected[i])\r\n    setActiveIndex(i)\r\n    setActive(a)\r\n  }\r\n\r\n  const handlePad = (e: string) => {\r\n   \r\n    removeFocus()\r\n    if (e === C.commands.CLEAR) {\r\n      if (groupEditCMD) {\r\n        setGroupEditCMD(undefined)\r\n        return\r\n      }\r\n      setClearPressed((clearPresses + 1))\r\n      //console.log('Clear', clearPresses)\r\n      switch (clearPresses) {\r\n        case 0:\r\n          setCMD('')\r\n          break;\r\n        case 1:\r\n          setActive([])\r\n          setActiveIndex(-1)\r\n          break;\r\n        case 2:\r\n          setSelected([])\r\n          break;\r\n      }\r\n      return\r\n    }\r\n    setClearPressed(0)\r\n    switch (e) {\r\n\r\n\r\n      case C.commands.DEL:\r\n        //console.log(cmd.slice(-6) === ' THRU ')\r\n        // console.log(cmd.includes('THRU'))\r\n        if (cmd.length >= 6 && cmd.slice(-6) === ' ' + C.commands.THRU + ' ') {\r\n          let t = cmd.slice(0, cmd.length - 6)\r\n          setCMD(t)\r\n        } else if(cmd.length>=7 && cmd.slice(-7) === ' '+C.commands.GROUP+' ') {\r\n          let t = cmd.slice(0,cmd.length - 7)\r\n          setCMD(t)\r\n        }else {\r\n          setCMD(cmd.slice(0, (cmd.length - 1)))\r\n        }\r\n        break;\r\n      case C.commands.THRU:\r\n        if (cmd.length > 0)\r\n          setCMD(cmd + ' THRU ')\r\n        break;\r\n      case C.commands.ENTER:\r\n        handleCMD()\r\n        break;\r\n      case '-':\r\n        if (cmd[cmd.length - 1] !== ' ') {\r\n          setCMD(cmd + ' '+e+' ')\r\n        }\r\n        break\r\n      case '+':\r\n        setCMD(cmd+' '+e+' ')\r\n        break\r\n      case C.commands.NEXT:\r\n        handleNext();\r\n        break;\r\n      case C.commands.BACK:\r\n        handleBack()\r\n        break;\r\n      case C.commands.IF_PROG:\r\n        setActive(selected);\r\n        setActiveIndex(-1)\r\n        break;\r\n      default:\r\n\r\n        setCMD(cmd + e)\r\n      // console.log('setting CMD',cmd)\r\n    }\r\n    //  console.log('CMD',cmd)\r\n  }\r\n  const handleTableSelect = (id: number) => {\r\n    // let s = [...selected]\r\n    let a = [...active]\r\n    if (a.includes(id)) {\r\n      setActive(a.filter(pj => pj !== id))\r\n    } else {\r\n\r\n\r\n      /*\r\n       document.onkeydown= (e)=>{\r\n         if(e.key==='Shift' && lastPJClicked){\r\n           if(id>lastPJClicked){\r\n             for(let i=lastPJClicked; i<=id; i++){\r\n               if(!a.includes(i)){\r\n                 a.push(i)\r\n               }\r\n             }\r\n \r\n           }else if(lastPJClicked>id){\r\n             for(let i=id; i<=lastPJClicked; i++){\r\n               if(!a.includes(i)){\r\n                 a.push(i)\r\n               }\r\n             }\r\n           }\r\n         }\r\n       }\r\n       */\r\n      a.push(id)\r\n      setActive(a)\r\n      setLastPJClicked(id)\r\n      // s.push(id)\r\n      //console.log(s)\r\n      // setSelected(s)\r\n    }\r\n  }\r\n\r\n  const handleCMD = () => {\r\n\r\n    let s = processCMD(cmd, active, getGroup(world), config.Groups)\r\n    finalCMD(s)\r\n    setCMD('')\r\n\r\n  }\r\n  const finalCMD = (n: number[]) => {\r\n    // console.log(n)\r\n    setActive(n)\r\n    let newSelected:number[] = []\r\n    selected.forEach(id=>{\r\n      if(n.includes(id)){\r\n        newSelected.push(id)\r\n      }\r\n    })\r\n    n.forEach(id => {\r\n      if (!selected.includes(id)) {\r\n        newSelected.push(id)\r\n      }\r\n    })\r\n    \r\n    setSelected(newSelected)\r\n    //setSelected(diffrentPJs)\r\n\r\n  }\r\n  const handleCommand = (command: C.ControlKeys, text?: string) => {\r\n    handleCMD()\r\n    setCommand(command)\r\n    setVartiable(text)\r\n  }\r\n  const getGroup = (groupID: string | number) => {\r\n    let g = config.Groups[parseInt(groupID.toString())]?.group\r\n    return g ? g : []\r\n  }\r\n  const handleGroupName = (name: string) => {\r\n   \r\n    setGroupName(name)\r\n    console.log(name, groupName,groupEditCMD)\r\n    if (name) {\r\n      switch (groupEditCMD) {\r\n        case C.ioCommands.STORE_GROUP:\r\n          socket?.emit(C.ioCommands.STORE_GROUP, { name: name, group: active })\r\n          break;\r\n        case C.ioCommands.LABEL_GROUP:\r\n          socket?.emit(C.ioCommands.LABEL_GROUP, { groupID: selectedGroup, name })\r\n          break;\r\n      }\r\n\r\n      setGroupName(undefined)\r\n      setGroupEditCMD(undefined)\r\n      console.log(groupName)\r\n    }\r\n  }\r\n  const handleGroupUpdate = (groupID: string) => {\r\n    socket?.emit(C.ioCommands.UPDATE_GROUP, { groupID: parseInt(groupID), group: active })\r\n    setGroupEditCMD(undefined)\r\n  }\r\n  const handleGroupAndWorld = (groupID: string) => {\r\n    if (groupID === C.ioCommands.STORE_GROUP && active.length>0) {\r\n      setGroupNameOpen(true)\r\n      return false\r\n    } else if (groupEditCMD === C.ioCommands.STORE_GROUP) {\r\n      handleGroupUpdate(groupID)\r\n      return false\r\n    } else if (groupEditCMD === C.ioCommands.LABEL_GROUP) {\r\n      setGroupName(config.Groups[parseInt(groupID)].name)\r\n      setSelectedGroup(parseInt(groupID))\r\n      setGroupNameOpen(true)\r\n      return false\r\n    } else if(groupEditCMD === C.ioCommands.DELETE_GROUP){\r\n      socket?.emit(C.ioCommands.DELETE_GROUP, {groupID:parseInt(groupID)})\r\n      setGroupEditCMD(undefined)\r\n      return false\r\n    }\r\n    return true\r\n  }\r\n\r\n  const handleGroupSelection = (groupID: string) => {\r\n    if (handleGroupAndWorld(groupID)) {\r\n      removeFocus()\r\n      let group = getGroup(groupID)\r\n      if (group){\r\n        let s = ''\r\n        let t = cmd.trim()\r\n     \r\n        if(t.slice(-1) !== '-' && t.slice(-1) !=='+'){\r\n          s= ' + '\r\n        }\r\n\r\n        setCMD(cmd+s+C.commands.GROUP+' '+parseInt(groupID))\r\n        \r\n      //  handleCMD()\r\n      //  finalCMD(group)\r\n      }\r\n    }\r\n  }\r\n  const handleWorldSelection = (groupID: string) => {\r\n    if (handleGroupAndWorld(groupID))\r\n      setWorld(parseInt(groupID))\r\n  }\r\n  const handleGroupConfig = (cmd: C.ioCommands) => {\r\n    switch (cmd) {\r\n      case C.ioCommands.STORE_GROUP:\r\n        setGroupEditCMD(cmd)\r\n        break;\r\n      case C.ioCommands.UPDATE_GROUP:\r\n        setGroupEditCMD(cmd)\r\n        break\r\n      case C.ioCommands.LABEL_GROUP:\r\n        setGroupEditCMD(cmd)\r\n        break;\r\n      case C.ioCommands.DELETE_GROUP:\r\n        setGroupEditCMD(cmd)\r\n        break;\r\n    }\r\n    //\r\n  }\r\n  const getStatusBar = () => {\r\n\r\n    if (pollingProgress === 100)\r\n      return <LinearProgress style={{ width: '99%', margin: 'auto' }} variant=\"determinate\" value={0} />\r\n\r\n    return <LinearProgress style={{ width: '99%', margin: 'auto' }} variant=\"determinate\" value={pollingProgress} />\r\n  }\r\n\r\n\r\n  return (\r\n    <div className=\"App\">\r\n\r\n      <link rel=\"stylesheet\" href=\"https://fonts.googleapis.com/css?family=Roboto:300,400,500,700&display=swap\" />\r\n      <link rel=\"stylesheet\" href=\"https://fonts.googleapis.com/icon?family=Material+Icons\" />\r\n      {getStatusBar()}\r\n      <Container style={{ position: 'relative', bottom: '3px', textAlign: 'left', float: 'left' }}>\r\n      </Container>\r\n      <Grid container spacing={6} className='inputArea' >\r\n        <Grid item >\r\n          <Numberpad handlePad={handlePad} />\r\n        </Grid>\r\n        <Grid item>\r\n          <CommandPad handleCommand={handleCommand} active={active} pjs={pjs} />\r\n        </Grid>\r\n      </Grid>\r\n      <TextField\r\n        id=\"cmd\"\r\n\r\n        style={{ margin: 8, width: '90%' }}\r\n        value={cmd}\r\n        helperText=\"Command Line\"\r\n        fullWidth\r\n        margin=\"normal\"\r\n        InputLabelProps={{\r\n          shrink: true,\r\n        }}\r\n        variant=\"outlined\"\r\n\r\n      />\r\n\r\n      <WorldBox handleGroupSelection={handleGroupSelection} handleWorldSelection={handleWorldSelection} groupEditCMD={groupEditCMD} handleGroupConfig={handleGroupConfig} config={config} world={world} />\r\n      <br key=\"programmer break\"></br>\r\n      <Container key='programmer'>\r\n        <Programmer handleTableSelect={handleTableSelect} key={'pg'} prefs={prefs} world={getGroup(world)} status={rigStatus} selected={selected} active={active}\r\n          pjs={pjs} />\r\n\r\n\r\n        <br key='stats break'></br>\r\n\r\n\r\n      </Container>\r\n      <ConfigDialog socket={socket} open={openConfig} handleClose={() => handleCloseConfig()} config={config} />\r\n      <InputPopup open={groupNameOpen} handleInput={handleGroupName} startText={groupName} handleClose={() => setGroupNameOpen(false)} header={'Group Name'} message={active.toString()} />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","\r\nimport Cookies from 'js-cookie'\r\nexport interface prefres{\r\n    darkMode: boolean,\r\n    clearProgrammerAfterCMD: boolean,\r\n    showOnlySelected: boolean,\r\n    programmerTableView: boolean\r\n}\r\nconst cookieName= 'prefs'\r\n//const prefersDarkMode = useMediaQuery('(prefers-color-scheme: dark)');\r\nexport const defaultPrefs: prefres={\r\n    darkMode: true, //prefersDarkMode,\r\n    clearProgrammerAfterCMD: false,\r\n    showOnlySelected: false,\r\n    programmerTableView: false\r\n}\r\n\r\nexport const setCookie=(prefs: prefres)=>{\r\n    Cookies.set(cookieName,prefs)\r\n}\r\nconst getCookie =()=>{\r\n    return Cookies.get(cookieName)\r\n    /*\r\n    let c = Cookies.get(cookieName)\r\n    if(c){\r\n        return JSON.parse(c) \r\n       // return c as unknown as prefres\r\n    } else {\r\n        setCookie(defaultPrefs)\r\n        return defaultPrefs\r\n    }\r\n    */\r\n}\r\n\r\nexport function getPrefrences(darkMode=true):prefres{\r\n    let c = getCookie()\r\n    if(c){\r\n        return JSON.parse(c)\r\n    }else{\r\n        let d = defaultPrefs\r\n        d.darkMode = darkMode\r\n        setCookie(d)\r\n        return d\r\n    }\r\n     \r\n    //return getCookie()\r\n}\r\n\r\n\r\n\r\nexport function setCookie_DarkMode(mode: boolean){\r\n    let c = getPrefrences()\r\n    c.darkMode=mode\r\n    setCookie(c)\r\n\r\n}\r\nexport function setCookie_ClearProgrammerAfterCMD(mode: boolean){\r\n    let c = getPrefrences()\r\n    c.clearProgrammerAfterCMD = mode\r\n    setCookie(c)\r\n}\r\nexport function setCookie_ShowOnlySelected(mode:boolean){\r\n    let c =getPrefrences()\r\n    console.log(mode)\r\n    c['showOnlySelected'] = mode\r\n    setCookie(c)\r\n}\r\n\r\nexport function getDarkMode(){\r\n    return getPrefrences().darkMode\r\n}\r\n\r\nexport function getClearProgrammerAfterCMD(){\r\n    return getPrefrences().clearProgrammerAfterCMD\r\n}\r\nexport function getShowOnlySelected(){\r\n    return getPrefrences().showOnlySelected\r\n}\r\n\r\nexport function getProgrammerTableView(){\r\n    return getPrefrences().programmerTableView\r\n}","import { Button, Menu, MenuItem, FormControlLabel, Switch  } from '@material-ui/core'\r\n//import {SettingsIcon} from '@material-ui/icons/Settings';\r\nimport SettingsIcon from \"@material-ui/icons/Settings\";\r\nimport { useState, useRef} from 'react'\r\nimport { prefres } from '../prefrences';\r\nimport * as C from '../util/constants'\r\n\r\n\r\ninterface menu_props {\r\n  handleSettings: (e: prefres) => void,\r\n  prefs: prefres,\r\n  handleOpenConfig: ()=>void\r\n}\r\nexport default function ControlMenu(props: menu_props) {\r\n\r\n // const value = useContext(Settings)\r\n  //console.log(value)\r\n  const { prefs, handleSettings, handleOpenConfig } = props\r\n  const divRef = useRef(null)\r\n\r\n  const [open, setOpen] = useState(false)\r\n  \r\n\r\n  const handleOpen = () => {\r\n    setOpen(true)\r\n\r\n\r\n  }\r\n  const handleClose = (e: C.menuCommands | undefined) => {\r\n    setOpen(false)\r\n  }\r\n\r\n  const handleChange = (e: C.menuCommands) => {\r\n    \r\n    let p = Object.assign({},prefs)\r\n    switch (e) {\r\n      case C.menuCommands.CLEAR_SELECTED_ON_CMD:\r\n        p.clearProgrammerAfterCMD = !prefs.clearProgrammerAfterCMD\r\n        break;\r\n      case C.menuCommands.IF_SELECTED:\r\n        p.showOnlySelected = !prefs.showOnlySelected\r\n        break;\r\n      case C.menuCommands.DARK_MODE:\r\n        p.darkMode = !prefs.darkMode\r\n        break;\r\n      case C.menuCommands.PROGRAMMER_TABLE_VIEW:\r\n        p.programmerTableView = !prefs.programmerTableView\r\n        break;\r\n    }\r\n    handleSettings(p)\r\n  }\r\n  let button =\r\n    <Button ref={divRef} aria-controls=\"simple-menu\" aria-haspopup=\"true\" onClick={() => handleOpen()}>\r\n      <SettingsIcon />\r\n    </Button>\r\n  if(process.env.NODE_ENV === 'development'){\r\n    document.title = 'PJ Dev'\r\n  }\r\n  return (\r\n    <div>\r\n\r\n      {button}\r\n\r\n\r\n      <Menu\r\n        id=\"simple-menu\"\r\n        keepMounted\r\n        //@ts-ignore\r\n        anchorEl={divRef.current}\r\n        open={open}\r\n        onClose={() => handleClose(undefined)}\r\n      >\r\n        <MenuItem >\r\n          <FormControlLabel\r\n            control={<Switch key={C.menuCommands.CLEAR_SELECTED_ON_CMD} checked={prefs.clearProgrammerAfterCMD}\r\n              onClick={(e) => handleChange(C.menuCommands.CLEAR_SELECTED_ON_CMD)} name=\"clearSelectedOnPress\" />}\r\n            label=\"Clear Programmer On CMD\"\r\n          />\r\n        </MenuItem>\r\n        <MenuItem>\r\n\r\n          <FormControlLabel\r\n            control={<Switch key={C.menuCommands.IF_SELECTED} checked={prefs.showOnlySelected}\r\n              onChange={(e) => handleChange(C.menuCommands.IF_SELECTED)} name=\"showonlyselected\" />}\r\n            label=\"Show Only Selected\"\r\n          />\r\n        </MenuItem>\r\n        <MenuItem>\r\n\r\n          <FormControlLabel\r\n            control={<Switch key={C.menuCommands.DARK_MODE} checked={prefs.darkMode}\r\n              onChange={(e) => handleChange(C.menuCommands.DARK_MODE)} name=\"darkMode\" />}\r\n            label=\"Dark Mode\"\r\n          />\r\n       \r\n        </MenuItem>\r\n        <MenuItem>\r\n\r\n          <FormControlLabel\r\n            control={<Switch key={C.menuCommands.PROGRAMMER_TABLE_VIEW} checked={prefs.programmerTableView}\r\n              onChange={(e) => handleChange(C.menuCommands.PROGRAMMER_TABLE_VIEW)} name=\"Programmer Table View\" />}\r\n            label=\"Programmer Table View\"\r\n          />\r\n       \r\n        </MenuItem>\r\n        <MenuItem>\r\n        <Button onClick={(e)=>{setOpen(false); handleOpenConfig()}}>Edit Config</Button>\r\n        </MenuItem>\r\n      </Menu>\r\n     \r\n      <span style={{textAlign:'center', fontSize: 10}}> Projector Controler v{process.env.REACT_APP_VERSION}{process.env.NODE_ENV==='development'?' Beta':''}</span>\r\n    </div>\r\n  )\r\n\r\n}","import { CircularProgress } from \"@material-ui/core\";\r\n\r\nexport default function Disconnected(){\r\n    return (\r\n      \r\n            <div style={{width:'100%', textAlign:'center'}} >\r\n     \r\n            <CircularProgress  color=\"secondary\" />\r\n            <p>Can't connect to server</p>\r\n            \r\n            </div>\r\n   \r\n    )\r\n}","import React, { useEffect, useState } from 'react';\r\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\r\nimport { createMuiTheme, createStyles, makeStyles, ThemeProvider, Theme } from '@material-ui/core/styles';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport App from './App';\r\nimport * as Pref from './prefrences';\r\nimport ControlMenu from './components/ControlMenu';\r\nimport socketIOClinet   from 'socket.io-client'\r\nimport { Backdrop } from '@material-ui/core';\r\nimport Disconnected from './components/Disconnected';\r\nexport const Settings = React.createContext(Pref.defaultPrefs)\r\n\r\nexport let socket =socketIOClinet()\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    backdrop: {\r\n      zIndex: theme.zIndex.drawer + 1,\r\n      color: '#fff',\r\n    },\r\n  }),\r\n);\r\nexport default function LoadPage() {\r\n    const prefersDarkMode = useMediaQuery('(prefers-color-scheme: dark)');\r\n    // const prefersDarkMode = getDarkMode()  \r\n    const classes = useStyles()\r\n    const [prefres, setPrefs] = useState(Pref.defaultPrefs)\r\n    const [openConfig,setOpenConfig] = useState(false)\r\n    const [socketConnected,setSocketConnected]= useState(false)\r\n\r\n    useEffect(()=>{\r\n    if(!socketConnected){\r\n      try{\r\n   \r\n          console.log('Connecting Socket...')\r\n       // let s = socketIOClinet()\r\n    \r\n        socket.on('connect',()=>{\r\n           // socket = s\r\n            setSocketConnected(true)\r\n        })\r\n        socket.on('disconnect',()=>{\r\n           // socket = undefined\r\n            setSocketConnected(false)\r\n        })\r\n      \r\n      }catch(e){\r\n\r\n      }\r\n    }\r\n    return function cleanup(){\r\n     \r\n    }\r\n\r\n    },[socketConnected])\r\n\r\n    useEffect(() => {\r\n  \r\n        setPrefs(Pref.getPrefrences(prefersDarkMode))\r\n      \r\n    }, [prefersDarkMode])\r\n\r\n    const theme = createMuiTheme({\r\n        palette: {\r\n            type: prefres.darkMode ? 'dark' : 'light',\r\n        }\r\n    })\r\n   \r\n    const handlePrefs = (p: Pref.prefres) => {\r\n       // console.log(prefres)\r\n        setPrefs(p)\r\n      //  console.log(prefres)\r\n        Pref.setCookie(p)\r\n    }\r\n    return (\r\n        <ThemeProvider theme={theme}>\r\n            <Settings.Provider value={prefres}/>\r\n            <CssBaseline />\r\n            <Backdrop className={classes.backdrop} open={!socketConnected} >\r\n                <Disconnected/>\r\n            </Backdrop>\r\n                <ControlMenu handleOpenConfig={()=> setOpenConfig(true)}handleSettings={handlePrefs} prefs={prefres} />\r\n                <App socket={socket} prefs={prefres} openConfig={openConfig} handleCloseConfig={()=>setOpenConfig(false)}/>\r\n              \r\n                \r\n            \r\n        </ThemeProvider>\r\n    );\r\n}","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n    window.location.hostname === 'localhost' ||\r\n      // [::1] is the IPv6 localhost address.\r\n      window.location.hostname === '[::1]' ||\r\n      // 127.0.0.0/8 are considered localhost for IPv4.\r\n      window.location.hostname.match(\r\n        /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n      )\r\n  );\r\n  \r\n  export function register(config) {\r\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n      // The URL constructor is available in all browsers that support SW.\r\n      const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n      if (publicUrl.origin !== window.location.origin) {\r\n        // Our service worker won't work if PUBLIC_URL is on a different origin\r\n        // from what our page is served on. This might happen if a CDN is used to\r\n        // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n        return;\r\n      }\r\n  \r\n      window.addEventListener('load', () => {\r\n        const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n  \r\n        if (isLocalhost) {\r\n          // This is running on localhost. Let's check if a service worker still exists or not.\r\n          checkValidServiceWorker(swUrl, config);\r\n  \r\n          // Add some additional logging to localhost, pointing developers to the\r\n          // service worker/PWA documentation.\r\n          navigator.serviceWorker.ready.then(() => {\r\n            console.log(\r\n              'This web app is being served cache-first by a service ' +\r\n                'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n            );\r\n          });\r\n        } else {\r\n          // Is not localhost. Just register service worker\r\n          registerValidSW(swUrl, config);\r\n        }\r\n      });\r\n    }\r\n  }\r\n  \r\n  function registerValidSW(swUrl, config) {\r\n    navigator.serviceWorker\r\n      .register(swUrl)\r\n      .then(registration => {\r\n        registration.onupdatefound = () => {\r\n          const installingWorker = registration.installing;\r\n          if (installingWorker == null) {\r\n            return;\r\n          }\r\n          installingWorker.onstatechange = () => {\r\n            if (installingWorker.state === 'installed') {\r\n              if (navigator.serviceWorker.controller) {\r\n                // At this point, the updated precached content has been fetched,\r\n                // but the previous service worker will still serve the older\r\n                // content until all client tabs are closed.\r\n                console.log(\r\n                  'New content is available and will be used when all ' +\r\n                    'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n                );\r\n  \r\n                // Execute callback\r\n                if (config && config.onUpdate) {\r\n                  config.onUpdate(registration);\r\n                }\r\n              } else {\r\n                // At this point, everything has been precached.\r\n                // It's the perfect time to display a\r\n                // \"Content is cached for offline use.\" message.\r\n                console.log('Content is cached for offline use.');\r\n  \r\n                // Execute callback\r\n                if (config && config.onSuccess) {\r\n                  config.onSuccess(registration);\r\n                }\r\n              }\r\n            }\r\n          };\r\n        };\r\n      })\r\n      .catch(error => {\r\n        console.error('Error during service worker registration:', error);\r\n      });\r\n  }\r\n  \r\n  function checkValidServiceWorker(swUrl, config) {\r\n    // Check if the service worker can be found. If it can't reload the page.\r\n    fetch(swUrl, {\r\n      headers: { 'Service-Worker': 'script' },\r\n    })\r\n      .then(response => {\r\n        // Ensure service worker exists, and that we really are getting a JS file.\r\n        const contentType = response.headers.get('content-type');\r\n        if (\r\n          response.status === 404 ||\r\n          (contentType != null && contentType.indexOf('javascript') === -1)\r\n        ) {\r\n          // No service worker found. Probably a different app. Reload the page.\r\n          navigator.serviceWorker.ready.then(registration => {\r\n            registration.unregister().then(() => {\r\n              window.location.reload();\r\n            });\r\n          });\r\n        } else {\r\n          // Service worker found. Proceed as normal.\r\n          registerValidSW(swUrl, config);\r\n        }\r\n      })\r\n      .catch(() => {\r\n        console.log(\r\n          'No internet connection found. App is running in offline mode.'\r\n        );\r\n      });\r\n  }\r\n  \r\n  export function unregister() {\r\n    if ('serviceWorker' in navigator) {\r\n      navigator.serviceWorker.ready\r\n        .then(registration => {\r\n          registration.unregister();\r\n        })\r\n        .catch(error => {\r\n          console.error(error.message);\r\n        });\r\n    }\r\n  }\r\n  ","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport LoadPage from './LoadPage'\r\nimport * as serviceWorker from './serviceWorker';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n \r\n    <LoadPage/>\r\n  \r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://cra.link/PWA\r\nserviceWorker.register();\r\n"],"sourceRoot":""}