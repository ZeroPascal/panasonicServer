{"version":3,"sources":["util/constants.ts","components/numberpad.tsx","components/BlendDialog.tsx","components/CommandInterfaces/OSDPostion.tsx","components/CommandInterfaces/Testpattern.tsx","components/CommandInterfaces/BackColor.tsx","components/MenuDialog.tsx","components/Alert.tsx","components/CommandInterfaces/LensCal.tsx","components/LensDialog.tsx","components/CommandInterfaces/Power.tsx","components/CommandInterfaces/Shutter.tsx","components/ProjectorSetupDialog.tsx","components/CommandPad.tsx","components/Worlds.tsx","util/CMD.ts","components/PJ.tsx","components/Programmer.tsx","util/getter.ts","components/PatchAddDialog.tsx","components/Patch.tsx","components/ConfigDialog.tsx","util/SocketListener.ts","App.tsx","prefrences.ts","components/ControlMenu.tsx","components/Disconnected.tsx","LoadPage.tsx","serviceWorker.js","reportWebVitals.js","index.js"],"names":["pjServer","process","ioCommands","commands","menuCommands","ControlCommands","PROJECTOR_MAKES","ConfigHeaders","keys","THRU","DEL","CLEAR","NEXT","IF_PROG","BACK","ENTER","defaultConfig","Patch","Location","LastUpdated","Date","Polling","Polling_Interval","Groups","0","name","group","ButtonStyle","width","height","Numberpad","props","handlePad","getButtons","C","map","key","Button","variant","style","padding","size","onClick","e","Paper","elevation","className","buttons","groups","i","length","g","slice","push","ButtonGroup","buttonGroups","BlendDialog","open","handleClose","handleCommand","buttonStyle","buttonGroupStyle","justifyContent","textAlign","margin","Dialog","onClose","aria-labelledby","DialogTitle","id","EDGE_BLENDING_ON","EDGE_BLENDING_OFF","EDGE_BLENDING_MARKERS_ON","EDGE_BLENDING_MARKERS_OFF","EDGE_BLENDING_UPPER_ON","EDGE_BLENDING_UPPER_OFF","EDGE_BLENDING_RIGHT_ON","EDGE_BLENDING_RIGHT_OFF","EDGE_BLENDING_LOWER_ON","EDGE_BLENDING_LOWER_OFF","EDGE_BLENDING_LEFT_ON","EDGE_BLENDING_LEFT_OFF","useStyles","makeStyles","theme","formControl","spacing","minWidth","selectEmpty","marginTop","OSDPostion","classes","FormControl","InputLabel","Select","labelId","value","onChange","target","MenuItem","OSD_POSITION_UPPER_LEFT","OSD_POSITION_CENTER_LEFT","OSD_POSITION_LOWER_LEFT","OSD_POSITION_TOP_CENTER","OSD_POSITION_CENTER","OSD_POSITION_LOWER_CENTER","OSD_POSITION_UPPER_RIGHT","OSD_POSITION_LOWER_RIGHT","Testpattern","TEST_PATTERN_OFF","TEST_PATTERN_WHITE","TEST_PATTERN_BLACK","TEST_PATTERN_FOCUS_RED","BackColor","BACK_COLOR_BLUE","BACK_COLOR_BLACK","BACK_COLOR_DEFAULT_LOGO","BACK_COLOR_USER_LOGO","MenuDialog","MENU","MENU_DEFAULT_KEY","MENU_UP_KEY","MENU_LEFT_KEY","MENU_ENTER_KEY","MENU_RIGHT_KEY","MENU_DOWN_KEY","Alert","command","header","message","handleClick","approval","aria-describedby","DialogContent","DialogContentText","DialogActions","color","autoFocus","LensCal","useState","openHomeAlert","setOpenHomeAlert","openCalAlert","setOpenCalAlert","LENS_POSTION_HOME","getButton","cmd","text","LENS_SHIFT_H_FN","LENS_SHIFT_H_NN","LENS_SHIFT_H_SN","LENS_SHIFT_H_SP","LENS_SHIFT_H_NP","LENS_SHIFT_H_FP","LENS_SHIFT_V_FN","LENS_SHIFT_V_NN","LENS_SHIFT_V_SN","LENS_SHIFT_V_SP","LENS_SHIFT_V_NP","LENS_SHIFT_V_FP","LENS_FOCUS_FN","LENS_FOCUS_NN","LENS_FOCUS_SN","LENS_FOCUS_SP","LENS_FOCUS_NP","LENS_FOCUS_FP","LENS_ZOOM_FN","LENS_ZOOM_NN","LENS_ZOOM_SN","LENS_ZOOM_SP","LENS_ZOOM_NP","LENS_ZOOM_FP","Power","openPowerOnAlert","setOpenPowerOnAlert","openPowerOffAlert","setOpenPowerOffAlert","POWER_OFF","POWER_ON","Shutter","SHUTTER_CLOSED","SHUTTER_OPEN","ProjectorSetup","setName","PROJECTOR_NAME","TextField","CommandPad","active","menuOpen","setMenuOpen","blendOpen","setBlendOpen","lensOpen","setLensOpen","pjSetupOpen","setPJSetupOpen","useEffect","disabled","Worlds","expanded","setExpanded","setWorld","selected","Accordion","AccordionSummary","expandIcon","aria-controls","Typography","AccordionDetails","Object","entries","s","parseInt","processCMD","cmdLine","world","cmds","split","cmdArray","getCommandArray","forEach","newSelected","includes","filter","n","handleSelected","handleThru","indexOf","c","toString","negative","start","end","console","log","concat","groupEnd","array","num","findInt","reset","PJ","pj","darkMode","handleTableSelect","time","setTime","setInterval","getTime","clearInterval","bStyle","b","goodWord","lastSeen","t","now","Math","floor","TableRow","TableCell","background","shutter","edgeBlending","regions","edgeBlendingUpper","edgeBlendingRight","edgeBlendingLower","edgeBlendingLeft","borderStyle","borderColor","fontSize","marginLeft","edgeBlendingMarker","blendRegion","testPattren","lampStatus","hdmiResolution","hmdiSignalLevel","inputSignalName_Main","table","maxHeight","Programmer","prefs","pjs","status","getStyle","good","backgroundColor","TableContainer","component","Table","TableHead","blend","blendMarker","hdmiInput","signalName","TableBody","sort","pjID","online","power","error","backColor","osdPostion","showOnlySelected","goFetch","query","a","fetchString","fetch","mode","res","ok","json","marginBottom","PatchAddDialog","addPJs","currentPatch","PANASONIC","make","setMake","err","Amount","setAmount","values","getMaxID","StartID","setID","BaseIP","setBaseIP","UserName","setUserName","Pass","setPass","Port","setPort","checkOverlap","startID","amount","fullWidth","type","label","isNaN","helperText","handleBaseIP","auth","fab","position","bottom","right","columns","field","headerName","hide","patch","setPatch","addWindowOpen","setAddWindowOpen","setEditWindowOpen","setSelected","deleteWindowOpen","setDeleteWindowOpen","newPJs","rows","checkboxSelection","selectionModel","onSelectionModelChange","aria-label","newPatch","assign","newSelect","getSelectedString","baseIP","port","ip_address","v4","appBar","title","flex","root","Transition","forwardRef","ref","Slide","direction","ConfigDialog","config","socket","polling","setPolling","pollingInterval","setPollingInterval","fullScreen","TransitionComponent","onSubmit","event","preventDefault","form","document","querySelector","data","FormData","pair","v","POLLING","POLLING_INTERVAL","setConfig","emit","EMITTING_PATCH","SocketPatcher","AppBar","Toolbar","IconButton","edge","LOCATION","defaultValue","FormControlLabel","labelPlacement","control","Switch","checked","p","App","Props","openConfig","handleCloseConfig","setCMD","undefined","vartiable","setVartiable","setActive","activeIndex","setActiveIndex","clearPresses","setClearPressed","setPJs","pollingProgress","setPollingProgress","setCommand","rigStatus","setStatus","on","EMITTING_PJS","EMITTING_STATUS","REQUEST_UPDATE","REQUESTING_UPDATE","REQUEST_CONFIG","REQUESTING_CONFIG","EMITTING_CONFIG","groupCollapsed","EMITTING_POLLING_PROGRESS","progress","SocketListener","EMITTING_CMD","pjIDs","clearProgrammerAfterCMD","onkeyup","handleCMD","handleNext","handleBack","getGroup","finalCMD","diffrentPJs","groupID","rel","href","LinearProgress","Container","float","Grid","container","item","InputLabelProps","shrink","cookieName","defaultPrefs","setCookie","Cookies","set","getCookie","get","getPrefrences","JSON","parse","d","ControlMenu","handleSettings","handleOpenConfig","divRef","useRef","setOpen","handleChange","CLEAR_SELECTED_ON_CMD","IF_SELECTED","DARK_MODE","button","aria-haspopup","Menu","keepMounted","anchorEl","current","Disconnected","CircularProgress","Settings","React","createContext","Pref","createStyles","backdrop","zIndex","drawer","LoadPage","prefersDarkMode","useMediaQuery","prefres","setPrefs","setOpenConfig","socketConnected","setSocketConnected","socketIOClinet","createMuiTheme","palette","ThemeProvider","Provider","CssBaseline","Backdrop","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","onUpdate","onSuccess","catch","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById","URL","origin","addEventListener","headers","response","contentType","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.a234b9dd.chunk.js","sourcesContent":["import { CSSProperties } from \"react\";\r\n\r\n\r\nexport let pjServer = 'http://localhost:3000/'\r\n//export let pjServer = 'http://192.168.10.249:3000/'\r\nif(process.env.NODE_ENV ==='production'){\r\n    pjServer = process.env.REACT_APP_SERVER? process.env.REACT_APP_SERVER : 'localhost:3000';\r\n}\r\n\r\n\r\nexport const fetchSettings: RequestInit = {\r\n    method:'get',\r\n    headers:{\r\n        \r\n    }\r\n   \r\n}\r\n\r\n\r\nexport type PJs = Record<number,PJ_OBJ>\r\n\r\nexport enum ioCommands {\r\n    REQUEST_UPDATE = 'REQUEST_UPDATE',\r\n    REQUESTING_UPDATE = 'REQUESTING_UPDATE',\r\n    EMITTING_PJS = 'EMITTING_PJS',\r\n    EMITTING_STATUS = 'EMITTING_STATUS',\r\n    REQUEST_CONFIG = 'REQUEST_CONFIG',\r\n    EMITTING_CONFIG = 'EMITTING_CONFIG',\r\n    REQUESTING_CONFIG = 'REQUESTING_CONFIG', \r\n    EMITTING_PATCH = 'EMITTING_PATCH',\r\n    EMITTING_POLLING_PROGRESS = 'EMITTING_POLLING_PROGRESS',\r\n    EMITTING_CMD = 'EMITTING_CMD'\r\n}\r\nexport interface PJ_OBJ{\r\n    id: number,\r\n    power: string,\r\n    name: string,\r\n    shutter: string,\r\n    online: string,\r\n    lastSeen: number,\r\n    lampStatus: string,\r\n    edgeBlending: string,\r\n    edgeBlendingMarker: string,\r\n    edgeBlendingUpper: string,\r\n    edgeBlendingLower: string,\r\n    edgeBlendingRight: string,\r\n    edgeBlendingLeft: string,\r\n    testPattren: string,\r\n    backColor: string,\r\n    hmdiSignalLevel : string,\r\n    hdmiResolution: string,\r\n    osdPostion: string,\r\n    inputSignalName_Main: string,\r\n    error: string\r\n}\r\nexport interface RIG_STATUS{\r\n    online: boolean,\r\n    power: boolean,\r\n    shutter: boolean,\r\n    blend: boolean,\r\n    blendMarker: boolean,\r\n    testPattren: boolean,\r\n    lampStatus: boolean,\r\n    hdmiInput:boolean,\r\n    signalName: boolean\r\n}\r\n\r\nexport enum commands{\r\n    THRU = 'THRU',\r\n    DEL = 'DEL',\r\n    CLEAR = 'CLEAR',\r\n    ENTER = 'ENTER',\r\n    NEXT = 'NEXT',\r\n    BACK = 'BACK',\r\n    IF_PROG = 'IF_PROG'\r\n\r\n}\r\n\r\nexport enum menuCommands{\r\n    CLEAR_SELECTED_ON_CMD = 'CLEAR_SELECTED_ON_CMD',\r\n    IF_SELECTED = 'IF_SELECTED',\r\n    DARK_MODE = 'DARK_MODE'\r\n}\r\nexport const keys= ['7','8','9','4','5','6','1','2','3','-','0','+',commands.THRU,commands.DEL, commands.CLEAR, commands.NEXT, commands.IF_PROG, commands.BACK, commands.ENTER]\r\n\r\n\r\nexport enum ControlCommands {\r\n    POWER_OFF = 'POWER_OFF',\r\n    POWER_ON = 'POWER_ON',\r\n    SHUTTER_CLOSED = 'SHUTTER_CLOSED',\r\n    SHUTTER_OPEN = 'SHUTTER_OPEN',\r\n    EDGE_BLENDING_OFF = 'EDGE_BLENDING_OFF',\r\n    EDGE_BLENDING_ON = 'EDGE_BLENDING_ON',\r\n    EDGE_BLENDING_MARKERS_ON = 'EDGE_BLENDING_MARKERS_ON',\r\n    EDGE_BLENDING_MARKERS_OFF = 'EDGE_BLENDING_MARKERS_OFF',\r\n    TEST_PATTERN_OFF = 'TEST_PATTERN_OFF',\r\n    TEST_PATTERN_WHITE = 'TEST_PATTERN_WHITE',\r\n    TEST_PATTERN_BLACK = 'TEST_PATTERN_BLACK',\r\n    TEST_PATTERN_FOCUS_RED = 'TEST_PATTERN_FOCUS_RED',\r\n    MENU = 'MENU',\r\n    MENU_DOWN_KEY = 'MENU_DOWN_KEY',\r\n    MENU_UP_KEY = 'MENU_UP_KEY',\r\n    MENU_RIGHT_KEY = 'MENU_RIGHT_KEY',\r\n    MENU_LEFT_KEY = 'MENU_LEFT_KEY',\r\n    MENU_DEFAULT_KEY = 'MENU_DEFAULT_KEY',\r\n    MENU_ENTER_KEY = 'MENU_ENTER_KEY',\r\n    EDGE_BLENDING_UPPER_ON = 'EDGE_BLENDING_UPPER_ON',\r\n    EDGE_BLENDING_UPPER_OFF = 'EDGE_BLENDING_UPPER_OFF',\r\n    EDGE_BLENDING_LOWER_OFF = 'EDGE_BLENDING_LOWER_OFF',\r\n    EDGE_BLENDING_LOWER_ON = 'EDGE_BLENDING_LOWER_ON',\r\n    EDGE_BLENDING_RIGHT_OFF = 'EDGE_BLENDING_RIGHT_OFF',\r\n    EDGE_BLENDING_RIGHT_ON = 'EDGE_BLENDING_RIGHT_ON',\r\n    EDGE_BLENDING_LEFT_OFF = 'EDGE_BLENDING_LEFT_OFF',\r\n    EDGE_BLENDING_LEFT_ON = 'EDGE_BLENDING_LEFT_ON',\r\n    OSD_POSITION_UPPER_LEFT = 'OSD_POSITION_UPPER_LEFT',\r\n    OSD_POSITION_CENTER_LEFT = 'OSD_POSITION_CENTER_LEFT',\r\n    OSD_POSITION_LOWER_LEFT = 'OSD_POSITION_LOWER_LEFT',\r\n    OSD_POSITION_TOP_CENTER = 'OSD_POSITION_TOP_CENTER',\r\n    OSD_POSITION_CENTER = 'OSD_POSITION_CENTER',\r\n    OSD_POSITION_LOWER_CENTER = 'OSD_POSITION_LOWER_CENTER',\r\n    OSD_POSITION_UPPER_RIGHT = 'OSD_POSITION_UPPER_RIGHT',\r\n    OSD_POSITION_CENTER_RIGHT = 'OSD_POSITION_CENTER_RIGHT',\r\n    OSD_POSITION_LOWER_RIGHT = 'OSD_POSITION_LOWER_RIGHT',\r\n    PROJECTOR_NAME = 'PROJECTOR_NAME',\r\n    NUMBER_KEY_0 = 'NUMBER_KEY_0',\r\n    NUMBER_KEY_1 = 'NUMBER_KEY_1',\r\n    NUMBER_KEY_2 = 'NUMBER_KEY_2',\r\n    NUMBER_KEY_3 = 'NUMBER_KEY_3',\r\n    NUMBER_KEY_4 = 'NUMBER_KEY_4',\r\n    NUMBER_KEY_5 = 'NUMBER_KEY_5',\r\n    NUMBER_KEY_6 = 'NUMBER_KEY_6',\r\n    NUMBER_KEY_7 = 'NUMBER_KEY_7',\r\n    NUMBER_KEY_8 = 'NUMBER_KEY_8',\r\n    NUMBER_KEY_9 = 'NUMBER_KEY_9',\r\n    LENS_POSTION_HOME = 'LENS_POSTION_HOME',\r\n    LENS_CALIBRATION = 'LENS_CALIBRATION',\r\n    LENS_SHIFT_H_SP = 'LENS_SHIFT_H_SP',\r\n    LENS_SHIFT_H_SN = 'LENS_SHIFT_H_SN',\r\n    LENS_SHIFT_H_NP = 'LENS_SHIFT_H_NP',\r\n    LENS_SHIFT_H_NN = 'LENS_SHIFT_H_NN',\r\n    LENS_SHIFT_H_FP = 'LENS_SHIFT_H_FP',\r\n    LENS_SHIFT_H_FN = 'LENS_SHIFT_H_FN',\r\n    LENS_SHIFT_V_SP = 'LENS_SHIFT_V_SP',\r\n    LENS_SHIFT_V_SN = 'LENS_SHIFT_V_SN',\r\n    LENS_SHIFT_V_NP = 'LENS_SHIFT_V_NP',\r\n    LENS_SHIFT_V_NN = 'LENS_SHIFT_V_NN',\r\n    LENS_SHIFT_V_FP = 'LENS_SHIFT_V_FP',\r\n    LENS_SHIFT_V_FN = 'LENS_SHIFT_V_FN',\r\n    LENS_FOCUS_SP = 'LENS_FOCUS_SP',\r\n    LENS_FOCUS_SN = 'LENS_FOCUS_SN',\r\n    LENS_FOCUS_NP = 'LENS_FOCUS_NP',\r\n    LENS_FOCUS_NN = 'LENS_FOCUS_NN',\r\n    LENS_FOCUS_FP = 'LENS_FOCUS_FP',\r\n    LENS_FOCUS_FN = 'LENS_FOCUS_FN',\r\n    LENS_ZOOM_SP = 'LENS_ZOOM_SP',\r\n    LENS_ZOOM_SN = 'LENS_ZOOM_SN',\r\n    LENS_ZOOM_NP = 'LENS_ZOOM_NP',\r\n    LENS_ZOOM_NN = 'LENS_ZOOM_NN',\r\n    LENS_ZOOM_FP = 'LENS_ZOOM_FP',\r\n    LENS_ZOOM_FN = 'LENS_ZOOM_FN',\r\n    BACK_COLOR_BLUE = 'BACK_COLOR_BLUE',\r\n    BACK_COLOR_BLACK = 'BACK_COLOR_BLACK',\r\n    BACK_COLOR_USER_LOGO = 'BACK_COLOR_USER_LOGO',\r\n    BACK_COLOR_DEFAULT_LOGO = 'BACK_COLOR_DEFAULT_LOGO'\r\n\r\n\r\n}\r\n\r\nexport type ControlKeys = keyof typeof ControlCommands\r\n\r\nexport enum PROJECTOR_MAKES {\r\n    PANASONIC = 'PANASONIC'\r\n}\r\n\r\n\r\n\r\nexport type PROJECTOR_MAKE = keyof typeof PROJECTOR_MAKES\r\n\r\n\r\nexport enum ConfigHeaders{\r\n    LOCATION = 'LOCATION',\r\n    LAST_UPDATED = 'LAST_UPDATED',\r\n    POLLING = 'POLLING',\r\n    POLLING_INTERVAL = 'POLLING_INTERVAL',\r\n    PATCH = 'PATCH'\r\n    \r\n}\r\ninterface Projector{\r\n    ip_address: string,\r\n    port: number,\r\n    auth: string,\r\n    make: keyof typeof PROJECTOR_MAKES,\r\n    id: number\r\n}\r\nexport type Patch = Record<string,Projector>\r\nexport type Group = {name: string, group: number[]}\r\nexport type Groups = Record<number, Group>\r\nexport interface Config {\r\n    Patch: Patch,\r\n    Location: string,\r\n    LastUpdated: string,\r\n    Polling: boolean,\r\n    Polling_Interval: number,\r\n    Groups: Groups\r\n}\r\n\r\n\r\nexport type ConfigKeys = keyof typeof ConfigHeaders\r\nexport const defaultConfig: Config = {\r\n    Patch: {},\r\n    Location: '',\r\n    LastUpdated: Date(),\r\n    Polling: false,\r\n    Polling_Interval: 60000,\r\n    Groups: {0:{name:'All',group:[]}}\r\n}\r\n\r\nexport type HandleCommand = (cmd: ControlKeys, text?: string )=> void\r\n\r\nexport const ButtonStyle: CSSProperties={\r\n\r\n    width: '150px',\r\n    height: '50px'\r\n\r\n}","import {Button, ButtonGroup, Paper} from '@material-ui/core'\r\nimport './numberpad.css'\r\n\r\nimport * as C from '../util/constants'\r\ninterface numberpad_props{\r\n    handlePad: (e: string)=>void\r\n}\r\nexport default function Numberpad(props:numberpad_props){\r\n    const {handlePad} =props\r\n    \r\n    const getButtons=()=>{\r\n     \r\n        return C.keys.map(key=>{\r\n            return <Button variant=\"contained\" style={{padding: '10px', width: '75px'}} size={'large'} key={key} onClick={(e)=>handlePad(key)} >{key}</Button>     \r\n        })\r\n    }\r\n\r\n    const buttonGroups=()=>{\r\n        let buttons = getButtons()\r\n        let groups =[]\r\n        let chunk = 3\r\n        for(let i=0; i<=buttons.length-chunk; i+=chunk){\r\n           \r\n            let g = buttons.slice(i,chunk+i)\r\n           \r\n            groups.push(\r\n                <ButtonGroup key={'pad_group'+i}>\r\n                   {g}\r\n                </ButtonGroup>\r\n             \r\n            )\r\n        }\r\n        return groups\r\n    }\r\n    return (\r\n        <Paper elevation={1} className='pad'>\r\n            \r\n            {buttonGroups()}\r\n            {getButtons()[C.keys.length-1]}\r\n            \r\n        </Paper>\r\n\r\n    )\r\n}","import { Dialog, DialogTitle, Button, ButtonGroup } from \"@material-ui/core\";\r\nimport { CSSProperties } from \"react\";\r\nimport { ControlKeys, ControlCommands } from '../util/constants'\r\ninterface BlendDialog_Props {\r\n    open: boolean,\r\n    handleClose: () => void,\r\n    handleCommand: (e: ControlKeys) => void\r\n}\r\n\r\nexport default function BlendDialog(props: BlendDialog_Props) {\r\n    const { open, handleClose, handleCommand } = props\r\n    const buttonStyle: CSSProperties = {\r\n        padding: '20px',\r\n        width: '140px'\r\n\r\n       \r\n    }\r\n    const buttonGroupStyle: CSSProperties = {\r\n        justifyContent: 'center',\r\n        textAlign: 'center',\r\n        margin: 'auto'\r\n       \r\n        \r\n    }\r\n    return (\r\n        <Dialog key='blend_dialog'  onClose={handleClose} aria-labelledby=\"simple-dialog-title\" open={open}>\r\n            <DialogTitle style={buttonGroupStyle} key='menu_dialog_title' id=\"simple-dialog-title\">Blending</DialogTitle>\r\n            <div key='blend_div' style={{width:300, justifyContent: 'center', textAlign: 'center'}}>\r\n            <ButtonGroup style={buttonGroupStyle} key='blend_main_keys' variant=\"outlined\">\r\n                <Button style={buttonStyle} key='blend_on' onClick={(e) => handleCommand(ControlCommands.EDGE_BLENDING_ON)} >Edge Blend On</Button>\r\n                <Button style={buttonStyle} key='blend_off' onClick={(e) => handleCommand(ControlCommands.EDGE_BLENDING_OFF)} >Edge Blend Off</Button>\r\n            </ButtonGroup>\r\n\r\n            <br></br>\r\n\r\n            <ButtonGroup style={buttonGroupStyle} key='makers_main_keys' variant=\"outlined\">\r\n                <Button style={buttonStyle} key='markers_on' onClick={(e) => handleCommand(ControlCommands.EDGE_BLENDING_MARKERS_ON)} >Markers On</Button>\r\n                <Button style={buttonStyle} key='markers_off' onClick={(e) => handleCommand(ControlCommands.EDGE_BLENDING_MARKERS_OFF)} >Markers Off</Button>\r\n            </ButtonGroup>\r\n\r\n            <br></br>\r\n\r\n            <ButtonGroup style={buttonGroupStyle} key='upper_keys' variant=\"outlined\">\r\n                <Button style={buttonStyle} key='upper_on' onClick={(e) => handleCommand(ControlCommands.EDGE_BLENDING_UPPER_ON)} >Uppere On</Button>\r\n                <Button style={buttonStyle} key='upper_off' onClick={(e) => handleCommand(ControlCommands.EDGE_BLENDING_UPPER_OFF)} >Uppper Off</Button>\r\n            </ButtonGroup>\r\n\r\n            <ButtonGroup style={buttonGroupStyle} key='right_keys' variant=\"outlined\">\r\n                <Button style={buttonStyle} key='right_on' onClick={(e) => handleCommand(ControlCommands.EDGE_BLENDING_RIGHT_ON)} >Right On</Button>\r\n                <Button style={buttonStyle} key='right_off' onClick={(e) => handleCommand(ControlCommands.EDGE_BLENDING_RIGHT_OFF)} >Right Off</Button>\r\n            </ButtonGroup>\r\n\r\n            <ButtonGroup style={buttonGroupStyle} key='lower_keys' variant=\"outlined\">\r\n                <Button style={buttonStyle} key='lower_on' onClick={(e) => handleCommand(ControlCommands.EDGE_BLENDING_LOWER_ON)} >Lower On</Button>\r\n                <Button style={buttonStyle} key='lower_off' onClick={(e) => handleCommand(ControlCommands.EDGE_BLENDING_LOWER_OFF)} >Lower Off</Button>\r\n            </ButtonGroup>\r\n\r\n            <ButtonGroup style={buttonGroupStyle} key='left_keys' variant=\"outlined\">\r\n                <Button style={buttonStyle} key='left_on' onClick={(e) => handleCommand(ControlCommands.EDGE_BLENDING_LEFT_ON)} >Left On</Button>\r\n                <Button style={buttonStyle} key='left_off' onClick={(e) => handleCommand(ControlCommands.EDGE_BLENDING_LEFT_OFF)} >Left Off</Button>\r\n            </ButtonGroup>\r\n            </div>\r\n        </Dialog>\r\n    );\r\n}","import {ControlKeys, ControlCommands} from '../../util/constants'\r\nimport {FormControl, InputLabel, Select, MenuItem, makeStyles} from '@material-ui/core'\r\n\r\ninterface OSDProps{\r\n    handleCommand: (e: ControlKeys) => void\r\n}\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    formControl: {\r\n      margin: theme.spacing(1),\r\n      minWidth: 120,\r\n    },\r\n    selectEmpty: {\r\n      marginTop: theme.spacing(2),\r\n    },\r\n  }));\r\nexport default function OSDPostion(props: OSDProps){\r\n    const {handleCommand} = props\r\n    const classes = useStyles()\r\n\r\n    return (\r\n        <>\r\n    <FormControl className={classes.formControl}>\r\n    <InputLabel id='osd_position'>OSD Position</InputLabel>\r\n    <Select labelId='osd_position' id='osd_postion'\r\n     value={''} onChange={((e)=> handleCommand(e.target.value as ControlKeys))}>\r\n         <MenuItem value={ControlCommands.OSD_POSITION_UPPER_LEFT}>Upper Left</MenuItem>\r\n         <MenuItem value={ControlCommands.OSD_POSITION_CENTER_LEFT}>Center Left</MenuItem>\r\n         <MenuItem value={ControlCommands.OSD_POSITION_LOWER_LEFT}>Lower Left</MenuItem>\r\n         <MenuItem value={ControlCommands.OSD_POSITION_TOP_CENTER}>Top Center</MenuItem>\r\n         <MenuItem value={ControlCommands.OSD_POSITION_CENTER}>Center</MenuItem>\r\n         <MenuItem value={ControlCommands.OSD_POSITION_LOWER_CENTER}>Lower Center</MenuItem>\r\n         <MenuItem value={ControlCommands.OSD_POSITION_UPPER_RIGHT}>Upper Right</MenuItem>\r\n         <MenuItem value={ControlCommands.OSD_POSITION_LOWER_RIGHT}>Lower Right</MenuItem>\r\n     </Select>\r\n     \r\n</FormControl>\r\n</> )\r\n}","import { ControlKeys, ControlCommands } from '../../util/constants'\r\nimport { FormControl, InputLabel, Select, MenuItem, makeStyles } from '@material-ui/core'\r\n\r\ninterface TestPatterProps {\r\n    handleCommand: (e: ControlKeys) => void\r\n}\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    formControl: {\r\n        margin: theme.spacing(1),\r\n        minWidth: 120,\r\n    },\r\n    selectEmpty: {\r\n        marginTop: theme.spacing(2),\r\n    },\r\n}));\r\nexport default function Testpattern(props: TestPatterProps) {\r\n    const { handleCommand } = props\r\n    const classes = useStyles()\r\n\r\n    return (\r\n        <>\r\n            <FormControl className={classes.formControl}>\r\n                <InputLabel id='test_pattren'>Test Pattren</InputLabel>\r\n                <Select labelId='test_pattren' id='test_pattren_select'\r\n                    value={''} onChange={((e) => handleCommand(e.target.value as ControlKeys))}>\r\n                    <MenuItem value={ControlCommands.TEST_PATTERN_OFF}>Off</MenuItem>\r\n                    <MenuItem value={ControlCommands.TEST_PATTERN_WHITE}>White</MenuItem>\r\n                    <MenuItem value={ControlCommands.TEST_PATTERN_BLACK}>Black</MenuItem>\r\n                    <MenuItem value={ControlCommands.TEST_PATTERN_FOCUS_RED}>Focus Red</MenuItem>\r\n                </Select>\r\n\r\n            </FormControl>\r\n        </>)\r\n}","import {ControlKeys, ControlCommands} from '../../util/constants'\r\nimport {FormControl, InputLabel, Select, MenuItem, makeStyles} from '@material-ui/core'\r\n\r\ninterface Props{\r\n    handleCommand: (e: ControlKeys) => void\r\n}\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    formControl: {\r\n      margin: theme.spacing(1),\r\n      minWidth: 120,\r\n    },\r\n    selectEmpty: {\r\n      marginTop: theme.spacing(2),\r\n    },\r\n  }));\r\nexport default function BackColor(props: Props){\r\n    const {handleCommand} = props\r\n    const classes = useStyles()\r\n\r\n    return (\r\n        <>\r\n    <FormControl className={classes.formControl}>\r\n    <InputLabel id='backcolor'>Back Color</InputLabel>\r\n    <Select labelId='backcolor' id='backcolor'\r\n     value={''} onChange={((e)=> handleCommand(e.target.value as ControlKeys))}>\r\n         <MenuItem value={ControlCommands.BACK_COLOR_BLUE}>Blue</MenuItem>\r\n         <MenuItem value={ControlCommands.BACK_COLOR_BLACK}>Black</MenuItem>\r\n         <MenuItem value={ControlCommands.BACK_COLOR_DEFAULT_LOGO}>Default Logo</MenuItem>\r\n         <MenuItem value={ControlCommands.BACK_COLOR_USER_LOGO}>User Logo</MenuItem>\r\n     </Select>\r\n     \r\n</FormControl>\r\n</> )\r\n}","import { Dialog, DialogTitle, Button, ButtonGroup, FormControl,InputLabel,Select,MenuItem, makeStyles } from \"@material-ui/core\";\r\nimport { CSSProperties } from \"react\";\r\nimport { ControlKeys, ControlCommands } from '../util/constants'\r\nimport OSDPostion from \"./CommandInterfaces/OSDPostion\";\r\nimport Testpattern from \"./CommandInterfaces/Testpattern\";\r\nimport BackColor from './CommandInterfaces/BackColor'\r\ninterface MenuDialog_Props {\r\n    open: boolean,\r\n    handleClose: () => void,\r\n    handleCommand: (e: ControlKeys) => void\r\n}\r\n\r\nexport default function MenuDialog(props: MenuDialog_Props) {\r\n    const { open, handleClose, handleCommand } = props\r\n   \r\n    const buttonStyle: CSSProperties = {\r\n        padding: '20px',\r\n        width: '100px',\r\n       \r\n    }\r\n    const buttonGroupStyle: CSSProperties = {\r\n        justifyContent: 'center',\r\n        textAlign: 'center'\r\n        \r\n    }\r\n    return (\r\n        <Dialog key='menu_dialog' onClose={handleClose} aria-labelledby=\"simple-dialog-title\" open={open}>\r\n            <DialogTitle style={buttonGroupStyle} key='menu_dialog_title' id=\"simple-dialog-title\">Menu Commands</DialogTitle>\r\n            <ButtonGroup style={buttonGroupStyle} key='menu_main_keys' variant=\"outlined\">\r\n                <Button style={buttonStyle} key='menu' onClick={(e) => handleCommand(ControlCommands.MENU)} >Menu</Button>\r\n                <Button style={buttonStyle} key='enter' onClick={(e) => handleCommand(ControlCommands.MENU_DEFAULT_KEY)} >Default</Button>\r\n            </ButtonGroup>\r\n\r\n            <br></br>\r\n\r\n            <ButtonGroup style={buttonGroupStyle} key='menu_row1_keys' variant=\"outlined\">\r\n                <Button style={buttonStyle} key='up' onClick={(e) => handleCommand(ControlCommands.MENU_UP_KEY)} >Up</Button>\r\n            </ButtonGroup>\r\n\r\n            <ButtonGroup style={buttonGroupStyle} key='menu_row2_keys' variant=\"outlined\">\r\n                <Button style={buttonStyle} key='left' onClick={(e) => handleCommand(ControlCommands.MENU_LEFT_KEY)} >Left</Button>\r\n                <Button style={buttonStyle} key='enter' onClick={(e) => handleCommand(ControlCommands.MENU_ENTER_KEY)} >Enter</Button>\r\n                <Button style={buttonStyle} key='right' onClick={(e) => handleCommand(ControlCommands.MENU_RIGHT_KEY)} >Right</Button>\r\n            </ButtonGroup>\r\n\r\n            <ButtonGroup style={buttonGroupStyle} key='menu_row3_keys' variant=\"outlined\">\r\n                <Button style={buttonStyle} key='down' onClick={(e) => handleCommand(ControlCommands.MENU_DOWN_KEY)} >Down</Button>\r\n            </ButtonGroup>\r\n\r\n           <Testpattern handleCommand={handleCommand} />\r\n           <OSDPostion handleCommand={handleCommand}/>\r\n           <BackColor handleCommand={handleCommand}/>\r\n\r\n        </Dialog>\r\n    );\r\n}","import {Button, Dialog, DialogActions, DialogTitle, DialogContent, DialogContentText } from \"@material-ui/core\";\r\nimport { ControlKeys } from \"../util/constants\";\r\ninterface Alert_Props{\r\n    open: boolean,\r\n    handleCommand: (cmd: ControlKeys)=>void,\r\n    handleClose: ()=>void,\r\n    command: ControlKeys,\r\n    header: string,\r\n    message: string\r\n}\r\nexport default function Alert(props: Alert_Props){\r\n    const {open,handleCommand, command, handleClose, header, message} = props\r\n\r\n    const handleClick=(approval: boolean)=>{\r\n        if(approval){\r\n            handleCommand(command)\r\n        }\r\n        handleClose()\r\n\r\n    }\r\n    return (\r\n        <Dialog\r\n        open={open}\r\n        onClose={handleClose}\r\n        aria-labelledby=\"alert-dialog-title\"\r\n        aria-describedby=\"alert-dialog-description\"\r\n      >\r\n        <DialogTitle id=\"alert-dialog-title\">{header}</DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText id=\"alert-dialog-description\">\r\n            <span style={{width:'50'}}>{message}</span>\r\n          </DialogContentText>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={(e)=>handleClick(false)} color=\"primary\">\r\n            Cancle\r\n          </Button>\r\n          <Button onClick={(e)=>handleClick(true)} color=\"primary\" autoFocus>\r\n            Okay\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n        \r\n    )\r\n}","import { ButtonGroup, Button } from \"@material-ui/core\";\r\nimport { useState } from \"react\";\r\nimport { ControlKeys, ControlCommands, ButtonStyle } from \"../../util/constants\";\r\nimport Alert from \"../Alert\";\r\n\r\ninterface Props{\r\n    handleCommand: (e: ControlKeys) => void\r\n}\r\nexport default function LensCal(props: Props){\r\n    const {handleCommand} = props\r\n    const [openHomeAlert, setOpenHomeAlert]= useState(false)\r\n    const [openCalAlert, setOpenCalAlert]= useState(false)\r\n    return(\r\n        <div style={{margin:'auto'}}>\r\n        <ButtonGroup key='shutters' color=\"primary\" variant=\"outlined\">\r\n        <Button  key='home'  style={ButtonStyle}  onClick={(e) => setOpenHomeAlert(true)} >Lens Home</Button>\r\n        <Button  key='cal' style={ButtonStyle}  onClick={(e) => setOpenCalAlert(true)} >Lens Cal</Button>\r\n    </ButtonGroup>\r\n    <Alert open={openHomeAlert} handleCommand={handleCommand} handleClose={()=>setOpenHomeAlert(false)}\r\n        header='Home Lense' message='Are you sure?' command={ControlCommands.LENS_POSTION_HOME}/>\r\n        <Alert open={openCalAlert} handleCommand={handleCommand} handleClose={()=>setOpenCalAlert(false)}\r\n        header='Cal Lens' message='Are you sure?' command={ControlCommands.LENS_POSTION_HOME}/>\r\n        </div>\r\n    )\r\n}","import { Dialog, DialogTitle, Button, ButtonGroup } from \"@material-ui/core\";\r\nimport { CSSProperties } from \"react\";\r\nimport { ControlKeys, ControlCommands } from '../util/constants'\r\nimport LensCal from \"./CommandInterfaces/LensCal\";\r\ninterface MenuDialog_Props {\r\n    open: boolean,\r\n    handleClose: () => void,\r\n    handleCommand: (e: ControlKeys) => void\r\n}\r\n\r\nexport default function MenuDialog(props: MenuDialog_Props) {\r\n    const { open, handleClose, handleCommand } = props\r\n   \r\n    const buttonStyle: CSSProperties = {\r\n        padding: '20px',\r\n        width: '100px',\r\n       \r\n    }\r\n    const buttonGroupStyle: CSSProperties = {\r\n        justifyContent: 'center',\r\n        textAlign: 'center'\r\n        \r\n    }\r\n    const getButton=(cmd: ControlKeys, text: string)=>{\r\n        return <Button style={buttonStyle} key={text} onClick={(e)=>handleCommand(cmd)}>{text}</Button>\r\n    }\r\n    return (\r\n        <Dialog key='lens_dialog' onClose={handleClose} aria-labelledby=\"simple-dialog-title\" open={open}>\r\n            <DialogTitle style={buttonGroupStyle} key='menu_dialog_title' id=\"simple-dialog-title\">Lens Commands</DialogTitle>\r\n            <LensCal handleCommand={handleCommand} />\r\n            <h2 style={{margin:'auto'}}> Shift </h2>\r\n            <ButtonGroup style={buttonGroupStyle} key='h_shif' variant=\"outlined\">\r\n            {getButton(ControlCommands.LENS_SHIFT_H_FN, '<<<')}\r\n            {getButton(ControlCommands.LENS_SHIFT_H_NN, '<<')}\r\n            {getButton(ControlCommands.LENS_SHIFT_H_SN, '<')}\r\n                {getButton(ControlCommands.LENS_SHIFT_H_SP, '>')}\r\n                {getButton(ControlCommands.LENS_SHIFT_H_NP, '>>')}\r\n                {getButton(ControlCommands.LENS_SHIFT_H_FP, '>>>')}\r\n            </ButtonGroup>\r\n            <br></br>\r\n            <ButtonGroup style={buttonGroupStyle} key='v_shift' variant=\"outlined\">\r\n            {getButton(ControlCommands.LENS_SHIFT_V_FN, '^^^')}\r\n            {getButton(ControlCommands.LENS_SHIFT_V_NN, '^^')}\r\n            {getButton(ControlCommands.LENS_SHIFT_V_SN, '^')}\r\n                {getButton(ControlCommands.LENS_SHIFT_V_SP, 'v')}\r\n                {getButton(ControlCommands.LENS_SHIFT_V_NP, 'vv')}\r\n                {getButton(ControlCommands.LENS_SHIFT_V_FP, 'vvv')}\r\n            </ButtonGroup>\r\n            <br></br>\r\n            <h2 style={{margin:'auto'}}> Focus </h2>\r\n            <ButtonGroup style={buttonGroupStyle} key='foucs' variant=\"outlined\">\r\n            {getButton(ControlCommands.LENS_FOCUS_FN, '<<<\\r')}\r\n            {getButton(ControlCommands.LENS_FOCUS_NN, '<<\\r')}\r\n            {getButton(ControlCommands.LENS_FOCUS_SN, '<\\r')}\r\n            {getButton(ControlCommands.LENS_FOCUS_SP, '>\\r')}\r\n            {getButton(ControlCommands.LENS_FOCUS_NP, '>>\\r')}\r\n            {getButton(ControlCommands.LENS_FOCUS_FP, '>>>\\r')}\r\n            </ButtonGroup>\r\n            <br></br>\r\n            <h2 style={{margin:'auto'}}> Zoom </h2>\r\n            <ButtonGroup style={buttonGroupStyle} key='zoom' variant=\"outlined\">\r\n            {getButton(ControlCommands.LENS_ZOOM_FN, '---')}\r\n            {getButton(ControlCommands.LENS_ZOOM_NN, '--')}\r\n            {getButton(ControlCommands.LENS_ZOOM_SN, '-')}\r\n            {getButton(ControlCommands.LENS_ZOOM_SP, '+')}\r\n            {getButton(ControlCommands.LENS_ZOOM_NP, '++')}\r\n            {getButton(ControlCommands.LENS_ZOOM_FP, '+++')}\r\n            </ButtonGroup>\r\n\r\n\r\n        </Dialog>\r\n    );\r\n}","import { ButtonGroup, Button } from \"@material-ui/core\";\r\nimport { useState } from \"react\";\r\nimport { ControlKeys, ControlCommands, ButtonStyle } from \"../../util/constants\";\r\nimport Alert from \"../Alert\";\r\n\r\ninterface PowerProps{\r\n    handleCommand: (e: ControlKeys) => void\r\n}\r\nexport default function Power(props: PowerProps){\r\n    const {handleCommand} = props\r\n    const [openPowerOnAlert, setOpenPowerOnAlert]= useState(false)\r\n    const [openPowerOffAlert, setOpenPowerOffAlert]= useState(false)\r\n    return(\r\n        <>\r\n        <ButtonGroup key='shutters' color=\"primary\" variant=\"outlined\">\r\n        <Button  key='power off'  style={ButtonStyle}  onClick={(e) => setOpenPowerOffAlert(true)} >Power Off</Button>\r\n        <Button  key='power on' style={ButtonStyle}  onClick={(e) => setOpenPowerOnAlert(true)} >Power On</Button>\r\n    </ButtonGroup>\r\n    <Alert open={openPowerOffAlert} handleCommand={handleCommand} handleClose={()=>setOpenPowerOffAlert(false)}\r\n        header='Power Off' message='Are you sure?' command={ControlCommands.POWER_OFF}/>\r\n        <Alert open={openPowerOnAlert} handleCommand={handleCommand} handleClose={()=>setOpenPowerOnAlert(false)}\r\n        header='Power On' message='Are you sure?' command={ControlCommands.POWER_ON}/>\r\n        </>\r\n    )\r\n}","import { ButtonGroup, Button } from \"@material-ui/core\"\r\nimport { ControlKeys, ControlCommands, ButtonStyle } from \"../../util/constants\"\r\n\r\ninterface ShutterProps{\r\n    handleCommand: (e: ControlKeys) => void\r\n}\r\nexport default function Shutter(props: ShutterProps){\r\n    const {handleCommand} = props\r\n    return (\r\n        <ButtonGroup key='power' color=\"primary\" variant=\"outlined\">\r\n        <Button  key='shutter_on' style={ButtonStyle} onClick={(e) => handleCommand(ControlCommands.SHUTTER_CLOSED)} >Sutter Closed (i)</Button>\r\n        <Button  key='sutter_off' style={ButtonStyle}  onClick={(e) => handleCommand(ControlCommands.SHUTTER_OPEN)} >Shutter Open (o)</Button>\r\n        </ButtonGroup>\r\n    )\r\n}","import { Dialog, DialogTitle, Button, TextField } from \"@material-ui/core\";\r\nimport { CSSProperties, useState } from \"react\";\r\nimport { ControlKeys, ControlCommands, HandleCommand } from '../util/constants'\r\ninterface Props {\r\n    open: boolean,\r\n    handleClose: () => void,\r\n    handleCommand: HandleCommand\r\n}\r\n\r\nexport default function ProjectorSetup(props: Props) {\r\n    const { open, handleClose, handleCommand } = props\r\n    const [name, setName] = useState('')\r\n    const buttonStyle: CSSProperties = {\r\n        padding: '20px',\r\n        width: '100px',\r\n       \r\n    }\r\n    const buttonGroupStyle: CSSProperties = {\r\n        justifyContent: 'center',\r\n        textAlign: 'center'\r\n        \r\n    }\r\n    \r\n    const getButton=(cmd: ControlKeys, text: string, popUp: boolean)=>{\r\n\r\n        return <Button style={buttonStyle} key={text} onClick={(e)=>handleCommand(cmd,name)}>{text}</Button>\r\n    }\r\n    return (\r\n        <Dialog key='setup_dialog' onClose={handleClose} aria-labelledby=\"simple-dialog-title\" open={open}>\r\n            <DialogTitle style={buttonGroupStyle} key='menu_dialog_title' id=\"simple-dialog-title\">PJ Setup</DialogTitle>\r\n           \r\n                {getButton(ControlCommands.PROJECTOR_NAME, 'PJ Name', true)}\r\n        <TextField key='pj_name_input' value={name} onChange={(e)=>setName(e.target.value)}></TextField>\r\n\r\n        </Dialog>\r\n    );\r\n}","import { Button, Paper, ButtonGroup, FormControl, InputLabel, MenuItem, Select } from \"@material-ui/core\";\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport {CSSProperties, useState} from 'react'\r\nimport { ControlKeys, ControlCommands, ButtonStyle, HandleCommand} from \"../util/constants\";\r\nimport BlendDialog from \"./BlendDialog\";\r\nimport MenuDialog from './MenuDialog'\r\nimport LensDialog from './LensDialog'\r\nimport Power from './CommandInterfaces/Power'\r\nimport Shutter from \"./CommandInterfaces/Shutter\";\r\nimport ProjectorSetupDialog from \"./ProjectorSetupDialog\";\r\nimport { useEffect } from \"react\";\r\n\r\ninterface command_props{\r\n    handleCommand: HandleCommand\r\n    active: number[]\r\n}\r\nexport default function CommandPad(props:command_props){\r\n    const {handleCommand, active } = props\r\n    const [menuOpen, setMenuOpen] = useState(false)\r\n    const [blendOpen, setBlendOpen] = useState(false)\r\n    const [lensOpen,setLensOpen] = useState(false)\r\n    const [pjSetupOpen,setPJSetupOpen] =useState(false)\r\n\r\n    useEffect(()=>{\r\n        if(active.length!==1){\r\n            setPJSetupOpen(false)\r\n        }\r\n    },[active])\r\n    \r\n    const getPJSetup=()=>{\r\n        if(active.length===1)\r\n            return (<Button key='pj_setup' variant=\"contained\"  style={ButtonStyle} onClick={((e)=>setPJSetupOpen(!pjSetupOpen))}>PJ Setup</Button>)\r\n        \r\n            return (<Button key='pj_setup' variant=\"contained\" disabled style={ButtonStyle} onClick={((e)=>setPJSetupOpen(!pjSetupOpen))}>PJ Setup</Button>)\r\n\r\n    }\r\n    return(\r\n       <>\r\n        <Paper  key='commandKeys' style={{width:'300px'}}>\r\n           <Shutter handleCommand={handleCommand}/>\r\n            <br></br>\r\n           <Power handleCommand={handleCommand}/>\r\n            <ButtonGroup color=\"primary\" variant=\"outlined\">\r\n                <Button color=\"primary\" key='menu' variant=\"contained\" style={ButtonStyle}  onClick={(e) => setMenuOpen(!menuOpen)} >Menu</Button>\r\n                <Button color=\"primary\" key='blend' variant=\"contained\" style={ButtonStyle}  onClick={(e) => setBlendOpen(!blendOpen)} >Blend</Button>\r\n            </ButtonGroup>\r\n            <ButtonGroup color='primary' variant='outlined'>\r\n                <Button key='lens' variant=\"contained\" style={ButtonStyle} onClick={((e)=>setLensOpen(!lensOpen))}>Lens</Button>\r\n                {getPJSetup()}\r\n            </ButtonGroup>\r\n            \r\n            <MenuDialog open={menuOpen} handleClose={()=>setMenuOpen(false)} handleCommand={handleCommand}/>\r\n            <BlendDialog open={blendOpen} handleClose={()=>setBlendOpen(false)} handleCommand={handleCommand}/>\r\n            <LensDialog open={lensOpen} handleClose={()=>setLensOpen(false)} handleCommand={handleCommand} />\r\n            <ProjectorSetupDialog open={pjSetupOpen} handleClose={()=>setPJSetupOpen(false)} handleCommand={handleCommand} />\r\n        </Paper>\r\n       \r\n        </>\r\n    )\r\n}\r\n","import {Accordion, AccordionSummary,AccordionDetails,Typography, Button} from '@material-ui/core'\r\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\"\r\nimport * as C from '../util/constants'\r\nimport {useState} from 'react'\r\n\r\ninterface worlds_props{\r\n    setWorld: (g: string)=> void\r\n    name: string\r\n    groups: C.Groups\r\n    selected?: number\r\n}\r\nexport default function Worlds( props: worlds_props){\r\n    const [expanded, setExpanded]= useState(false)\r\n    const {setWorld, name, groups, selected} = props\r\n\r\n    const getWorlds = ()=>{\r\n        return Object.entries(groups).map(group=>{\r\n            let s = false\r\n            if(selected ===parseInt(group[0]))\r\n              s = true\r\n\r\n            return <Button key={group[0]} onClick={(e)=>setWorld(group[0])} variant={s?'outlined':'text'}>{group[1].name}</Button>\r\n        })\r\n    }\r\n    return (\r\n        <Accordion key={'world'+name} expanded={expanded} onChange={()=>setExpanded(!expanded)}>\r\n        <AccordionSummary\r\n          expandIcon={<ExpandMoreIcon />}\r\n          aria-controls=\"panel1bh-content\"\r\n          id=\"panel1bh-header\"\r\n        >\r\n          <Typography>{name}</Typography>\r\n          \r\n        </AccordionSummary>\r\n        <AccordionDetails>\r\n          {getWorlds()}\r\n        </AccordionDetails>\r\n      </Accordion>\r\n    )\r\n}","import * as C from './constants'\r\n\r\ntype cmdType = number | keyof typeof C.commands\r\nexport function processCMD(cmdLine: string, selected: number[], world: number[]) {\r\n    let cmds = cmdLine.split(' ')\r\n    let cmdArray: cmdType[] = []\r\n   // console.log('Processing ', cmds)\r\n    for (let i = 0; i < cmds.length; i++) {\r\n      //  console.log('Now Running', cmds[i])\r\n        if (cmds[i] === C.commands.THRU) {\r\n            cmdArray.push(C.commands.THRU)\r\n        } else {\r\n            \r\n            getCommandArray(cmds[i]).forEach(cmd => {\r\n                cmdArray.push(cmd)\r\n            })\r\n            \r\n           //cmdArray.concat(getCommandArray(cmds[i]))\r\n        }\r\n    }\r\n   // console.log('Parsing Complete', cmdArray)\r\n    selected = handleSelected( handleThru(cmdArray),selected)\r\n    selected = selected.filter(s=> world.includes(s))\r\n    \r\n //  console.log('Processing Complete', selected)\r\n    return selected\r\n}\r\n\r\nfunction handleThru(cmds: cmdType[]) {\r\n    let cmdArray: number[] = []\r\n    if (cmds.indexOf(C.commands.THRU) === 1 && cmds.length > 2) {\r\n        let negative = 1\r\n        let start = cmds[0] as number\r\n        if (start < 0) {\r\n            start = start * -1\r\n            negative = -1\r\n        }\r\n        let end = cmds[2] as number\r\n        if(end<start){\r\n          //  console.log('Running Thru Backwards',end, 'thru',start)\r\n            for (let i = start; i >= end; i--) {\r\n                console.log(i*negative)\r\n                cmdArray.push(i*negative)\r\n        }\r\n        } else{\r\n            for (let i = start; i <= end; i++) {\r\n                cmdArray.push(i*negative)\r\n        }\r\n        }\r\n        \r\n        if(cmds.length>2)\r\n            cmdArray= cmdArray.concat(handleThru(cmds.slice(3)))\r\n    } else{\r\n        return cmds.map(c=> {return parseInt(c.toString())})\r\n    }\r\n    return cmdArray\r\n}\r\n\r\nfunction handleSelected(cmds: number[], selected: number[]) {\r\n    let newSelected = selected\r\n    for (let i = 0; i < cmds.length; i++) {\r\n        let cmd = cmds[i]\r\n        if (cmd < 0 && newSelected.includes(cmd * -1)) { //Remove\r\n            //console.log('Removing ',s[i]*-1)\r\n            newSelected = newSelected.filter((n) => n !== (cmd * -1))\r\n        } else if (!newSelected.includes(cmd) && cmd > 0) {\r\n            newSelected.push(cmd)\r\n        }\r\n    }\r\n   \r\n    return newSelected\r\n}\r\n\r\nfunction getCommandArray(cmd: string) {\r\n    if (cmd.length === 0) {\r\n        console.groupEnd()\r\n        return []\r\n    }\r\n   // console.group('Processing ', cmd)\r\n\r\n    let array: number[] = []\r\n    if (cmd.slice(0, 5) === C.commands.THRU) {\r\n   //     console.log('Thru')\r\n        //return [C.commands.THRU]\r\n    } else {\r\n        let num = findInt(cmd)\r\n        array.push(num)\r\n        // console.table(array)\r\n      //  console.log(num, cmd.indexOf(num + ''))\r\n        let reduced = cmd.slice(cmd.indexOf(num + \"\") + ((num + '').length))\r\n        //console.log('Reduced',reduced)\r\n\r\n        let reset = getCommandArray(reduced)\r\n        for (let i = 0; i < reset.length; i++) {\r\n            array.push(reset[i])\r\n        }\r\n\r\n        //console.table(array)\r\n\r\n    }\r\n    //array.push(getCommandArray(c.))\r\n    return array\r\n}\r\nfunction findInt(cmd: string) {\r\n    // console.log('Finding int', c)\r\n    let i = 0\r\n    let negative = 1\r\n    if (cmd[0] === '-') {\r\n        negative = -1\r\n        cmd = cmd.slice(1)\r\n    }\r\n\r\n    // console.log('C ',c)\r\n    while (i < cmd.length) {\r\n        if (parseInt(cmd[i]) >= 0) {\r\n            i++\r\n        }\r\n        else {\r\n            i = cmd.length\r\n        }\r\n    }\r\n    // console.log('Parsed Int' ,parseInt(c.slice(0,i))*negative)\r\n    return (parseInt(cmd.slice(0, i)) * negative)\r\n}\r\n","import { TableCell, TableRow, Button } from \"@material-ui/core\"\r\nimport BorderColorIcon from '@material-ui/icons/BorderColor';\r\nimport { CSSProperties, useEffect, useState } from \"react\"\r\nimport { PJ_OBJ } from \"../util/constants\"\r\ninterface PJ_Props {\r\n    pj: PJ_OBJ,\r\n    selected: boolean,\r\n    active: boolean,\r\n    darkMode: boolean,\r\n    handleTableSelect: (id: number) => void\r\n}\r\nfunction PJ(props: PJ_Props) {\r\n    const { pj, selected, active, darkMode, handleTableSelect } = props\r\n    const [time, setTime] = useState('0')\r\n\r\n    useEffect(() => {\r\n        \r\n      //  getTime()\r\n        \r\n        let i =setInterval(getTime,1000)\r\n        \r\n        return function cleanup(){\r\n            clearInterval(i)\r\n        }\r\n       \r\n        \r\n    })\r\n\r\n    const style = () => {\r\n     //   console.log('Selected',selected, 'Active',active)\r\n        let s: CSSProperties = {\r\n            color: 'Gainsboro',\r\n            textAlign: 'center'\r\n\r\n        }\r\n        if (active) {\r\n            s.color = 'black'\r\n            s.background = 'lightgray'\r\n\r\n        } else if (selected) {\r\n            s.color = 'black'\r\n            \r\n        }\r\n        return s\r\n    }\r\n    const bStyle = (b = 'On', goodWord = 'On'):CSSProperties => {\r\n        return  {\r\n            textAlign: 'center',\r\n            margin:'auto',\r\n            color: b===goodWord? darkMode?'white' :'black' : 'red'\r\n            \r\n        }\r\n        \r\n    }\r\n    const getTime = () => {\r\n        if (pj.lastSeen < 0) {\r\n            setTime('N/A')\r\n            return \r\n        }\r\n        let t = (Date.now() - pj.lastSeen) / 1000\r\n\r\n        t = Math.floor(t)\r\n        if (t > 59) {\r\n            setTime(Math.floor(t / 60) + 'm')\r\n            return\r\n        }\r\n            setTime(t + 's')\r\n        \r\n    }\r\n\r\n    const blendRegion =()=>{\r\n        let color = ''\r\n        let regions = [pj.edgeBlendingUpper, pj.edgeBlendingRight, pj.edgeBlendingLower, pj.edgeBlendingLeft]\r\n        for(let i=0; i < regions.length; i++){\r\n            switch(regions[i]){\r\n                case 'On':\r\n                    color+= ' green'\r\n                    break;\r\n                case 'Off':\r\n                    color+= ' black'\r\n                    break\r\n                case 'Unknown':\r\n                    color+= ' yellow'\r\n                    break\r\n                default:\r\n                    color+=' red'\r\n            }\r\n        }\r\n      \r\n        return (\r\n            <p style={{ padding: 10,  margin:'auto', textAlign: 'center', borderStyle: 'solid', borderColor: color}}key={pj.id+'brbox'}> {pj.edgeBlending}\r\n             <BorderColorIcon  style={{fontSize:'15', marginLeft: '5', marginTop: 'auto', color:pj.edgeBlendingMarker==='On'?'red':'gray'}} /></p>\r\n        )\r\n    }\r\n    const getID=()=>{\r\n        return <Button> {pj.name==='Unknown'?pj.id:pj.name}</Button>\r\n    }\r\n\r\n    return (\r\n        <TableRow key={pj.id}>\r\n            <TableCell onClick={e => handleTableSelect(pj.id)} style={style()} key={pj.id + 'id'}>{getID()}</TableCell>\r\n            <TableCell style={bStyle(pj.shutter, 'Open')} key={pj.id + 'shutter'}>{pj.shutter}</TableCell>\r\n            <TableCell style={bStyle(pj.edgeBlending, 'On')} key={pj.id+\"blend\"}> {blendRegion()} </TableCell>\r\n            <TableCell style={bStyle(pj.edgeBlendingMarker, 'Off')}key={pj.id+'blendmarker'}>{pj.edgeBlendingMarker}</TableCell>\r\n            <TableCell style={bStyle(pj.testPattren, 'Off')}key={pj.id+'test'}>{pj.testPattren}</TableCell>\r\n            <TableCell style={bStyle(pj.lampStatus, 'Lamp On')} key={pj.id+'lamp'}>{pj.lampStatus}</TableCell>\r\n            <TableCell style={bStyle(pj.hdmiResolution,'1920x1200p')} key={pj.id+'hdmi'}>{pj.hdmiResolution}/{pj.hmdiSignalLevel}</TableCell>\r\n            <TableCell style={bStyle(pj.inputSignalName_Main,'1920x1200/60RB')} key={pj.id+'signal_name_main'}>{pj.inputSignalName_Main}</TableCell>\r\n            <TableCell style={bStyle()} key={pj.id + 'last'}>{time}</TableCell>\r\n        </TableRow>\r\n\r\n    )\r\n}\r\n\r\nexport default PJ\r\n\r\n//<Button className='PJ' style={{padding:'5px', margin:'5px'}} variant=\"outlined\" color=\"primary\" key={pj} >{pj}</Button>\r\n/*\r\n<TableCell style={style()}key={pj.id+'id'}>{pj.id}</TableCell>\r\n<TableCell key={pj.id+'shutter'}>{pj.shutter+''}</TableCell>\r\n<TableCell key={pj.id+'power'}>{pj.power+''}</TableCell>\r\n<TableCell key={pj.id+'online'}>{pj.online+''}</TableCell>\r\n<TableCell key={pj.id+'last'}>{(Date.now()-pj.lastSeen)/1000}</TableCell>\r\n*/","import PJ from \"./PJ\"\r\nimport * as C from '../util/constants'\r\nimport { Paper, makeStyles, Table, TableBody, TableCell, TableContainer, TableHead, TableRow} from '@material-ui/core'\r\nimport { prefres } from \"../prefrences\"\r\nimport { CSSProperties } from \"react\"\r\ninterface Programmer_Props{\r\n    selected: number[],\r\n    active: number[],\r\n    world: number[],\r\n    prefs: prefres,\r\n    status: C.RIG_STATUS,\r\n    pjs: Record<number, C.PJ_OBJ>,\r\n    handleTableSelect: (id:number)=> void\r\n}\r\nconst useStyles = makeStyles({\r\n    table:{\r\n        minWidth:300,\r\n        maxHeight:400\r\n    }\r\n})\r\nexport default function Programmer(props : Programmer_Props){\r\n    const {active, world, selected, prefs, pjs, status, handleTableSelect} = props\r\n    const classes = useStyles()\r\n    const getPJ=(pjID:number):C.PJ_OBJ=>{\r\n        let pj= pjs[pjID]\r\n        if(!pj){\r\n            return{\r\n                id: pjID,\r\n                online: 'false',\r\n                shutter: 'Unknown',\r\n                power: 'Unknown',\r\n                lastSeen: -1,\r\n                error: 'NOT SEEN',\r\n                lampStatus: 'Unknown',\r\n                edgeBlending: 'Unknown',\r\n                edgeBlendingMarker: 'Unknown',\r\n                testPattren: 'Unknown',\r\n                backColor: 'Unknown',\r\n                edgeBlendingLeft: 'Unknown',\r\n                edgeBlendingLower: 'Unknown',\r\n                edgeBlendingRight: 'Unknown',\r\n                edgeBlendingUpper: 'Unknown',\r\n                hdmiResolution: 'Unknown',\r\n                hmdiSignalLevel: 'Unknown',\r\n                osdPostion: 'Unknown',\r\n                inputSignalName_Main: 'Unknown',\r\n                name: 'Unknown'\r\n            }\r\n        }\r\n        return pj\r\n    }\r\n    const getPJs=()=>{\r\n        world.sort()\r\n       \r\n        return world.map(s=>{\r\n            let pj =getPJ(s)\r\n            if((prefs.showOnlySelected&& selected.includes(s)) || !prefs.showOnlySelected){\r\n                return <PJ key={'pj id_'+pj.id} pj={pj} handleTableSelect={handleTableSelect} selected={selected.includes(s)} darkMode={prefs.darkMode} active={active.includes(s)} />\r\n            } \r\n            return <></>\r\n            \r\n        })\r\n    }\r\n    const getStyle=(good = true)=>{\r\n        let s : CSSProperties={\r\n            width: '50',\r\n            textAlign: 'center'\r\n        }\r\n        if(!good)\r\n         s.backgroundColor = prefs.darkMode? 'red': 'red'\r\n        \r\n        return s\r\n    }\r\n    return(\r\n        <TableContainer  key='p-tc' component={Paper}>\r\n            <Table key='p-t' className={classes.table}>\r\n                <TableHead key='p-th'>\r\n                    <TableRow key='p-r'>\r\n                        <TableCell style={getStyle()} key='p_pj'> PJ </TableCell>\r\n                        <TableCell style={getStyle(status.shutter)} key='p_s'> Shutter</TableCell>\r\n                        <TableCell style={getStyle(status.blend)} key='p_b'> Blend</TableCell>\r\n                        <TableCell style={getStyle(status.blendMarker)} key='p_bm'> Blend Marker</TableCell>\r\n                        <TableCell style={getStyle(status.testPattren)} key='p_test'> Test Pattern</TableCell>\r\n                        <TableCell style={getStyle(status.lampStatus)} key='p_lamp'> Lamp Status</TableCell>\r\n                        <TableCell style={getStyle(status.hdmiInput)} key='p_hdmi'> HDMI Input</TableCell>\r\n                        <TableCell style={getStyle(status.signalName)} key='p_signal name'> Signal Name</TableCell>\r\n                        <TableCell style={getStyle()}  key='p_ls'> Last Seen</TableCell>\r\n\r\n                    </TableRow>\r\n                </TableHead>\r\n                <TableBody>\r\n                    {getPJs()}\r\n                </TableBody>\r\n            </Table>\r\n        </TableContainer>\r\n       \r\n    )\r\n}\r\n\r\n/*\r\n <Container maxWidth='sm' style={{backgroundColor: 'white', width: '200px', }}>\r\n        <Grid>\r\n            Programmer\r\n            {getSelected()}\r\n        </Grid>\r\n        </Container>\r\n        */","import * as C from './constants'\r\n//const puppeteer = require('puppeteer');\r\n\r\nasync function goFetch(query: string){\r\n    let fetchString = C.pjServer+'api/'+query\r\n   // console.log(fetchString)\r\n    try{\r\n    let res = await fetch(fetchString,{\r\n       mode: 'no-cors'\r\n    })\r\n    \r\n   // console.table(res.body)\r\n    if(res.ok){\r\n      //  console.log(await res.text())\r\n        //return await res.json()\r\n        return await res.json()\r\n    }\r\n}catch(e){\r\n    console.log(e)\r\n}\r\n    \r\n    \r\n}\r\n\r\nexport async function getPJ(target:number) {\r\n    let pj = await goFetch('status/?pj='+target)\r\n    if(pj){\r\n        return pj as unknown as C.PJ_OBJ\r\n    }\r\n    return undefined\r\n    \r\n}\r\n\r\nexport async function getPJs(){\r\n    let pjs = await goFetch('status/?pj=all')\r\n    if(pjs){\r\n        return pjs as unknown as Record<number,C.PJ_OBJ>\r\n    }\r\n}\r\nexport async function getRigStatus(){\r\n   // console.log('Getting Rig Status')\r\n    let status = await goFetch('status/?rigstatus=all')\r\n    if(status){\r\n        return status as unknown as C.RIG_STATUS\r\n    }\r\n}\r\n/*\r\nexport async function setConfig(item: C.ConfigHeaders, value: string){\r\n    await goFetch('config/?'+item+\"=\"+value)\r\n}*/\r\n\r\nexport async function setConfig(query: string){\r\n    await goFetch('config/?'+query)\r\n}\r\nexport async function setter(target: number, command:  C.ControlKeys) {\r\n    console.log('Setting ',target,command)\r\n    await goFetch('set/?pj='+target+'&command='+command)\r\n}\r\nexport async function  powerOff(target: number) {\r\n     return await setter(target, C.ControlCommands.POWER_OFF)\r\n}\r\n\r\nexport async function powerOn(target: number) {\r\n    return await setter(target,C.ControlCommands.POWER_ON)\r\n}\r\n\r\nexport async function shutterOn(target:number){\r\n    console.log('Sutter On')\r\n    return await setter(target,C.ControlCommands.SHUTTER_OPEN)\r\n}\r\nexport async function shutterOff(target:number) {\r\n    return await setter(target,C.ControlCommands.SHUTTER_CLOSED)\r\n}\r\n\r\nexport async function menu(target:number) {\r\n    \r\n}\r\n","import { Dialog, DialogTitle , TextField, Select, MenuItem, InputLabel, Button} from \"@material-ui/core\";\r\nimport React, { CSSProperties, useState } from \"react\";\r\nimport {PROJECTOR_MAKES, PROJECTOR_MAKE, Patch} from '../util/constants'\r\ninterface PatchAdd_Props{\r\n    open: boolean,\r\n    handleClose: ()=>void,\r\n    addPJs: (amount: number, startID: number, baseIP: string, port: number, auth: string, make: PROJECTOR_MAKE)=>void,\r\n    currentPatch: Patch\r\n}\r\n\r\nconst style: CSSProperties={\r\n    width: '90%',margin: 'auto', marginBottom: '5px'\r\n    \r\n}\r\nexport default function PatchAddDialog(props: PatchAdd_Props){\r\n    const {open,handleClose, addPJs, currentPatch}= props\r\n\r\n    const getMaxID=()=>{\r\n        let i = -1\r\n        Object.values(currentPatch).forEach(pj=>{\r\n            if(pj.id> i)\r\n                i = pj.id\r\n        })\r\n        if(i===-1)\r\n            return 100\r\n        \r\n            return i\r\n    }\r\n\r\n    const [make, setMake]= useState<PROJECTOR_MAKE>(PROJECTOR_MAKES.PANASONIC)\r\n    const [Amount, setAmount] = useState({value:1,err:''})\r\n    const [StartID, setID] = useState({value:getMaxID()+1,err:''})\r\n    const [BaseIP, setBaseIP]= useState({value:'192.168.10.',err:''})\r\n    const [UserName, setUserName] = useState('admin1')\r\n    const [Pass, setPass] = useState('')\r\n    const [Port, setPort] = useState({value:1024, err:''})\r\n    //const [hasErrors, setHasErrors]= useState(false)\r\n\r\n   \r\n    const getListItems=()=>{\r\n        return Object.values(PROJECTOR_MAKES).map(key=>{\r\n            //console.log(key)\r\n            return <MenuItem key={key} value={key}>{key}</MenuItem>\r\n        })\r\n    }\r\n    const handleSubmit=()=>{\r\n        let auth = ''\r\n        if(make === PROJECTOR_MAKES.PANASONIC){\r\n            auth = UserName+\":\"+Pass\r\n        }\r\n        addPJs(Amount.value,StartID.value,BaseIP.value,Port.value, auth,make)\r\n    }\r\n    const handleMake=(e: React.ChangeEvent<{value:unknown}>)=>{\r\n        setMake(e.target.value as PROJECTOR_MAKE)\r\n    }\r\n    const getBaseStart=()=>{\r\n        return parseInt(BaseIP.value.split('.')[3])\r\n    }\r\n    const checkOverlap=(startID: number, amount: number)=>{\r\n        for(let i = startID; i<amount+startID; i++){\r\n            let t = false\r\n            Object.values(currentPatch).forEach(pj=>{\r\n                if(pj.id === i)\r\n                    t = true\r\n            })\r\n            if(t)\r\n                return true\r\n        }\r\n        return false\r\n    }\r\n    const handleAmount=(e: React.ChangeEvent<HTMLTextAreaElement | HTMLInputElement>)=>{\r\n        let value = parseInt(e.target.value)\r\n        let err= ''\r\n        if(value<1 || isNaN(value)){\r\n            err='Invalid Number'\r\n        } else if(checkOverlap(StartID.value, value)){\r\n            err='Will Overlap Other IDs'\r\n        }\r\n\r\n        setAmount({value,err})\r\n    }\r\n    \r\n    const handleID=(e: React.ChangeEvent<HTMLTextAreaElement | HTMLInputElement>)=>{\r\n        let value = parseInt(e.target.value)\r\n        let err= ''\r\n        if(value<1 || isNaN(value)){\r\n            err='Invalid Number'\r\n        } else if(getBaseStart()+Amount.value >254){\r\n            err='Will Land Outside Base IP Range'\r\n        } else if(checkOverlap(value, Amount.value)){\r\n            err='Will Overlap Other IDs'\r\n        }\r\n        setID({value,err})\r\n    }\r\n    const handlePort=(e: React.ChangeEvent<HTMLTextAreaElement | HTMLInputElement>)=>{\r\n        let value = parseInt(e.target.value)\r\n        let err= ''\r\n        if(value<1 || isNaN(value)){\r\n            err='Invalid Number'\r\n        }\r\n        setPort({value,err})\r\n    }\r\n    const handleBaseIP=(value: string)=>{\r\n        \r\n        let err= ''\r\n        let s = value.split('.')\r\n        if(s.length===4){\r\n            for(let i =0; i<4;i++){\r\n                if(parseInt(s[i])<0 || parseInt(s[i])>(254-Amount.value)){\r\n                    err ='Invalid Number Range: '+s[i]\r\n                }\r\n            }\r\n        } else{\r\n            err= 'Invalid Number of .'\r\n        }\r\n        console.log(value)\r\n        \r\n        setBaseIP({value,err})\r\n    }\r\n\r\n    const handlePass=(value: string)=>{\r\n        setPass(value)\r\n    }\r\n    const handleUser=(value:string)=>{\r\n        setUserName(value)\r\n    }\r\n    return( \r\n        <Dialog fullWidth={true} style={{padding: '10%'}} onClose={handleClose} aria-labelledby=\"simple-dialog-title\" open={open}>\r\n        <DialogTitle id=\"simple-dialog-title\">Add Projectors</DialogTitle>\r\n        <InputLabel style={style} id=\"pjMake\">Model</InputLabel>\r\n        <Select style={style} id='pjMake' onChange={handleMake} value={make}>\r\n        {getListItems()}\r\n        </Select>\r\n        <br></br>\r\n        <TextField style={style} error={Amount.err? true: false} variant=\"filled\" type={'number'}label={'Amount'} value={Amount.value} onChange={handleAmount} helperText={Amount.err}> </TextField>\r\n        <br></br>\r\n        <TextField style={style} error={StartID.err? true: false} value={StartID.value} helperText={StartID.err} variant=\"filled\" type={'number'} label={'StartID'} onChange={handleID} > </TextField>\r\n        <br></br>\r\n        <TextField style={style} error={BaseIP.err? true: false} value={BaseIP.value} helperText={BaseIP.err} variant=\"filled\" type={'text'}label={'BaseIP'} onChange={(e)=>handleBaseIP(e.target.value)} > </TextField>\r\n        <br></br>\r\n        <TextField style={style} error={Port.err? true: false} value={Port.value} helperText={Port.err} variant=\"filled\" type={'number'}label={'Port'} onChange={handlePort} > </TextField>\r\n        <br></br>\r\n        <TextField style={style}  value={UserName}  variant=\"filled\" label={'Username'} type={'text'} onChange={(e)=>handleUser(e.target.value)}> </TextField>\r\n        <br></br>\r\n        <TextField style={style}  value={Pass}  variant=\"filled\" label={'Password'}type={'text'} onChange={(e)=>handlePass(e.target.value)}> </TextField>\r\n\r\n        <Button style={{width:'20%', margin: 'auto', marginBottom:'2%'}} disabled={Amount.err || BaseIP.err || StartID.err? true: false} variant=\"contained\" color=\"primary\" onClick={handleSubmit}>Submit</Button>\r\n      </Dialog>\r\n    )\r\n}","import * as C from \"../util/constants\";\r\nimport { DataGrid } from '@material-ui/data-grid';\r\nimport { Button, Paper, makeStyles, ButtonGroup } from '@material-ui/core'\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport { useState } from \"react\";\r\nimport { v4 } from 'uuid'\r\nimport Alert from './Alert'\r\nimport PatchAddDialog from './PatchAddDialog'\r\n\r\ninterface Patch_props {\r\n  patch: C.Patch\r\n  setPatch?: (p: C.Patch) => void\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  fab: {\r\n    position: 'absolute',\r\n    bottom: theme.spacing(2),\r\n    right: theme.spacing(2),\r\n  },\r\n\r\n}));\r\nconst columns = [\r\n  { field: 'uuid', headerName: 'uuid', width: 100, hide: true },\r\n  { field: 'id', headerName: 'ID', width: 90 },\r\n  { field: 'ip_address', headerName: 'IP Address', width: 170 },\r\n  { field: 'port', headerName: 'Port', width: 130 },\r\n  { field: 'auth', headerName: 'Auth', width: 130 },\r\n  { field: 'make', headerName: 'Make', width: 130 },\r\n\r\n];\r\n\r\nexport default function Patch(props: Patch_props) {\r\n  const { patch, setPatch } = props\r\n  const [addWindowOpen, setAddWindowOpen] = useState(false)\r\n  const [editWindowOpen, setEditWindowOpen] = useState(false)\r\n  const [selected, setSelected] = useState<number[]>([])\r\n  const [deleteWindowOpen, setDeleteWindowOpen] = useState(false)\r\n  const classes = useStyles()\r\n  let newPJs: C.Patch = {}\r\n\r\n  const addPJs = (amount: number, startID: number, baseIP: string, port: number, auth: string, make: C.PROJECTOR_MAKE) => {\r\n    setAddWindowOpen(false)\r\n    console.log('Got PJs to make!')\r\n    for (let id = startID; id < amount + startID; id++) {\r\n      let ip_address = baseIP + id\r\n      //console.log('Patch', patch)\r\n      if (Object.values(patch).filter(pj => {\r\n        if (pj.id === id) {\r\n          console.log('Conflicting ID', id);\r\n          return true\r\n        }\r\n        if (pj.ip_address === ip_address) {\r\n          console.log('Conflicting IP', ip_address);\r\n          return true\r\n        }\r\n        return false\r\n      }\r\n      ).length > 0) {\r\n        console.log('Conflicting PJ')\r\n        newPJs[v4()] = { ip_address: '-', port, auth, make, id: 0 }\r\n      } else {\r\n        // console.log('new PJ!')\r\n        newPJs[v4()] = { ip_address, id, port, auth, make }\r\n      }\r\n    }\r\n    //console.log(newPJs)\r\n    let newPatch = Object.assign(patch, newPJs) as C.Patch\r\n    if (newPatch && setPatch) {\r\n      setPatch(newPatch)\r\n    }\r\n  }\r\n  /*\r\n  const getRows = () => {\r\n    return Object.entries(patch).map(e => {\r\n      let pj = e[1]\r\n      //@ts-ignore\r\n      pj.channel = pj.id\r\n      //@ts-ignore\r\n      pj.id = e[0]\r\n\r\n      return pj\r\n\r\n    })\r\n  }\r\n  */\r\n\r\n  const handleDelete = (c: C.ControlKeys) => {\r\n\r\n    let newPatch = Object.assign(patch) as C.Patch\r\n    Object.entries(newPatch).forEach(e => {\r\n      if (selected.includes(e[1].id)) {\r\n        delete newPatch[e[0]]\r\n        let newSelect = Object.assign(selected) as number[]\r\n        delete newSelect[e[1].id]\r\n        setSelected(newSelect)\r\n      }\r\n    })\r\n\r\n\r\n    //const i = Object.assign(newPatch)\r\n    if (newPatch && setPatch) {\r\n      //console.log('Deleting',Object.values(patch).length-Object.values(newPatch).length)\r\n      setPatch(newPatch)\r\n      setSelected([])\r\n    }\r\n\r\n  }\r\n  const getSelectedString = () => {\r\n    let s = ''\r\n    for (let i = 0; i < selected.length; i++) {\r\n      s += selected[i] + ' '\r\n      if (i % 9 === 0) {\r\n        s += '\\r'\r\n      }\r\n    }\r\n    return s\r\n  }\r\n\r\n\r\n\r\n  return (\r\n    <>\r\n      <Paper style={{ height: 700, width: '100%' }}>\r\n        {patch ?\r\n          <DataGrid rows={Object.values(patch)} columns={columns} checkboxSelection selectionModel={selected} onSelectionModelChange={(e) => setSelected(e.selectionModel as number[])} />\r\n          : <></>\r\n        }\r\n\r\n        <ButtonGroup color='primary' className={classes.fab} >\r\n          <Button aria-label=\"add\" onClick={(e) => setAddWindowOpen(true)}> <AddIcon /></Button>\r\n          <Button aria-label=\"edit\" disabled={selected.length < 1} onClick={(e) => setEditWindowOpen(true)}> <EditIcon /></Button>\r\n          <Button aria-label=\"edit\" disabled={selected.length < 1} onClick={(e) => setDeleteWindowOpen(true)}> <DeleteIcon /></Button>\r\n        </ButtonGroup>\r\n\r\n\r\n      </Paper>\r\n      <Alert open={deleteWindowOpen} handleCommand={handleDelete} handleClose={() => setDeleteWindowOpen(false)} command={C.ControlCommands.MENU} header='Delete Selected' message={'Are you srue you want to delete: \\r \\n' + getSelectedString()} ></Alert>\r\n      <PatchAddDialog open={addWindowOpen} handleClose={() => setAddWindowOpen(false)} addPJs={addPJs} currentPatch={patch} />\r\n    </>\r\n  )\r\n}","import { Dialog, AppBar, Toolbar, Typography, IconButton, Button, Paper, Slide, Switch, TextField, FormControlLabel, makeStyles } from \"@material-ui/core\";\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport { useState, forwardRef, useEffect } from \"react\";\r\nimport * as C from \"../util/constants\";\r\nimport { setConfig } from \"../util/getter\";\r\nimport Patch from \"./Patch\";\r\nimport { SocketPatcher } from \"../util/SocketListener\";\r\nimport { Socket } from \"socket.io-client\";\r\n//import { socket } from \"../LoadPage\";\r\nconst useStyles = makeStyles((theme) => ({\r\n  appBar: {\r\n    position: 'relative',\r\n  },\r\n  title: {\r\n    marginLeft: theme.spacing(2),\r\n    flex: 1,\r\n  },\r\n  root: {\r\n    '& .MuiTextField-root': {\r\n      margin: theme.spacing(1),\r\n      width: '25ch',\r\n    },\r\n  },\r\n}));\r\n\r\nconst Transition = forwardRef(function Transition(props, ref) {\r\n  //@ts-ignore\r\n  return (<Slide direction=\"up\" ref={ref} {...props} />);\r\n});\r\n\r\ninterface ConfigDialog_Props {\r\n  open: boolean\r\n  handleClose: () => void\r\n  config: C.Config\r\n  socket: Socket | undefined\r\n}\r\nexport default function ConfigDialog(props: ConfigDialog_Props) {\r\n  const { open, handleClose, config, socket } = props\r\n  const [polling, setPolling] = useState(config.Polling)\r\n  const [pollingInterval, setPollingInterval] = useState(config.Polling_Interval/1000)\r\n  const classes = useStyles();\r\n  const [patch, setPatch] = useState<C.Patch>(config.Patch)\r\n  useEffect(() => {\r\n    setPollingInterval(config.Polling_Interval/1000)\r\n    setPolling(config.Polling)\r\n    setPatch(config.Patch)\r\n  }, [config])\r\n \r\n\r\n  const handleSubmit = (event: any) => {\r\n    event?.preventDefault();\r\n    // console.log(event)\r\n\r\n    let form = document.querySelector('form')\r\n    if (form) {\r\n      const data = new FormData(form);\r\n      let query = ''\r\n      for (var pair of data.entries()) {\r\n      \r\n        let t = pair[0] as C.ConfigHeaders\r\n       \r\n        let v = pair[1].toString()\r\n        switch(t){\r\n          case C.ConfigHeaders.POLLING:\r\n           \r\n            break;\r\n          case C.ConfigHeaders.POLLING_INTERVAL:\r\n            query += t + '=' + pollingInterval*1000 + '&'\r\n            break;\r\n          default:\r\n            query += t + '=' + v + '&'\r\n            break;\r\n        }\r\n\r\n      }\r\n      //Hard adds Polling to ensure it is accounted for\r\n      query += C.ConfigHeaders.POLLING + '=' + polling\r\n      \r\n      setConfig(query)\r\n      if(socket)\r\n        SocketPatcher(socket, patch)\r\n    }\r\n  }\r\n  const handlePollingInterval=(value: number)=>{\r\n    if(value>10){\r\n      setPollingInterval(value)\r\n    }\r\n  }\r\n  const handlePatchUpdate=(p: C.Patch)=>{\r\n    console.log(p)\r\n    setPatch(p)\r\n  }\r\n  return (\r\n    //@ts-ignore\r\n    <Dialog fullScreen open={open} onClose={handleClose} TransitionComponent={Transition}>\r\n\r\n      <form className={classes.root} onSubmit={handleSubmit}>\r\n        <AppBar className={classes.appBar}>\r\n          <Toolbar>\r\n            <IconButton edge=\"start\" color=\"inherit\" onClick={handleClose} aria-label=\"close\">\r\n              <CloseIcon />\r\n            </IconButton>\r\n            <Typography variant=\"h6\" className={classes.title}>\r\n              Server Configuration\r\n            </Typography>\r\n            <Button autoFocus color=\"inherit\" type={'submit'} onClick={handleClose}>\r\n              Save\r\n            </Button>\r\n          </Toolbar>\r\n        </AppBar>\r\n\r\n        <Paper key='config_paper'>\r\n\r\n\r\n\r\n          <TextField key='location' style={{width:'25%'}}label={'Location'} name={C.ConfigHeaders.LOCATION} defaultValue={config.Location} />\r\n\r\n          <FormControlLabel name={C.ConfigHeaders.POLLING} value={polling} labelPlacement=\"top\"\r\n            control={<Switch checked={polling} value={polling} onChange={(e) => setPolling(!polling)} name={C.ConfigHeaders.POLLING} />}\r\n            label=\"Polling\"\r\n          />\r\n\r\n          <TextField key='polling_interval' style={{width:'25%'}} disabled={!polling} type='number' label={'Poll Interval'} onChange={(e)=> handlePollingInterval(parseInt(e.target.value))} name={C.ConfigHeaders.POLLING_INTERVAL} value={pollingInterval} />\r\n        </Paper>\r\n\r\n\r\n        <Paper key='patch'>\r\n          <Patch patch={patch} setPatch={handlePatchUpdate} />\r\n        </Paper>\r\n      </form>\r\n      <span style={{ fontSize: 10 }}>{config.LastUpdated}</span>\r\n    </Dialog>\r\n\r\n  )\r\n}","\r\nimport { Socket } from 'socket.io-client'\r\nimport * as C from './constants'\r\n//import {socket} from '../LoadPage'\r\ntype RIG_STATUS = React.Dispatch<React.SetStateAction<C.RIG_STATUS>>\r\ntype PJS = React.Dispatch<React.SetStateAction<C.PJs>>\r\ntype CONFIG = React.Dispatch<React.SetStateAction<C.Config>>\r\ntype POLLING_PROGRESS = React.Dispatch<React.SetStateAction<number>>\r\n\r\nexport default function SocketListener(\r\n    socket: Socket,\r\n    setStatus: RIG_STATUS,\r\n    setPJs: PJS,\r\n    setConfig: CONFIG,\r\n    setPollingProgress: POLLING_PROGRESS,\r\n) {\r\n   \r\n    socket.on('connected', () => {\r\n        console.log('Connected!')\r\n        // socket.emit('Hello')\r\n    })\r\n    socket.on('Hello', () => {\r\n        //console.log('Hello!')\r\n    })\r\n    socket.on(C.ioCommands.EMITTING_PJS, (pjs: C.PJs) => {\r\n        setPJs(pjs)\r\n        // console.log('Got new PJs!')\r\n    })\r\n    socket.on(C.ioCommands.EMITTING_STATUS, (status: C.RIG_STATUS) => {\r\n        console.log('Status Updated')\r\n        setStatus(status)\r\n    })\r\n    socket.on(C.ioCommands.REQUEST_UPDATE, () => {\r\n        console.log('Requesting Update!')\r\n        socket?.emit(C.ioCommands.REQUESTING_UPDATE)\r\n    })\r\n\r\n    socket.on(C.ioCommands.REQUEST_CONFIG, () => {\r\n        console.log('Requesting Config')\r\n        socket?.emit(C.ioCommands.REQUESTING_CONFIG)\r\n    })\r\n    socket.on(C.ioCommands.EMITTING_CONFIG, (config: C.Config) => {\r\n        console.groupCollapsed('Got New Config')\r\n        console.log('Config', config)\r\n        console.log('Patch', config.Patch)\r\n        console.groupEnd()\r\n        setConfig(config)\r\n        /*\r\n        if(config.Groups[0] && config.Groups[0].group)\r\n            setWorld(config.Groups[0].group)\r\n            */\r\n    })\r\n    socket.on(C.ioCommands.EMITTING_POLLING_PROGRESS, (progress: number) => {\r\n        setPollingProgress(progress)\r\n    })\r\n}\r\n    \r\n\r\n\r\n\r\nexport function SocketPatcher(socket: Socket, patch: C.Patch) {\r\n    socket.emit(C.ioCommands.EMITTING_PATCH, patch)\r\n}   ","\r\nimport { useEffect, useState } from 'react';\r\nimport './App.css';\r\nimport * as C from './util/constants'\r\n//import { getPJ } from './util/getter';\r\n//import PJ from './components/PJ'\r\nimport Numberpad from './components/numberpad';\r\nimport CommandPad from './components/CommandPad'\r\nimport Worlds from './components/Worlds'\r\nimport {  TextField, Container,  Grid,LinearProgress } from '@material-ui/core'\r\nimport { processCMD } from './util/CMD';\r\nimport Programmer from './components/Programmer';\r\nimport  * as Prefs from './prefrences';\r\nimport SocketListener from './util/SocketListener';\r\nimport ConfigDialog from './components/ConfigDialog';\r\nimport { Socket } from 'socket.io-client';\r\n\r\n\r\n// setSocketConnect(true)\r\n//import {socket}  from './LoadPage'\r\ninterface App_Prps{\r\n  prefs: Prefs.prefres\r\n  openConfig: boolean\r\n  handleCloseConfig: ()=>void\r\n  socket: Socket | undefined\r\n}\r\n\r\n//let socket: Socket | undefined = undefined\r\n\r\nfunction App(Props: App_Prps ) {\r\n  const {prefs,openConfig,handleCloseConfig,socket} = Props\r\n  const [cmd, setCMD] = useState('')\r\n  const [vartiable, setVartiable] = useState<string|undefined>(undefined)\r\n  const [active, setActive] = useState<number[]>([])\r\n  const [activeIndex, setActiveIndex] = useState(-1)\r\n  const [clearPresses, setClearPressed] = useState(0)\r\n  const [selected, setSelected] = useState<number[]>([])\r\n\r\n  const [config, setConfig] =useState(C.defaultConfig)\r\n  const [world, setWorld] = useState(0) //Default 0 - All\r\n  const [pjs, setPJs] = useState<C.PJs>({})\r\n  const [pollingProgress, setPollingProgress] = useState(100)\r\n  const [command, setCommand]=useState<C.ControlKeys | undefined>(undefined)\r\n  const [rigStatus, setStatus] = useState<C.RIG_STATUS>({\r\n    online: false,\r\n    power: false,\r\n    shutter: false,\r\n    blendMarker: false,\r\n    blend: false,\r\n    testPattren: false,\r\n    lampStatus: false,\r\n    hdmiInput: false,\r\n    signalName: false\r\n\r\n  })\r\n  \r\n \r\n\r\n  useEffect(() => {\r\n  \r\n   if(socket)\r\n   SocketListener(socket,setStatus, setPJs,setConfig,setPollingProgress)\r\n   \r\n    if(command){\r\n      console.log('Emmiting CMD',command, active)\r\n\r\n      socket?.emit(C.ioCommands.EMITTING_CMD,{cmd: command, pjIDs: active, vartiable: vartiable})\r\n      if (prefs.clearProgrammerAfterCMD) {\r\n        setActive([])\r\n        setSelected([])\r\n      }\r\n      setCommand(undefined)\r\n    }\r\n    \r\n  \r\n // let i =setInterval(pollPJs,10000)\r\n    //console.log(selected)\r\n    return function cleanup(){\r\n     \r\n     // socket?.disconnect()\r\n      //setSocketConnect(false)\r\n    }\r\n  \r\n   \r\n  },[active,command, prefs,socket, vartiable])\r\n\r\n\r\n  document.onkeyup = ((e) => {\r\n   if(openConfig) return\r\n\r\n    let key = e.key\r\n  //  console.log(key)\r\n    if (C.keys.includes(key)) {\r\n      handlePad(key)\r\n      return\r\n    }\r\n    switch (key) {\r\n      case 't':\r\n        handlePad(C.commands.THRU)\r\n        break;\r\n      case 'c':\r\n        handlePad(C.commands.CLEAR)\r\n        break;\r\n      case '=':\r\n        handlePad('+')\r\n        break;\r\n      case 'Backspace':\r\n        handlePad(C.commands.DEL)\r\n        break;\r\n      case 'Enter':\r\n        //processCMD();\r\n        handlePad(C.commands.ENTER)\r\n        break;\r\n      case 'i':\r\n        handleCommand(C.ControlCommands.SHUTTER_CLOSED)\r\n        break;\r\n      case 'o':\r\n        handleCommand(C.ControlCommands.SHUTTER_OPEN)\r\n        break;\r\n      \r\n      case 'ArrowUp':\r\n        handlePad(C.commands.IF_PROG)\r\n        break;\r\n      case 'ArrowRight':\r\n        handlePad(C.commands.NEXT)\r\n        break;\r\n      case 'ArrowLeft':\r\n        handlePad(C.commands.BACK)\r\n        break;\r\n    }\r\n\r\n  })\r\n  \r\n  const handleNext = () => {\r\n    //console.log('Nexting')\r\n    if (selected.length < 1) {\r\n      return\r\n    }\r\n    let i = activeIndex\r\n    if (activeIndex+1 < selected.length) {\r\n      i += 1\r\n    }\r\n    if (activeIndex + 1 >= selected.length) {\r\n      i =0\r\n    }\r\n    let a: number[] = []\r\n    a.push(selected[i])\r\n    setActiveIndex(i)\r\n    setActive(a)\r\n  }\r\n  const handleBack = () => {\r\n    if (selected.length < 1) {\r\n      return\r\n    }\r\n    let i = activeIndex\r\n    if (activeIndex-1 >=0) {\r\n      i -= 1\r\n    }\r\n    if (activeIndex-1 <0) {\r\n      i =selected.length-1\r\n    }\r\n    let a: number[] = []\r\n    a.push(selected[i])\r\n    setActiveIndex(i)\r\n    setActive(a)\r\n  }\r\n  \r\n  const handlePad = (e: string) => {\r\n    //console.log(e)\r\n    if (e === C.commands.CLEAR) {\r\n      setClearPressed((clearPresses + 1))\r\n      //console.log('Clear', clearPresses)\r\n      switch (clearPresses) {\r\n        case 0:\r\n          setCMD('')\r\n          break;\r\n        case 1:\r\n          setActive([])\r\n          setActiveIndex(-1)\r\n          break;\r\n        case 2:\r\n          setSelected([])\r\n          break;\r\n      }\r\n      return\r\n    }\r\n    setClearPressed(0)\r\n    switch (e) {\r\n      case C.commands.DEL:\r\n        //console.log(cmd.slice(-6) === ' THRU ')\r\n        // console.log(cmd.includes('THRU'))\r\n        if (cmd.length >= 6 && cmd.slice(-6) === ' ' + C.commands.THRU + ' ') {\r\n          let t = cmd.slice(0, cmd.length - 6)\r\n          setCMD(t)\r\n        } else {\r\n          setCMD(cmd.slice(0, (cmd.length - 1)))\r\n        }\r\n        break;\r\n      case C.commands.THRU:\r\n        if (cmd.length > 0)\r\n          setCMD(cmd + ' THRU ')\r\n        break;\r\n      case C.commands.ENTER:\r\n        handleCMD()\r\n        break;\r\n      case '-':\r\n        if (cmd[cmd.length - 1] !== ' ') {\r\n          setCMD(cmd + e)\r\n        }\r\n        break\r\n      case C.commands.NEXT:\r\n        handleNext();\r\n        break;\r\n      case C.commands.BACK:\r\n        handleBack()\r\n        break;\r\n      case C.commands.IF_PROG:\r\n        setActive(selected);\r\n        setActiveIndex(-1)\r\n        break;\r\n      default:\r\n      \r\n        setCMD(cmd + e)\r\n       // console.log('setting CMD',cmd)\r\n    }\r\n  //  console.log('CMD',cmd)\r\n  }\r\n  const handleTableSelect=(id:number)=>{\r\n   // let s = [...selected]\r\n    let a = [...active]\r\n    if(a.includes(id)){\r\n      setActive(a.filter(pj=> pj !== id))\r\n    } else{\r\n     \r\n      a.push(id)\r\n      setActive(a)\r\n     // s.push(id)\r\n      //console.log(s)\r\n     // setSelected(s)\r\n    }\r\n  }\r\n\r\n  const handleCMD =() => {\r\n   \r\n    let s = processCMD(cmd, active, getGroup(world))\r\n    finalCMD(s)\r\n    setCMD('')\r\n    \r\n  }\r\n  const finalCMD= (n:number[])=>{\r\n   // console.log(n)\r\n    setActive(n)\r\n    let diffrentPJs: number[] =[]\r\n  //  console.log(n)\r\n    n.forEach(id=>{\r\n      if(!selected.includes(id)){\r\n        diffrentPJs.push(id)\r\n      }\r\n    })\r\n    \r\n    setSelected(diffrentPJs.concat(selected))\r\n    \r\n  }\r\n  const handleCommand=(command: C.ControlKeys, text?:string)=>{\r\n    handleCMD()\r\n    setCommand(command)\r\n    setVartiable(text)\r\n  }\r\n  const getGroup=(groupID:string | number)=>{\r\n    let g  = config.Groups[parseInt(groupID.toString())]?.group \r\n    return  g? g :[]\r\n  }\r\n  const handleGroupSelection=(groupID: string)=>{\r\n    let group = getGroup(groupID)\r\n    if(group)\r\n    finalCMD(group)\r\n  }\r\n  const handleWorldSelection=(groupID:string)=>{\r\n    setWorld(parseInt(groupID))\r\n  }\r\n\r\n  const getStatusBar=()=>{\r\n\r\n    if(pollingProgress===100)\r\n     return <LinearProgress style={{width:'99%', margin:'auto'}}  variant=\"determinate\" value={0} />\r\n\r\n     return <LinearProgress style={{width:'99%', margin:'auto'}}  variant=\"determinate\" value={pollingProgress} />\r\n  }\r\n\r\n  return (\r\n    <div className=\"App\">\r\n\r\n      <link rel=\"stylesheet\" href=\"https://fonts.googleapis.com/css?family=Roboto:300,400,500,700&display=swap\" />\r\n      <link rel=\"stylesheet\" href=\"https://fonts.googleapis.com/icon?family=Material+Icons\" />\r\n      {getStatusBar()}\r\n      <Container style={{position: 'relative', bottom:'3px', textAlign:'left', float:'left'}}>\r\n      </Container>\r\n      <Grid container spacing={6} className='inputArea' >\r\n        <Grid item >\r\n          <Numberpad handlePad={handlePad} />\r\n        </Grid>\r\n        <Grid item>\r\n          <CommandPad  handleCommand={handleCommand} active={active} />\r\n        </Grid>\r\n      </Grid>\r\n      <TextField\r\n        id=\"cmd\"\r\n\r\n        style={{ margin: 8, width: '90%' }}\r\n        value={cmd}\r\n        helperText=\"Command Line\"\r\n        fullWidth\r\n        margin=\"normal\"\r\n        InputLabelProps={{\r\n          shrink: true,\r\n        }}\r\n        variant=\"outlined\"\r\n        \r\n      />\r\n     \r\n      <Container key='groups_Worlds' style={{width:'80%'}}>\r\n      <Worlds setWorld={handleWorldSelection} groups={config.Groups} name={'Worlds'} selected={world}/>\r\n      <Worlds setWorld={handleGroupSelection} groups={config.Groups} name={'Groups'}/>\r\n      </Container>\r\n      <br key=\"programmer break\"></br>\r\n      <Container key='programmer'>\r\n        <Programmer handleTableSelect={handleTableSelect} key={'pg'} prefs={prefs} world={getGroup(world)} status={rigStatus} selected={selected} active={active} \r\n        pjs={pjs} />\r\n       \r\n       \r\n        <br key='stats break'></br>\r\n      \r\n\r\n      </Container>\r\n      <ConfigDialog socket={socket} open={openConfig} handleClose={()=>handleCloseConfig()} config={config}/>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","\r\nimport Cookies from 'js-cookie'\r\nexport interface prefres{\r\n    darkMode: boolean,\r\n    clearProgrammerAfterCMD: boolean,\r\n    showOnlySelected: boolean\r\n}\r\nconst cookieName= 'prefs'\r\n//const prefersDarkMode = useMediaQuery('(prefers-color-scheme: dark)');\r\nexport const defaultPrefs: prefres={\r\n    darkMode: true, //prefersDarkMode,\r\n    clearProgrammerAfterCMD: false,\r\n    showOnlySelected: false\r\n}\r\n\r\nexport const setCookie=(prefs: prefres)=>{\r\n    Cookies.set(cookieName,prefs)\r\n}\r\nconst getCookie =()=>{\r\n    return Cookies.get(cookieName)\r\n    /*\r\n    let c = Cookies.get(cookieName)\r\n    if(c){\r\n        return JSON.parse(c) \r\n       // return c as unknown as prefres\r\n    } else {\r\n        setCookie(defaultPrefs)\r\n        return defaultPrefs\r\n    }\r\n    */\r\n}\r\n\r\nexport function getPrefrences(darkMode=true):prefres{\r\n    let c = getCookie()\r\n    if(c){\r\n        return JSON.parse(c)\r\n    }else{\r\n        let d = defaultPrefs\r\n        d.darkMode = darkMode\r\n        setCookie(d)\r\n        return d\r\n    }\r\n     \r\n    //return getCookie()\r\n}\r\n\r\n\r\n\r\nexport function setCookie_DarkMode(mode: boolean){\r\n    let c = getPrefrences()\r\n    c.darkMode=mode\r\n    setCookie(c)\r\n\r\n}\r\nexport function setCookie_ClearProgrammerAfterCMD(mode: boolean){\r\n    let c = getPrefrences()\r\n    c.clearProgrammerAfterCMD = mode\r\n    setCookie(c)\r\n}\r\nexport function setCookie_ShowOnlySelected(mode:boolean){\r\n    let c =getPrefrences()\r\n    console.log(mode)\r\n    c['showOnlySelected'] = mode\r\n    setCookie(c)\r\n}\r\n\r\nexport function getDarkMode(){\r\n    return getPrefrences().darkMode\r\n}\r\n\r\nexport function getClearProgrammerAfterCMD(){\r\n    return getPrefrences().clearProgrammerAfterCMD\r\n}\r\nexport function getShowOnlySelected(){\r\n    return getPrefrences().showOnlySelected\r\n}","import { Button, Menu, MenuItem, FormControlLabel, Switch  } from '@material-ui/core'\r\n//import {SettingsIcon} from '@material-ui/icons/Settings';\r\nimport SettingsIcon from \"@material-ui/icons/Settings\";\r\nimport { useState, useRef} from 'react'\r\nimport { prefres } from '../prefrences';\r\nimport * as C from '../util/constants'\r\n\r\n\r\ninterface menu_props {\r\n  handleSettings: (e: prefres) => void,\r\n  prefs: prefres,\r\n  handleOpenConfig: ()=>void\r\n}\r\nexport default function ControlMenu(props: menu_props) {\r\n\r\n // const value = useContext(Settings)\r\n  //console.log(value)\r\n  const { prefs, handleSettings, handleOpenConfig } = props\r\n  const divRef = useRef(null)\r\n\r\n  const [open, setOpen] = useState(false)\r\n  \r\n\r\n  const handleOpen = () => {\r\n    setOpen(true)\r\n\r\n\r\n  }\r\n  const handleClose = (e: C.menuCommands | undefined) => {\r\n    setOpen(false)\r\n  }\r\n\r\n  const handleChange = (e: C.menuCommands) => {\r\n    \r\n    let p = Object.assign({},prefs)\r\n    switch (e) {\r\n      case C.menuCommands.CLEAR_SELECTED_ON_CMD:\r\n        p.clearProgrammerAfterCMD = !prefs.clearProgrammerAfterCMD\r\n        break;\r\n      case C.menuCommands.IF_SELECTED:\r\n        p.showOnlySelected = !prefs.showOnlySelected\r\n        break;\r\n      case C.menuCommands.DARK_MODE:\r\n        p.darkMode = !prefs.darkMode\r\n        break;\r\n    }\r\n    handleSettings(p)\r\n  }\r\n  let button =\r\n    <Button ref={divRef} aria-controls=\"simple-menu\" aria-haspopup=\"true\" onClick={() => handleOpen()}>\r\n      <SettingsIcon />\r\n    </Button>\r\n  if(process.env.NODE_ENV === 'development'){\r\n    document.title = 'PJ Dev'\r\n  }\r\n  return (\r\n    <div>\r\n\r\n      {button}\r\n\r\n\r\n      <Menu\r\n        id=\"simple-menu\"\r\n        keepMounted\r\n        //@ts-ignore\r\n        anchorEl={divRef.current}\r\n        open={open}\r\n        onClose={() => handleClose(undefined)}\r\n      >\r\n        <MenuItem >\r\n          <FormControlLabel\r\n            control={<Switch key={C.menuCommands.CLEAR_SELECTED_ON_CMD} checked={prefs.clearProgrammerAfterCMD}\r\n              onClick={(e) => handleChange(C.menuCommands.CLEAR_SELECTED_ON_CMD)} name=\"clearSelectedOnPress\" />}\r\n            label=\"Clear Programmer On CMD\"\r\n          />\r\n        </MenuItem>\r\n        <MenuItem>\r\n\r\n          <FormControlLabel\r\n            control={<Switch key={C.menuCommands.IF_SELECTED} checked={prefs.showOnlySelected}\r\n              onChange={(e) => handleChange(C.menuCommands.IF_SELECTED)} name=\"showonlyselected\" />}\r\n            label=\"Show Only Selected\"\r\n          />\r\n        </MenuItem>\r\n        <MenuItem>\r\n\r\n          <FormControlLabel\r\n            control={<Switch key={C.menuCommands.DARK_MODE} checked={prefs.darkMode}\r\n              onChange={(e) => handleChange(C.menuCommands.DARK_MODE)} name=\"darkMode\" />}\r\n            label=\"Dark Mode\"\r\n          />\r\n       \r\n        </MenuItem>\r\n        <MenuItem>\r\n        <Button onClick={(e)=>{setOpen(false); handleOpenConfig()}}>Edit Config</Button>\r\n        </MenuItem>\r\n      </Menu>\r\n     \r\n      <span style={{textAlign:'center', fontSize: 10}}> Projector Controler v{process.env.REACT_APP_VERSION}{process.env.NODE_ENV==='development'?' Beta':''}</span>\r\n    </div>\r\n  )\r\n\r\n}","import { CircularProgress } from \"@material-ui/core\";\r\n\r\nexport default function Disconnected(){\r\n    return (\r\n      \r\n            <div style={{width:'100%', textAlign:'center'}} >\r\n     \r\n            <CircularProgress  color=\"secondary\" />\r\n            <p>Can't connect to server</p>\r\n            \r\n            </div>\r\n   \r\n    )\r\n}","import React, { useEffect, useState } from 'react';\r\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\r\nimport { createMuiTheme, createStyles, makeStyles, ThemeProvider, Theme } from '@material-ui/core/styles';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport App from './App';\r\nimport * as Pref from './prefrences';\r\nimport ControlMenu from './components/ControlMenu';\r\nimport socketIOClinet , { Socket }  from 'socket.io-client'\r\nimport { Backdrop } from '@material-ui/core';\r\nimport Disconnected from './components/Disconnected';\r\nexport const Settings = React.createContext(Pref.defaultPrefs)\r\n\r\nexport let socket : (Socket | undefined) = undefined\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    backdrop: {\r\n      zIndex: theme.zIndex.drawer + 1,\r\n      color: '#fff',\r\n    },\r\n  }),\r\n);\r\nexport default function LoadPage() {\r\n    const prefersDarkMode = useMediaQuery('(prefers-color-scheme: dark)');\r\n    // const prefersDarkMode = getDarkMode()  \r\n    const classes = useStyles()\r\n    const [prefres, setPrefs] = useState(Pref.defaultPrefs)\r\n    const [openConfig,setOpenConfig] = useState(false)\r\n    const [socketConnected,setSocketConnected]= useState(false)\r\n\r\n    useEffect(()=>{\r\n    if(!socketConnected){\r\n      try{\r\n   \r\n          console.log('Connecting Socket...')\r\n        let s = socketIOClinet()\r\n    \r\n        s.on('connect',()=>{\r\n            socket = s\r\n            setSocketConnected(true)\r\n        })\r\n        s.on('disconnect',()=>{\r\n            socket = undefined\r\n            setSocketConnected(false)\r\n        })\r\n      \r\n      }catch(e){\r\n\r\n      }\r\n    }\r\n\r\n    },[socketConnected])\r\n\r\n    useEffect(() => {\r\n  \r\n        setPrefs(Pref.getPrefrences(prefersDarkMode))\r\n      \r\n    }, [prefersDarkMode])\r\n\r\n    const theme = createMuiTheme({\r\n        palette: {\r\n            type: prefres.darkMode ? 'dark' : 'light',\r\n        }\r\n    })\r\n   \r\n    const handlePrefs = (p: Pref.prefres) => {\r\n       // console.log(prefres)\r\n        setPrefs(p)\r\n      //  console.log(prefres)\r\n        Pref.setCookie(p)\r\n    }\r\n    return (\r\n        <ThemeProvider theme={theme}>\r\n            <Settings.Provider value={prefres}/>\r\n            <CssBaseline />\r\n            <Backdrop className={classes.backdrop} open={!socketConnected} >\r\n                <Disconnected/>\r\n            </Backdrop>\r\n                <ControlMenu handleOpenConfig={()=> setOpenConfig(true)}handleSettings={handlePrefs} prefs={prefres} />\r\n                <App socket={socket} prefs={prefres} openConfig={openConfig} handleCloseConfig={()=>setOpenConfig(false)}/>\r\n              \r\n                \r\n            \r\n        </ThemeProvider>\r\n    );\r\n}","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n    window.location.hostname === 'localhost' ||\r\n      // [::1] is the IPv6 localhost address.\r\n      window.location.hostname === '[::1]' ||\r\n      // 127.0.0.0/8 are considered localhost for IPv4.\r\n      window.location.hostname.match(\r\n        /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n      )\r\n  );\r\n  \r\n  export function register(config) {\r\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n      // The URL constructor is available in all browsers that support SW.\r\n      const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n      if (publicUrl.origin !== window.location.origin) {\r\n        // Our service worker won't work if PUBLIC_URL is on a different origin\r\n        // from what our page is served on. This might happen if a CDN is used to\r\n        // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n        return;\r\n      }\r\n  \r\n      window.addEventListener('load', () => {\r\n        const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n  \r\n        if (isLocalhost) {\r\n          // This is running on localhost. Let's check if a service worker still exists or not.\r\n          checkValidServiceWorker(swUrl, config);\r\n  \r\n          // Add some additional logging to localhost, pointing developers to the\r\n          // service worker/PWA documentation.\r\n          navigator.serviceWorker.ready.then(() => {\r\n            console.log(\r\n              'This web app is being served cache-first by a service ' +\r\n                'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n            );\r\n          });\r\n        } else {\r\n          // Is not localhost. Just register service worker\r\n          registerValidSW(swUrl, config);\r\n        }\r\n      });\r\n    }\r\n  }\r\n  \r\n  function registerValidSW(swUrl, config) {\r\n    navigator.serviceWorker\r\n      .register(swUrl)\r\n      .then(registration => {\r\n        registration.onupdatefound = () => {\r\n          const installingWorker = registration.installing;\r\n          if (installingWorker == null) {\r\n            return;\r\n          }\r\n          installingWorker.onstatechange = () => {\r\n            if (installingWorker.state === 'installed') {\r\n              if (navigator.serviceWorker.controller) {\r\n                // At this point, the updated precached content has been fetched,\r\n                // but the previous service worker will still serve the older\r\n                // content until all client tabs are closed.\r\n                console.log(\r\n                  'New content is available and will be used when all ' +\r\n                    'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n                );\r\n  \r\n                // Execute callback\r\n                if (config && config.onUpdate) {\r\n                  config.onUpdate(registration);\r\n                }\r\n              } else {\r\n                // At this point, everything has been precached.\r\n                // It's the perfect time to display a\r\n                // \"Content is cached for offline use.\" message.\r\n                console.log('Content is cached for offline use.');\r\n  \r\n                // Execute callback\r\n                if (config && config.onSuccess) {\r\n                  config.onSuccess(registration);\r\n                }\r\n              }\r\n            }\r\n          };\r\n        };\r\n      })\r\n      .catch(error => {\r\n        console.error('Error during service worker registration:', error);\r\n      });\r\n  }\r\n  \r\n  function checkValidServiceWorker(swUrl, config) {\r\n    // Check if the service worker can be found. If it can't reload the page.\r\n    fetch(swUrl, {\r\n      headers: { 'Service-Worker': 'script' },\r\n    })\r\n      .then(response => {\r\n        // Ensure service worker exists, and that we really are getting a JS file.\r\n        const contentType = response.headers.get('content-type');\r\n        if (\r\n          response.status === 404 ||\r\n          (contentType != null && contentType.indexOf('javascript') === -1)\r\n        ) {\r\n          // No service worker found. Probably a different app. Reload the page.\r\n          navigator.serviceWorker.ready.then(registration => {\r\n            registration.unregister().then(() => {\r\n              window.location.reload();\r\n            });\r\n          });\r\n        } else {\r\n          // Service worker found. Proceed as normal.\r\n          registerValidSW(swUrl, config);\r\n        }\r\n      })\r\n      .catch(() => {\r\n        console.log(\r\n          'No internet connection found. App is running in offline mode.'\r\n        );\r\n      });\r\n  }\r\n  \r\n  export function unregister() {\r\n    if ('serviceWorker' in navigator) {\r\n      navigator.serviceWorker.ready\r\n        .then(registration => {\r\n          registration.unregister();\r\n        })\r\n        .catch(error => {\r\n          console.error(error.message);\r\n        });\r\n    }\r\n  }\r\n  ","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport LoadPage from './LoadPage'\r\nimport * as serviceWorker from './serviceWorker';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n \r\n    <LoadPage/>\r\n  \r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://cra.link/PWA\r\nserviceWorker.register();\r\n"],"sourceRoot":""}