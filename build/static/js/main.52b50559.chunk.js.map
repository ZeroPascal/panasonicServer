{"version":3,"sources":["util/constants.ts","util/getter.ts","components/Numberpad.tsx","components/BlendDialog.tsx","components/MenuDialog.tsx","components/Alert.tsx","components/CommandPad.tsx","components/Worlds.tsx","util/CMD.ts","components/PJ.tsx","components/Programmer.tsx","App.tsx","util/SocketListener.ts","prefrences.ts","components/ControlMenu.tsx","Theme.tsx","reportWebVitals.js","index.js"],"names":["pjServer","ioCommands","commands","menuCommands","ControlCommands","PROJECTOR_MAKES","keys","THRU","DEL","CLEAR","NEXT","IF_PROG","BACK","ENTER","defaultConfig","PANASONIC","goFetch","query","a","fetchString","C","fetch","mode","res","ok","json","console","log","setter","target","command","Numberpad","props","handlePad","getButtons","map","key","Button","variant","style","padding","width","size","onClick","e","Paper","elevation","className","buttons","groups","i","length","g","slice","push","ButtonGroup","buttonGroups","BlendDialog","open","handleClose","handleCommand","buttonStyle","buttonGroupStyle","justifyContent","textAlign","margin","Dialog","onClose","aria-labelledby","DialogTitle","id","EDGE_BLENDING_ON","EDGE_BLENDING_OFF","EDGE_BLENDING_MARKERS_ON","EDGE_BLENDING_MARKERS_OFF","EDGE_BLENDING_UPPER_ON","EDGE_BLENDING_UPPER_OFF","EDGE_BLENDING_RIGHT_ON","EDGE_BLENDING_RIGHT_OFF","EDGE_BLENDING_LOWER_ON","EDGE_BLENDING_LOWER_OFF","EDGE_BLENDING_LEFT_ON","EDGE_BLENDING_LEFT_OFF","useStyles","makeStyles","theme","formControl","spacing","minWidth","selectEmpty","marginTop","MenuDialog","classes","MENU","MENU_DEFAULT_KEY","MENU_UP_KEY","MENU_LEFT_KEY","MENU_ENTER_KEY","MENU_RIGHT_KEY","MENU_DOWN_KEY","FormControl","InputLabel","Select","labelId","value","onChange","MenuItem","OSD_POSITION_UPPER_LEFT","OSD_POSITION_CENTER_LEFT","OSD_POSITION_LOWER_LEFT","OSD_POSITION_TOP_CENTER","OSD_POSITION_CENTER","OSD_POSITION_LOWER_CENTER","OSD_POSITION_UPPER_RIGHT","OSD_POSITION_LOWER_RIGHT","Alert","header","message","handleClick","approval","aria-describedby","DialogContent","DialogContentText","DialogActions","color","autoFocus","CommandPad","useState","menuOpen","setMenuOpen","blendOpen","setBlendOpen","openPowerOnAlert","setOpenPowerOnAlert","openPowerOffAlert","setOpenPowerOffAlert","s","height","SHUTTER_CLOSED","SHUTTER_OPEN","handleSelectors","TEST_PATTERN_OFF","TEST_PATTERN_WHITE","TEST_PATTERN_BLACK","TEST_PATTERN_FOCUS_RED","POWER_OFF","POWER_ON","Worlds","expanded","setExpanded","setWorld","name","Accordion","AccordionSummary","expandIcon","aria-controls","Typography","AccordionDetails","Object","entries","group","processCMD","cmdLine","selected","world","cmds","split","cmdArray","getCommandArray","forEach","cmd","newSelected","includes","filter","n","handleSelected","handleThru","indexOf","c","parseInt","toString","negative","start","end","concat","groupEnd","array","num","findInt","reset","PJ","pj","active","darkMode","handleTableSelect","time","setTime","useEffect","setInterval","getTime","clearInterval","bStyle","b","goodWord","lastSeen","t","Date","now","Math","floor","TableRow","TableCell","background","shutter","edgeBlending","regions","edgeBlendingUpper","edgeBlendingRight","edgeBlendingLower","edgeBlendingLeft","borderStyle","borderColor","fontSize","marginLeft","edgeBlendingMarker","blendRegion","testPattren","lampStatus","hdmiResolution","hmdiSignalLevel","inputSignalName_Main","table","maxHeight","Programmer","prefs","pjs","status","getStyle","good","backgroundColor","TableContainer","component","Table","TableHead","blend","blendMarker","hdmiInput","signalName","TableBody","sort","pjID","online","power","error","osdPostion","showOnlySelected","App","Props","setCMD","setActive","activeIndex","setActiveIndex","clearPresses","setClearPressed","setSelected","config","setConfig","setPJs","undefined","setCommand","rigStatus","setStatus","socket","socketIOClinet","on","EMITTING_PJS","EMITTING_STATUS","REQUEST_UPDATE","emit","REQUESTING_UPDATE","EMITTING_CONFIG","Groups","SocketListener","clearProgrammerAfterCMD","disconnect","document","onkeyup","handleCMD","handleNext","handleBack","finalCMD","diffrentPJs","rel","href","Container","position","bottom","float","Grid","container","item","TextField","helperText","fullWidth","InputLabelProps","shrink","cookieName","defaultPrefs","setCookie","Cookies","set","getCookie","get","getPrefrences","JSON","parse","d","ControlMenu","handleSettings","divRef","useRef","setOpen","handleChange","p","assign","CLEAR_SELECTED_ON_CMD","IF_SELECTED","DARK_MODE","button","ref","aria-haspopup","Menu","keepMounted","anchorEl","current","FormControlLabel","control","Switch","checked","label","process","Settings","React","createContext","Pref","Theme","prefersDarkMode","useMediaQuery","prefres","setPrefs","createMuiTheme","palette","type","ThemeProvider","Provider","CssBaseline","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.52b50559.chunk.js","sourcesContent":["\r\n\r\n//export const pjServer = 'http://localhost:3000/'\r\nexport let pjServer = 'http://192.168.10.249:3000/'\r\nif(process.env.NODE_ENV ==='production'){\r\n    pjServer = 'http://192.168.10.249:3002/'\r\n}\r\n\r\n\r\nexport const fetchSettings: RequestInit = {\r\n    method:'get',\r\n    headers:{\r\n        \r\n    }\r\n   \r\n}\r\n\r\nexport type PJs = Record<number,PJ_OBJ>\r\n\r\nexport enum ioCommands{\r\n    REQUEST_UPDATE = 'REQUEST_UPDATE',\r\n    REQUESTING_UPDATE = 'REQUESTING_UPDATE',\r\n    EMITTING_PJS = 'EMITTING_PJS',\r\n    EMITTING_STATUS = 'EMITTING_STATUS',\r\n    EMITTING_CONFIG = 'EMITTING_CONFIG'\r\n}\r\nexport interface PJ_OBJ{\r\n    id: number,\r\n    power: string,\r\n    name: string,\r\n    shutter: string,\r\n    online: string,\r\n    lastSeen: number,\r\n    lampStatus: string,\r\n    edgeBlending: string,\r\n    edgeBlendingMarker: string,\r\n    edgeBlendingUpper: string,\r\n    edgeBlendingLower: string,\r\n    edgeBlendingRight: string,\r\n    edgeBlendingLeft: string,\r\n    testPattren: string,\r\n    hmdiSignalLevel : string,\r\n    hdmiResolution: string,\r\n    osdPostion: string,\r\n    inputSignalName_Main: string,\r\n    error: string\r\n}\r\n\r\nexport interface RIG_STATUS{\r\n    online: boolean,\r\n    power: boolean,\r\n    shutter: boolean,\r\n    blend: boolean,\r\n    blendMarker: boolean,\r\n    testPattren: boolean,\r\n    lampStatus: boolean,\r\n    hdmiInput:boolean,\r\n    signalName: boolean\r\n}\r\n\r\nexport enum commands{\r\n    THRU = 'THRU',\r\n    DEL = 'DEL',\r\n    CLEAR = 'CLEAR',\r\n    ENTER = 'ENTER',\r\n    NEXT = 'NEXT',\r\n    BACK = 'BACK',\r\n    IF_PROG = 'IF_PROG'\r\n\r\n}\r\n\r\nexport enum menuCommands{\r\n    CLEAR_SELECTED_ON_CMD = 'CLEAR_SELECTED_ON_CMD',\r\n    IF_SELECTED = 'IF_SELECTED',\r\n    DARK_MODE = 'DARK_MODE'\r\n}\r\nexport const keys= ['7','8','9','4','5','6','1','2','3','-','0','+',commands.THRU,commands.DEL, commands.CLEAR, commands.NEXT, commands.IF_PROG, commands.BACK, commands.ENTER]\r\n\r\nexport enum ControlCommands{\r\n    POWER_OFF = 'POWER_OFF',\r\n    POWER_ON = 'POWER_ON',\r\n    SHUTTER_CLOSED = 'SHUTTER_CLOSED',\r\n    SHUTTER_OPEN = 'SHUTTER_OPEN',\r\n    EDGE_BLENDING_OFF = 'EDGE_BLENDING_OFF',\r\n    EDGE_BLENDING_ON = 'EDGE_BLENDING_ON',\r\n    EDGE_BLENDING_MARKERS_ON = 'EDGE_BLENDING_MARKERS_ON',\r\n    EDGE_BLENDING_MARKERS_OFF = 'EDGE_BLENDING_MARKERS_OFF',\r\n    TEST_PATTERN_OFF = 'TEST_PATTERN_OFF',\r\n    TEST_PATTERN_WHITE = 'TEST_PATTERN_WHITE',\r\n    TEST_PATTERN_BLACK = 'TEST_PATTERN_BLACK',\r\n    TEST_PATTERN_FOCUS_RED = 'TEST_PATTERN_FOCUS_RED',\r\n    MENU = 'MENU',\r\n    MENU_DOWN_KEY = 'MENU_DOWN_KEY',\r\n    MENU_UP_KEY = 'MENU_UP_KEY',\r\n    MENU_RIGHT_KEY = 'MENU_RIGHT_KEY',\r\n    MENU_LEFT_KEY = 'MENU_LEFT_KEY',\r\n    MENU_DEFAULT_KEY = 'MENU_DEFAULT_KEY',\r\n    MENU_ENTER_KEY = 'MENU_ENTER_KEY',\r\n    EDGE_BLENDING_UPPER_ON = 'EDGE_BLENDING_UPPER_ON',\r\n    EDGE_BLENDING_UPPER_OFF = 'EDGE_BLENDING_UPPER_OFF',\r\n    EDGE_BLENDING_LOWER_OFF = 'EDGE_BLENDING_LOWER_OFF',\r\n    EDGE_BLENDING_LOWER_ON = 'EDGE_BLENDING_LOWER_ON',\r\n    EDGE_BLENDING_RIGHT_OFF = 'EDGE_BLENDING_RIGHT_OFF',\r\n    EDGE_BLENDING_RIGHT_ON = 'EDGE_BLENDING_RIGHT_ON',\r\n    EDGE_BLENDING_LEFT_OFF = 'EDGE_BLENDING_LEFT_OFF',\r\n    EDGE_BLENDING_LEFT_ON = 'EDGE_BLENDING_LEFT_ON',\r\n    OSD_POSITION_UPPER_LEFT = 'OSD_POSITION_UPPER_LEFT',\r\n    OSD_POSITION_CENTER_LEFT = 'OSD_POSITION_CENTER_LEFT',\r\n    OSD_POSITION_LOWER_LEFT = 'OSD_POSITION_LOWER_LEFT',\r\n    OSD_POSITION_TOP_CENTER = 'OSD_POSITION_TOP_CENTER',\r\n    OSD_POSITION_CENTER = 'OSD_POSITION_CENTER',\r\n    OSD_POSITION_LOWER_CENTER = 'OSD_POSITION_LOWER_CENTER',\r\n    OSD_POSITION_UPPER_RIGHT = 'OSD_POSITION_UPPER_RIGHT',\r\n    OSD_POSITION_CENTER_RIGHT = 'OSD_POSITION_CENTER_RIGHT',\r\n    OSD_POSITION_LOWER_RIGHT = 'OSD_POSITION_LOWER_RIGHT',\r\n    PROJECTOR_NAME = 'PROJECTOR_NAME'\r\n\r\n}\r\n\r\nexport type ControlKeys = keyof typeof ControlCommands\r\n\r\nexport enum PROJECTOR_MAKES {\r\n    PANASONIC = 'PANASONIC'\r\n}\r\nexport type Group = {name: string, group: number[]}\r\nexport type Groups = Record<number,Group>\r\nexport type PROJECTOR_MAKE = keyof typeof PROJECTOR_MAKES\r\nexport interface Config {\r\n    \"IP_Top\": string,\r\n    \"Projector_Port\": number,\r\n    \"TCP_Auth\": string,\r\n    \"PJ_World_Start\": number,\r\n    \"PJ_World_End\": number,\r\n    \"PJ_World_Omit\": number[],\r\n    \"PJ_World\": number[],\r\n    \"PJ_Type\": PROJECTOR_MAKE,\r\n    \"Polling\": boolean,\r\n    \"Polling_Interval\": number,\r\n    \"Groups\": Groups\r\n}\r\nexport const defaultConfig: Config = {\r\n    \"IP_Top\": \"192.168.10.\",\r\n    \"Projector_Port\": 1024,\r\n    \"TCP_Auth\": \"admin1:\",\r\n    \"PJ_World_Start\": 101,\r\n    \"PJ_World_End\": 198,\r\n    \"PJ_World_Omit\": [],\r\n    \"PJ_World\": [],\r\n    \"PJ_Type\": PROJECTOR_MAKES.PANASONIC,\r\n    \"Polling\": false,\r\n    \"Polling_Interval\": 60000,\r\n    \"Groups\": {\r\n    }\r\n}","import * as C from './constants'\r\n//const puppeteer = require('puppeteer');\r\n\r\nasync function goFetch(query: string){\r\n    let fetchString = C.pjServer+'api/'+query\r\n   // console.log(fetchString)\r\n    try{\r\n    let res = await fetch(fetchString,{\r\n       mode: 'no-cors'\r\n    })\r\n    \r\n   // console.table(res.body)\r\n    if(res.ok){\r\n      //  console.log(await res.text())\r\n        //return await res.json()\r\n        return await res.json()\r\n    }\r\n}catch(e){\r\n    console.log(e)\r\n}\r\n    \r\n    \r\n}\r\n\r\nexport async function getPJ(target:number) {\r\n    let pj = await goFetch('status/?pj='+target)\r\n    if(pj){\r\n        return pj as unknown as C.PJ_OBJ\r\n    }\r\n    return undefined\r\n    \r\n}\r\n\r\nexport async function getPJs(){\r\n    let pjs = await goFetch('status/?pj=all')\r\n    if(pjs){\r\n        return pjs as unknown as Record<number,C.PJ_OBJ>\r\n    }\r\n}\r\nexport async function getRigStatus(){\r\n   // console.log('Getting Rig Status')\r\n    let status = await goFetch('status/?rigstatus=all')\r\n    if(status){\r\n        return status as unknown as C.RIG_STATUS\r\n    }\r\n}\r\n\r\nexport async function setter(target: number, command:  C.ControlKeys) {\r\n    console.log('Setting ',target,command)\r\n    await goFetch('set/?pj='+target+'&command='+command)\r\n}\r\nexport async function  powerOff(target: number) {\r\n     return await setter(target, C.ControlCommands.POWER_OFF)\r\n}\r\n\r\nexport async function powerOn(target: number) {\r\n    return await setter(target,C.ControlCommands.POWER_ON)\r\n}\r\n\r\nexport async function shutterOn(target:number){\r\n    console.log('Sutter On')\r\n    return await setter(target,C.ControlCommands.SHUTTER_OPEN)\r\n}\r\nexport async function shutterOff(target:number) {\r\n    return await setter(target,C.ControlCommands.SHUTTER_CLOSED)\r\n}\r\n\r\nexport async function menu(target:number) {\r\n    \r\n}\r\n","import {Button, ButtonGroup, Paper} from '@material-ui/core'\r\nimport './numberpad.css'\r\n\r\nimport * as C from '../util/constants'\r\ninterface numberpad_props{\r\n    handlePad: (e: string)=>void\r\n}\r\nexport default function Numberpad(props:numberpad_props){\r\n    const {handlePad} =props\r\n    \r\n    const getButtons=()=>{\r\n     \r\n        return C.keys.map(key=>{\r\n            return <Button variant=\"contained\" style={{padding: '10px', width: '75px'}} size={'large'} key={key} onClick={(e)=>handlePad(key)} >{key}</Button>     \r\n        })\r\n    }\r\n\r\n    const buttonGroups=()=>{\r\n        let buttons = getButtons()\r\n        let groups =[]\r\n        let chunk = 3\r\n        for(let i=0; i<=buttons.length-chunk; i+=chunk){\r\n           \r\n            let g = buttons.slice(i,chunk+i)\r\n           \r\n            groups.push(\r\n                <ButtonGroup key={'pad_group'+i}>\r\n                   {g}\r\n                </ButtonGroup>\r\n             \r\n            )\r\n        }\r\n        return groups\r\n    }\r\n    return (\r\n        <Paper elevation={1} className='pad'>\r\n            \r\n            {buttonGroups()}\r\n            {getButtons()[C.keys.length-1]}\r\n            \r\n        </Paper>\r\n\r\n    )\r\n}","import { Dialog, DialogTitle, Button, ButtonGroup } from \"@material-ui/core\";\r\nimport { CSSProperties } from \"react\";\r\nimport { ControlKeys, ControlCommands } from '../util/constants'\r\ninterface BlendDialog_Props {\r\n    open: boolean,\r\n    handleClose: () => void,\r\n    handleCommand: (e: ControlKeys) => void\r\n}\r\n\r\nexport default function BlendDialog(props: BlendDialog_Props) {\r\n    const { open, handleClose, handleCommand } = props\r\n    const buttonStyle: CSSProperties = {\r\n        padding: '20px',\r\n        width: '140px'\r\n\r\n       \r\n    }\r\n    const buttonGroupStyle: CSSProperties = {\r\n        justifyContent: 'center',\r\n        textAlign: 'center',\r\n        margin: 'auto'\r\n       \r\n        \r\n    }\r\n    return (\r\n        <Dialog key='blend_dialog'  onClose={handleClose} aria-labelledby=\"simple-dialog-title\" open={open}>\r\n            <DialogTitle style={buttonGroupStyle} key='menu_dialog_title' id=\"simple-dialog-title\">Blending</DialogTitle>\r\n            <div key='blend_div' style={{width:300, justifyContent: 'center', textAlign: 'center'}}>\r\n            <ButtonGroup style={buttonGroupStyle} key='blend_main_keys' variant=\"outlined\">\r\n                <Button style={buttonStyle} key='blend_on' onClick={(e) => handleCommand(ControlCommands.EDGE_BLENDING_ON)} >Edge Blend On</Button>\r\n                <Button style={buttonStyle} key='blend_off' onClick={(e) => handleCommand(ControlCommands.EDGE_BLENDING_OFF)} >Edge Blend Off</Button>\r\n            </ButtonGroup>\r\n\r\n            <br></br>\r\n\r\n            <ButtonGroup style={buttonGroupStyle} key='makers_main_keys' variant=\"outlined\">\r\n                <Button style={buttonStyle} key='markers_on' onClick={(e) => handleCommand(ControlCommands.EDGE_BLENDING_MARKERS_ON)} >Markers On</Button>\r\n                <Button style={buttonStyle} key='markers_off' onClick={(e) => handleCommand(ControlCommands.EDGE_BLENDING_MARKERS_OFF)} >Markers Off</Button>\r\n            </ButtonGroup>\r\n\r\n            <br></br>\r\n\r\n            <ButtonGroup style={buttonGroupStyle} key='upper_keys' variant=\"outlined\">\r\n                <Button style={buttonStyle} key='upper_on' onClick={(e) => handleCommand(ControlCommands.EDGE_BLENDING_UPPER_ON)} >Uppere On</Button>\r\n                <Button style={buttonStyle} key='upper_off' onClick={(e) => handleCommand(ControlCommands.EDGE_BLENDING_UPPER_OFF)} >Uppper Off</Button>\r\n            </ButtonGroup>\r\n\r\n            <ButtonGroup style={buttonGroupStyle} key='right_keys' variant=\"outlined\">\r\n                <Button style={buttonStyle} key='right_on' onClick={(e) => handleCommand(ControlCommands.EDGE_BLENDING_RIGHT_ON)} >Right On</Button>\r\n                <Button style={buttonStyle} key='right_off' onClick={(e) => handleCommand(ControlCommands.EDGE_BLENDING_RIGHT_OFF)} >Right Off</Button>\r\n            </ButtonGroup>\r\n\r\n            <ButtonGroup style={buttonGroupStyle} key='lower_keys' variant=\"outlined\">\r\n                <Button style={buttonStyle} key='lower_on' onClick={(e) => handleCommand(ControlCommands.EDGE_BLENDING_LOWER_ON)} >Lower On</Button>\r\n                <Button style={buttonStyle} key='lower_off' onClick={(e) => handleCommand(ControlCommands.EDGE_BLENDING_LOWER_OFF)} >Lower Off</Button>\r\n            </ButtonGroup>\r\n\r\n            <ButtonGroup style={buttonGroupStyle} key='left_keys' variant=\"outlined\">\r\n                <Button style={buttonStyle} key='left_on' onClick={(e) => handleCommand(ControlCommands.EDGE_BLENDING_LEFT_ON)} >Left On</Button>\r\n                <Button style={buttonStyle} key='left_off' onClick={(e) => handleCommand(ControlCommands.EDGE_BLENDING_LEFT_OFF)} >Left Off</Button>\r\n            </ButtonGroup>\r\n            </div>\r\n        </Dialog>\r\n    );\r\n}","import { Dialog, DialogTitle, Button, ButtonGroup, FormControl,InputLabel,Select,MenuItem, makeStyles } from \"@material-ui/core\";\r\nimport { CSSProperties } from \"react\";\r\nimport { ControlKeys, ControlCommands } from '../util/constants'\r\ninterface MenuDialog_Props {\r\n    open: boolean,\r\n    handleClose: () => void,\r\n    handleCommand: (e: ControlKeys) => void\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    formControl: {\r\n      margin: theme.spacing(1),\r\n      minWidth: 120,\r\n    },\r\n    selectEmpty: {\r\n      marginTop: theme.spacing(2),\r\n    },\r\n  }));\r\nexport default function MenuDialog(props: MenuDialog_Props) {\r\n    const { open, handleClose, handleCommand } = props\r\n    const classes = useStyles()\r\n    const buttonStyle: CSSProperties = {\r\n        padding: '20px',\r\n        width: '100px',\r\n       \r\n    }\r\n    const buttonGroupStyle: CSSProperties = {\r\n        justifyContent: 'center',\r\n        textAlign: 'center'\r\n        \r\n    }\r\n    return (\r\n        <Dialog key='menu_dialog' onClose={handleClose} aria-labelledby=\"simple-dialog-title\" open={open}>\r\n            <DialogTitle style={buttonGroupStyle} key='menu_dialog_title' id=\"simple-dialog-title\">Menu Commands</DialogTitle>\r\n            <ButtonGroup style={buttonGroupStyle} key='menu_main_keys' variant=\"outlined\">\r\n                <Button style={buttonStyle} key='menu' onClick={(e) => handleCommand(ControlCommands.MENU)} >Menu</Button>\r\n                <Button style={buttonStyle} key='enter' onClick={(e) => handleCommand(ControlCommands.MENU_DEFAULT_KEY)} >Default</Button>\r\n            </ButtonGroup>\r\n\r\n            <br></br>\r\n\r\n            <ButtonGroup style={buttonGroupStyle} key='menu_row1_keys' variant=\"outlined\">\r\n                <Button style={buttonStyle} key='up' onClick={(e) => handleCommand(ControlCommands.MENU_UP_KEY)} >Up</Button>\r\n            </ButtonGroup>\r\n\r\n            <ButtonGroup style={buttonGroupStyle} key='menu_row2_keys' variant=\"outlined\">\r\n                <Button style={buttonStyle} key='left' onClick={(e) => handleCommand(ControlCommands.MENU_LEFT_KEY)} >Left</Button>\r\n                <Button style={buttonStyle} key='enter' onClick={(e) => handleCommand(ControlCommands.MENU_ENTER_KEY)} >Enter</Button>\r\n                <Button style={buttonStyle} key='right' onClick={(e) => handleCommand(ControlCommands.MENU_RIGHT_KEY)} >Right</Button>\r\n            </ButtonGroup>\r\n\r\n            <ButtonGroup style={buttonGroupStyle} key='menu_row3_keys' variant=\"outlined\">\r\n                <Button style={buttonStyle} key='down' onClick={(e) => handleCommand(ControlCommands.MENU_DOWN_KEY)} >Down</Button>\r\n            </ButtonGroup>\r\n\r\n            <FormControl className={classes.formControl}>\r\n                <InputLabel id='osd_position'>OSD Position</InputLabel>\r\n                <Select labelId='osd_position' id='osd_postion'\r\n                 value={''} onChange={((e)=> handleCommand(e.target.value as ControlKeys))}>\r\n                     <MenuItem value={ControlCommands.OSD_POSITION_UPPER_LEFT}>Upper Left</MenuItem>\r\n                     <MenuItem value={ControlCommands.OSD_POSITION_CENTER_LEFT}>Center Left</MenuItem>\r\n                     <MenuItem value={ControlCommands.OSD_POSITION_LOWER_LEFT}>Lower Left</MenuItem>\r\n                     <MenuItem value={ControlCommands.OSD_POSITION_TOP_CENTER}>Top Center</MenuItem>\r\n                     <MenuItem value={ControlCommands.OSD_POSITION_CENTER}>Center</MenuItem>\r\n                     <MenuItem value={ControlCommands.OSD_POSITION_LOWER_CENTER}>Lower Center</MenuItem>\r\n                     <MenuItem value={ControlCommands.OSD_POSITION_UPPER_RIGHT}>Upper Right</MenuItem>\r\n                     <MenuItem value={ControlCommands.OSD_POSITION_LOWER_RIGHT}>Lower Right</MenuItem>\r\n                 </Select>\r\n                 \r\n            </FormControl>\r\n\r\n        </Dialog>\r\n    );\r\n}","import {Button, Dialog, DialogActions, DialogTitle, DialogContent, DialogContentText } from \"@material-ui/core\";\r\nimport { ControlKeys } from \"../util/constants\";\r\ninterface Alert_Props{\r\n    open: boolean,\r\n    handleCommand: (cmd: ControlKeys)=>void,\r\n    handleClose: ()=>void,\r\n    command: ControlKeys,\r\n    header: string,\r\n    message: string\r\n}\r\nexport default function Alert(props: Alert_Props){\r\n    const {open,handleCommand, command, handleClose, header, message} = props\r\n\r\n    const handleClick=(approval: boolean)=>{\r\n        if(approval){\r\n            handleCommand(command)\r\n        }\r\n        handleClose()\r\n\r\n    }\r\n    return (\r\n        <Dialog\r\n        open={open}\r\n        onClose={handleClose}\r\n        aria-labelledby=\"alert-dialog-title\"\r\n        aria-describedby=\"alert-dialog-description\"\r\n      >\r\n        <DialogTitle id=\"alert-dialog-title\">{header}</DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText id=\"alert-dialog-description\">\r\n            {message}\r\n          </DialogContentText>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={(e)=>handleClick(false)} color=\"primary\">\r\n            Cancle\r\n          </Button>\r\n          <Button onClick={(e)=>handleClick(true)} color=\"primary\" autoFocus>\r\n            Okay\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n        \r\n    )\r\n}","import { Button, Paper, ButtonGroup, FormControl, InputLabel, MenuItem, Select } from \"@material-ui/core\";\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport {CSSProperties, useState} from 'react'\r\nimport { ControlKeys, ControlCommands} from \"../util/constants\";\r\nimport BlendDialog from \"./BlendDialog\";\r\nimport MenuDialog from './MenuDialog'\r\nimport Alert from './Alert'\r\n\r\ninterface command_props{\r\n    handleCommand: (e: ControlKeys) => void\r\n}\r\nconst useStyles = makeStyles((theme) => ({\r\n    formControl: {\r\n      margin: theme.spacing(1),\r\n      minWidth: 120,\r\n    },\r\n    selectEmpty: {\r\n      marginTop: theme.spacing(2),\r\n    },\r\n  }));\r\nexport default function CommandPad(props:command_props){\r\n    const {handleCommand } = props\r\n    const [menuOpen, setMenuOpen] = useState(false)\r\n    const [blendOpen, setBlendOpen] = useState(false)\r\n    const [openPowerOnAlert, setOpenPowerOnAlert]= useState(false)\r\n    const [openPowerOffAlert, setOpenPowerOffAlert]= useState(false)\r\n    const classes = useStyles();\r\n    const s: CSSProperties={\r\n\r\n        width: '150px',\r\n        height: '50px'\r\n\r\n    }\r\n    const handleSelectors=(e: any)=>{\r\n        let target = e.target.value as ControlKeys\r\n        handleCommand(target)\r\n\r\n    }\r\n    return(\r\n       <>\r\n        <Paper  key='commandKeys' style={{width:'300px'}}>\r\n            <ButtonGroup key='power' color=\"primary\" variant=\"outlined\">\r\n            <Button  key='shutter_on' style={s} onClick={(e) => handleCommand(ControlCommands.SHUTTER_CLOSED)} >Sutter Closed (i)</Button>\r\n            <Button  key='sutter_off' style={s}  onClick={(e) => handleCommand(ControlCommands.SHUTTER_OPEN)} >Shutter Open (o)</Button>\r\n            </ButtonGroup>\r\n            <br></br>\r\n            <ButtonGroup key='shutters' color=\"primary\" variant=\"outlined\">\r\n                <Button  key='power off'  style={s}  onClick={(e) => setOpenPowerOffAlert(true)} >Power Off</Button>\r\n                <Button  key='power on' style={s}  onClick={(e) => setOpenPowerOnAlert(true)} >Power On</Button>\r\n            </ButtonGroup>\r\n            <ButtonGroup color=\"primary\" variant=\"outlined\">\r\n                <Button color=\"primary\" key='menu' variant=\"contained\" style={s}  onClick={(e) => setMenuOpen(!menuOpen)} >Menu</Button>\r\n                <Button color=\"primary\" key='blend' variant=\"contained\" style={s}  onClick={(e) => setBlendOpen(!blendOpen)} >Blend</Button>\r\n            </ButtonGroup>\r\n            <FormControl className={classes.formControl}>\r\n                <InputLabel id='test_pattren'>Test Pattren</InputLabel>\r\n                <Select labelId='test_pattren' id='test_pattren_select'\r\n                 value={''} onChange={((e)=> handleSelectors(e))}>\r\n                     <MenuItem value={ControlCommands.TEST_PATTERN_OFF}>Off</MenuItem>\r\n                     <MenuItem value={ControlCommands.TEST_PATTERN_WHITE}>White</MenuItem>\r\n                     <MenuItem value={ControlCommands.TEST_PATTERN_BLACK}>Black</MenuItem>\r\n                     <MenuItem value={ControlCommands.TEST_PATTERN_FOCUS_RED}>Focus Red</MenuItem>\r\n                 </Select>\r\n                 \r\n            </FormControl>\r\n            <MenuDialog open={menuOpen} handleClose={()=>setMenuOpen(false)} handleCommand={handleCommand}/>\r\n            <BlendDialog open={blendOpen} handleClose={()=>setBlendOpen(false)} handleCommand={handleCommand}/>\r\n        </Paper>\r\n        <Alert open={openPowerOffAlert} handleCommand={handleCommand} handleClose={()=>setOpenPowerOffAlert(false)}\r\n        header='Power Off' message='Are you sure?' command={ControlCommands.POWER_OFF}/>\r\n        <Alert open={openPowerOnAlert} handleCommand={handleCommand} handleClose={()=>setOpenPowerOnAlert(false)}\r\n        header='Power On' message='Are you sure?' command={ControlCommands.POWER_ON}/>\r\n        </>\r\n    )\r\n}\r\n","import {Accordion, AccordionSummary,AccordionDetails,Typography, Button} from '@material-ui/core'\r\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\"\r\nimport * as C from '../util/constants'\r\nimport {useState} from 'react'\r\n\r\ninterface worlds_props{\r\n    setWorld: (e:number[])=> void\r\n    name: string\r\n    groups: C.Groups\r\n}\r\nexport default function Worlds( props: worlds_props){\r\n    const [expanded, setExpanded]= useState(false)\r\n    const {setWorld, name, groups} = props\r\n\r\n    const getWorlds = ()=>{\r\n        return Object.entries(groups).map(group=>{\r\n         \r\n            return <Button key={group[0]} onClick={(e)=>setWorld(group[1].group)} >{group[1].name}</Button>\r\n        })\r\n    }\r\n    return (\r\n        <Accordion key={'world'+name} expanded={expanded} onChange={()=>setExpanded(!expanded)}>\r\n        <AccordionSummary\r\n          expandIcon={<ExpandMoreIcon />}\r\n          aria-controls=\"panel1bh-content\"\r\n          id=\"panel1bh-header\"\r\n        >\r\n          <Typography>{name}</Typography>\r\n          \r\n        </AccordionSummary>\r\n        <AccordionDetails>\r\n          {getWorlds()}\r\n        </AccordionDetails>\r\n      </Accordion>\r\n    )\r\n}","import * as C from './constants'\r\n\r\ntype cmdType = number | keyof typeof C.commands\r\nexport function processCMD(cmdLine: string, selected: number[], world: number[]) {\r\n    let cmds = cmdLine.split(' ')\r\n    let cmdArray: cmdType[] = []\r\n   // console.log('Processing ', cmds)\r\n    for (let i = 0; i < cmds.length; i++) {\r\n      //  console.log('Now Running', cmds[i])\r\n        if (cmds[i] === C.commands.THRU) {\r\n            cmdArray.push(C.commands.THRU)\r\n        } else {\r\n            \r\n            getCommandArray(cmds[i]).forEach(cmd => {\r\n                cmdArray.push(cmd)\r\n            })\r\n            \r\n           //cmdArray.concat(getCommandArray(cmds[i]))\r\n        }\r\n    }\r\n   // console.log('Parsing Complete', cmdArray)\r\n    selected = handleSelected( handleThru(cmdArray),selected)\r\n    selected = selected.filter(s=> world.includes(s))\r\n    \r\n //  console.log('Processing Complete', selected)\r\n    return selected\r\n}\r\n\r\nfunction handleThru(cmds: cmdType[]) {\r\n    let cmdArray: number[] = []\r\n    if (cmds.indexOf(C.commands.THRU) === 1 && cmds.length > 2) {\r\n        let negative = 1\r\n        let start = cmds[0] as number\r\n        if (start < 0) {\r\n            start = start * -1\r\n            negative = -1\r\n        }\r\n        let end = cmds[2] as number\r\n        if(end<start){\r\n          //  console.log('Running Thru Backwards',end, 'thru',start)\r\n            for (let i = start; i >= end; i--) {\r\n                console.log(i*negative)\r\n                cmdArray.push(i*negative)\r\n        }\r\n        } else{\r\n            for (let i = start; i <= end; i++) {\r\n                cmdArray.push(i*negative)\r\n        }\r\n        }\r\n        \r\n        if(cmds.length>2)\r\n            cmdArray= cmdArray.concat(handleThru(cmds.slice(3)))\r\n    } else{\r\n        return cmds.map(c=> {return parseInt(c.toString())})\r\n    }\r\n    return cmdArray\r\n}\r\n\r\nfunction handleSelected(cmds: number[], selected: number[]) {\r\n    let newSelected = selected\r\n    for (let i = 0; i < cmds.length; i++) {\r\n        let cmd = cmds[i]\r\n        if (cmd < 0 && newSelected.includes(cmd * -1)) { //Remove\r\n            //console.log('Removing ',s[i]*-1)\r\n            newSelected = newSelected.filter((n) => n !== (cmd * -1))\r\n        } else if (!newSelected.includes(cmd) && cmd > 0) {\r\n            newSelected.push(cmd)\r\n        }\r\n    }\r\n   \r\n    return newSelected\r\n}\r\n\r\nfunction getCommandArray(cmd: string) {\r\n    if (cmd.length === 0) {\r\n        console.groupEnd()\r\n        return []\r\n    }\r\n   // console.group('Processing ', cmd)\r\n\r\n    let array: number[] = []\r\n    if (cmd.slice(0, 5) === C.commands.THRU) {\r\n   //     console.log('Thru')\r\n        //return [C.commands.THRU]\r\n    } else {\r\n        let num = findInt(cmd)\r\n        array.push(num)\r\n        // console.table(array)\r\n      //  console.log(num, cmd.indexOf(num + ''))\r\n        let reduced = cmd.slice(cmd.indexOf(num + \"\") + ((num + '').length))\r\n        //console.log('Reduced',reduced)\r\n\r\n        let reset = getCommandArray(reduced)\r\n        for (let i = 0; i < reset.length; i++) {\r\n            array.push(reset[i])\r\n        }\r\n\r\n        //console.table(array)\r\n\r\n    }\r\n    //array.push(getCommandArray(c.))\r\n    return array\r\n}\r\nfunction findInt(cmd: string) {\r\n    // console.log('Finding int', c)\r\n    let i = 0\r\n    let negative = 1\r\n    if (cmd[0] === '-') {\r\n        negative = -1\r\n        cmd = cmd.slice(1)\r\n    }\r\n\r\n    // console.log('C ',c)\r\n    while (i < cmd.length) {\r\n        if (parseInt(cmd[i]) >= 0) {\r\n            i++\r\n        }\r\n        else {\r\n            i = cmd.length\r\n        }\r\n    }\r\n    // console.log('Parsed Int' ,parseInt(c.slice(0,i))*negative)\r\n    return (parseInt(cmd.slice(0, i)) * negative)\r\n}\r\n","import { TableCell, TableRow, Button } from \"@material-ui/core\"\r\nimport BorderColorIcon from '@material-ui/icons/BorderColor';\r\nimport { CSSProperties, useEffect, useState } from \"react\"\r\nimport { PJ_OBJ } from \"../util/constants\"\r\ninterface PJ_Props {\r\n    pj: PJ_OBJ,\r\n    selected: boolean,\r\n    active: boolean,\r\n    darkMode: boolean,\r\n    handleTableSelect: (id: number) => void\r\n}\r\nfunction PJ(props: PJ_Props) {\r\n    const { pj, selected, active, darkMode, handleTableSelect } = props\r\n    const [time, setTime] = useState('0')\r\n\r\n    useEffect(() => {\r\n        \r\n      //  getTime()\r\n        \r\n        let i =setInterval(getTime,1000)\r\n        \r\n        return function cleanup(){\r\n            clearInterval(i)\r\n        }\r\n       \r\n        \r\n    })\r\n\r\n    const style = () => {\r\n     //   console.log('Selected',selected, 'Active',active)\r\n        let s: CSSProperties = {\r\n            color: 'Gainsboro',\r\n            textAlign: 'center'\r\n\r\n        }\r\n        if (active) {\r\n            s.color = 'black'\r\n            s.background = 'lightgray'\r\n\r\n        } else if (selected) {\r\n            s.color = 'black'\r\n            \r\n        }\r\n        return s\r\n    }\r\n    const bStyle = (b = 'On', goodWord = 'On'):CSSProperties => {\r\n        return  {\r\n            textAlign: 'center',\r\n            margin:'auto',\r\n            color: b===goodWord? darkMode?'white' :'black' : 'red'\r\n            \r\n        }\r\n        \r\n    }\r\n    const getTime = () => {\r\n        if (pj.lastSeen < 0) {\r\n            setTime('N/A')\r\n            return \r\n        }\r\n        let t = (Date.now() - pj.lastSeen) / 1000\r\n\r\n        t = Math.floor(t)\r\n        if (t > 59) {\r\n            setTime(Math.floor(t / 60) + 'm')\r\n            return\r\n        }\r\n            setTime(t + 's')\r\n        \r\n    }\r\n\r\n    const blendRegion =()=>{\r\n        let color = ''\r\n        let regions = [pj.edgeBlendingUpper, pj.edgeBlendingRight, pj.edgeBlendingLower, pj.edgeBlendingLeft]\r\n        for(let i=0; i < regions.length; i++){\r\n            switch(regions[i]){\r\n                case 'On':\r\n                    color+= ' green'\r\n                    break;\r\n                case 'Off':\r\n                    color+= ' black'\r\n                    break\r\n                case 'Unknown':\r\n                    color+= ' yellow'\r\n                    break\r\n                default:\r\n                    color+=' red'\r\n            }\r\n        }\r\n      \r\n        return (\r\n            <p style={{ padding: 10,  margin:'auto', textAlign: 'center', borderStyle: 'solid', borderColor: color}}key={pj.id+'brbox'}> {pj.edgeBlending}\r\n             <BorderColorIcon  style={{fontSize:'15', marginLeft: '5', marginTop: 'auto', color:pj.edgeBlendingMarker==='On'?'red':'gray'}} /></p>\r\n        )\r\n    }\r\n    const getID=()=>{\r\n        return <Button> {pj.name==='Unknown'?pj.id:pj.name}</Button>\r\n    }\r\n\r\n    return (\r\n        <TableRow key={pj.id}>\r\n            <TableCell onClick={e => handleTableSelect(pj.id)} style={style()} key={pj.id + 'id'}>{getID()}</TableCell>\r\n            <TableCell style={bStyle(pj.shutter, 'Open')} key={pj.id + 'shutter'}>{pj.shutter}</TableCell>\r\n            <TableCell style={bStyle(pj.edgeBlending, 'On')} key={pj.id+\"blend\"}> {blendRegion()} </TableCell>\r\n            <TableCell style={bStyle(pj.edgeBlendingMarker, 'Off')}key={pj.id+'blendmarker'}>{pj.edgeBlendingMarker}</TableCell>\r\n            <TableCell style={bStyle(pj.testPattren, 'Off')}key={pj.id+'test'}>{pj.testPattren}</TableCell>\r\n            <TableCell style={bStyle(pj.lampStatus, 'Lamp On')} key={pj.id+'lamp'}>{pj.lampStatus}</TableCell>\r\n            <TableCell style={bStyle(pj.hdmiResolution,'1920x1200p')} key={pj.id+'hdmi'}>{pj.hdmiResolution}/{pj.hmdiSignalLevel}</TableCell>\r\n            <TableCell style={bStyle(pj.inputSignalName_Main,'1920x1200/60RB')} key={pj.id+'signal_name_main'}>{pj.inputSignalName_Main}</TableCell>\r\n            <TableCell style={bStyle()} key={pj.id + 'last'}>{time}</TableCell>\r\n        </TableRow>\r\n\r\n    )\r\n}\r\n\r\nexport default PJ\r\n\r\n//<Button className='PJ' style={{padding:'5px', margin:'5px'}} variant=\"outlined\" color=\"primary\" key={pj} >{pj}</Button>\r\n/*\r\n<TableCell style={style()}key={pj.id+'id'}>{pj.id}</TableCell>\r\n<TableCell key={pj.id+'shutter'}>{pj.shutter+''}</TableCell>\r\n<TableCell key={pj.id+'power'}>{pj.power+''}</TableCell>\r\n<TableCell key={pj.id+'online'}>{pj.online+''}</TableCell>\r\n<TableCell key={pj.id+'last'}>{(Date.now()-pj.lastSeen)/1000}</TableCell>\r\n*/","import PJ from \"./PJ\"\r\nimport * as C from '../util/constants'\r\nimport { Paper, makeStyles, Table, TableBody, TableCell, TableContainer, TableHead, TableRow} from '@material-ui/core'\r\nimport { prefres } from \"../prefrences\"\r\nimport { CSSProperties } from \"react\"\r\ninterface Programmer_Props{\r\n    selected: number[],\r\n    active: number[],\r\n    world: number[],\r\n    prefs: prefres,\r\n    status: C.RIG_STATUS,\r\n    pjs: Record<number, C.PJ_OBJ>,\r\n    handleTableSelect: (id:number)=> void\r\n}\r\nconst useStyles = makeStyles({\r\n    table:{\r\n        minWidth:300,\r\n        maxHeight:400\r\n    }\r\n})\r\nexport default function Programmer(props : Programmer_Props){\r\n    const {active, world, selected, prefs, pjs, status, handleTableSelect} = props\r\n    const classes = useStyles()\r\n    const getPJ=(pjID:number):C.PJ_OBJ=>{\r\n        let pj= pjs[pjID]\r\n        if(!pj){\r\n            return{\r\n                id: pjID,\r\n                online: 'false',\r\n                shutter: 'Unknown',\r\n                power: 'Unknown',\r\n                lastSeen: -1,\r\n                error: 'NOT SEEN',\r\n                lampStatus: 'Unknown',\r\n                edgeBlending: 'Unknown',\r\n                edgeBlendingMarker: 'Unknown',\r\n                testPattren: 'Unknown',\r\n                edgeBlendingLeft: 'Unknown',\r\n                edgeBlendingLower: 'Unknown',\r\n                edgeBlendingRight: 'Unknown',\r\n                edgeBlendingUpper: 'Unknown',\r\n                hdmiResolution: 'Unknown',\r\n                hmdiSignalLevel: 'Unknown',\r\n                osdPostion: 'Unknown',\r\n                inputSignalName_Main: 'Unknown',\r\n                name: 'Unknown'\r\n            }\r\n        }\r\n        return pj\r\n    }\r\n    const getPJs=()=>{\r\n        world.sort()\r\n       \r\n        return world.map(s=>{\r\n            let pj =getPJ(s)\r\n            if((prefs.showOnlySelected&& selected.includes(s)) || !prefs.showOnlySelected){\r\n                return <PJ key={'pj id_'+pj.id} pj={pj} handleTableSelect={handleTableSelect} selected={selected.includes(s)} darkMode={prefs.darkMode} active={active.includes(s)} />\r\n            } \r\n            return <></>\r\n            \r\n        })\r\n    }\r\n    const getStyle=(good = true)=>{\r\n        let s : CSSProperties={\r\n            width: '50',\r\n            textAlign: 'center'\r\n        }\r\n        if(!good)\r\n         s.backgroundColor = prefs.darkMode? 'red': 'red'\r\n        \r\n        return s\r\n    }\r\n    return(\r\n        <TableContainer  key='p-tc' component={Paper}>\r\n            <Table key='p-t' className={classes.table}>\r\n                <TableHead key='p-th'>\r\n                    <TableRow key='p-r'>\r\n                        <TableCell style={getStyle()} key='p_pj'> PJ </TableCell>\r\n                        <TableCell style={getStyle(status.shutter)} key='p_s'> Shutter</TableCell>\r\n                        <TableCell style={getStyle(status.blend)} key='p_b'> Blend</TableCell>\r\n                        <TableCell style={getStyle(status.blendMarker)} key='p_bm'> Blend Marker</TableCell>\r\n                        <TableCell style={getStyle(status.testPattren)} key='p_test'> Test Pattern</TableCell>\r\n                        <TableCell style={getStyle(status.lampStatus)} key='p_lamp'> Lamp Status</TableCell>\r\n                        <TableCell style={getStyle(status.hdmiInput)} key='p_hdmi'> HDMI Input</TableCell>\r\n                        <TableCell style={getStyle(status.signalName)} key='p_signal name'> Signal Name</TableCell>\r\n                        <TableCell style={getStyle()}  key='p_ls'> Last Seen</TableCell>\r\n\r\n                    </TableRow>\r\n                </TableHead>\r\n                <TableBody>\r\n                    {getPJs()}\r\n                </TableBody>\r\n            </Table>\r\n        </TableContainer>\r\n       \r\n    )\r\n}\r\n\r\n/*\r\n <Container maxWidth='sm' style={{backgroundColor: 'white', width: '200px', }}>\r\n        <Grid>\r\n            Programmer\r\n            {getSelected()}\r\n        </Grid>\r\n        </Container>\r\n        */","\r\nimport { useEffect, useState } from 'react';\r\nimport './App.css';\r\nimport {  setter } from './util/getter';\r\nimport * as C from './util/constants'\r\n//import { getPJ } from './util/getter';\r\n//import PJ from './components/PJ'\r\nimport Numberpad from './components/Numberpad';\r\nimport CommandPad from './components/CommandPad'\r\nimport Worlds from './components/Worlds'\r\nimport {  TextField, Container,  Grid } from '@material-ui/core'\r\nimport { processCMD } from './util/CMD';\r\nimport Programmer from './components/Programmer';\r\nimport  * as Prefs from './prefrences';\r\nimport SocketListener from './util/SocketListener';\r\nimport socketIOClinet  from 'socket.io-client'\r\n\r\ninterface App_Prps{\r\n  prefs: Prefs.prefres\r\n}\r\nfunction App(Props: App_Prps ) {\r\n  const {prefs} = Props\r\n  const [cmd, setCMD] = useState('')\r\n  const [active, setActive] = useState<number[]>([])\r\n  const [activeIndex, setActiveIndex] = useState(-1)\r\n  const [clearPresses, setClearPressed] = useState(0)\r\n  const [selected, setSelected] = useState<number[]>([])\r\n  const [config, setConfig] =useState(C.defaultConfig)\r\n  const [world, setWorld] = useState<number[]>([])\r\n  const [pjs, setPJs] = useState<C.PJs>({})\r\n  \r\n  const [command, setCommand]=useState<C.ControlKeys | undefined>(undefined)\r\n  const [rigStatus, setStatus] = useState<C.RIG_STATUS>({\r\n    online: false,\r\n    power: false,\r\n    shutter: false,\r\n    blendMarker: false,\r\n    blend: false,\r\n    testPattren: false,\r\n    lampStatus: false,\r\n    hdmiInput: false,\r\n    signalName: false\r\n\r\n  })\r\n  \r\n  \r\n  useEffect(() => {\r\n  \r\n    let socket = socketIOClinet()\r\n    SocketListener(socket, setStatus, setPJs,setConfig, setWorld)\r\n\r\n    if(command){\r\n      for (let i = 0; i < active.length; i++) {\r\n        if(command)\r\n          setter(active[i],command)\r\n      }\r\n      if (prefs.clearProgrammerAfterCMD) {\r\n        setActive([])\r\n        setSelected([])\r\n      }\r\n      setCommand(undefined)\r\n    }\r\n // let i =setInterval(pollPJs,10000)\r\n    //console.log(selected)\r\n    return function cleanup(){\r\n     \r\n      socket.disconnect()\r\n    }\r\n  \r\n   \r\n  },[active,command, prefs])\r\n\r\n\r\n  document.onkeyup = ((e) => {\r\n   // console.log(e)\r\n    let key = e.key\r\n  //  console.log(key)\r\n    if (C.keys.includes(key)) {\r\n      handlePad(key)\r\n      return\r\n    }\r\n    switch (key) {\r\n      case 't':\r\n        handlePad(C.commands.THRU)\r\n        break;\r\n      case 'c':\r\n        handlePad(C.commands.CLEAR)\r\n        break;\r\n      case '=':\r\n        handlePad('+')\r\n        break;\r\n      case 'Backspace':\r\n        handlePad(C.commands.DEL)\r\n        break;\r\n      case 'Enter':\r\n        //processCMD();\r\n        handlePad(C.commands.ENTER)\r\n        break;\r\n      case 'i':\r\n        handleCommand(C.ControlCommands.SHUTTER_CLOSED)\r\n        break;\r\n      case 'o':\r\n        handleCommand(C.ControlCommands.SHUTTER_OPEN)\r\n        break;\r\n      \r\n      case 'ArrowUp':\r\n        handlePad(C.commands.IF_PROG)\r\n        break;\r\n      case 'ArrowRight':\r\n        handlePad(C.commands.NEXT)\r\n        break;\r\n      case 'ArrowLeft':\r\n        handlePad(C.commands.BACK)\r\n        break;\r\n    }\r\n\r\n  })\r\n  \r\n  const handleNext = () => {\r\n    //console.log('Nexting')\r\n    if (selected.length < 1) {\r\n      return\r\n    }\r\n    let i = activeIndex\r\n    if (activeIndex+1 < selected.length) {\r\n      i += 1\r\n    }\r\n    if (activeIndex + 1 >= selected.length) {\r\n      i =0\r\n    }\r\n    let a: number[] = []\r\n    a.push(selected[i])\r\n    setActiveIndex(i)\r\n    setActive(a)\r\n  }\r\n  const handleBack = () => {\r\n    if (selected.length < 1) {\r\n      return\r\n    }\r\n    let i = activeIndex\r\n    if (activeIndex-1 >=0) {\r\n      i -= 1\r\n    }\r\n    if (activeIndex-1 <0) {\r\n      i =selected.length-1\r\n    }\r\n    let a: number[] = []\r\n    a.push(selected[i])\r\n    setActiveIndex(i)\r\n    setActive(a)\r\n  }\r\n  \r\n  const handlePad = (e: string) => {\r\n    //console.log(e)\r\n    if (e === C.commands.CLEAR) {\r\n      setClearPressed((clearPresses + 1))\r\n      //console.log('Clear', clearPresses)\r\n      switch (clearPresses) {\r\n        case 0:\r\n          setCMD('')\r\n          break;\r\n        case 1:\r\n          setActive([])\r\n          setActiveIndex(-1)\r\n          break;\r\n        case 2:\r\n          setSelected([])\r\n          break;\r\n      }\r\n      return\r\n    }\r\n    setClearPressed(0)\r\n    switch (e) {\r\n      case C.commands.DEL:\r\n        //console.log(cmd.slice(-6) === ' THRU ')\r\n        // console.log(cmd.includes('THRU'))\r\n        if (cmd.length >= 6 && cmd.slice(-6) === ' ' + C.commands.THRU + ' ') {\r\n          let t = cmd.slice(0, cmd.length - 6)\r\n          setCMD(t)\r\n        } else {\r\n          setCMD(cmd.slice(0, (cmd.length - 1)))\r\n        }\r\n        break;\r\n      case C.commands.THRU:\r\n        if (cmd.length > 0)\r\n          setCMD(cmd + ' THRU ')\r\n        break;\r\n      case C.commands.ENTER:\r\n        handleCMD()\r\n        break;\r\n      case '-':\r\n        if (cmd[cmd.length - 1] !== ' ') {\r\n          setCMD(cmd + e)\r\n        }\r\n        break\r\n      case C.commands.NEXT:\r\n        handleNext();\r\n        break;\r\n      case C.commands.BACK:\r\n        handleBack()\r\n        break;\r\n      case C.commands.IF_PROG:\r\n        setActive(selected);\r\n        setActiveIndex(-1)\r\n        break;\r\n      default:\r\n      \r\n        setCMD(cmd + e)\r\n       // console.log('setting CMD',cmd)\r\n    }\r\n  //  console.log('CMD',cmd)\r\n  }\r\n  const handleTableSelect=(id:number)=>{\r\n   // let s = [...selected]\r\n    let a = [...active]\r\n    if(a.includes(id)){\r\n      setActive(a.filter(pj=> pj !== id))\r\n    } else{\r\n     \r\n      a.push(id)\r\n      setActive(a)\r\n     // s.push(id)\r\n      //console.log(s)\r\n     // setSelected(s)\r\n    }\r\n  }\r\n\r\n  const handleCMD =() => {\r\n   \r\n    let s = processCMD(cmd, active, world)\r\n    finalCMD(s)\r\n    setCMD('')\r\n    \r\n  }\r\n  const finalCMD= (n:number[])=>{\r\n   // console.log(n)\r\n    setActive(n)\r\n    let diffrentPJs: number[] =[]\r\n  //  console.log(n)\r\n    n.forEach(id=>{\r\n      if(!selected.includes(id)){\r\n        diffrentPJs.push(id)\r\n      }\r\n    })\r\n    \r\n    setSelected(diffrentPJs.concat(selected))\r\n    \r\n  }\r\n  const handlePowerOff = () => {\r\n    if (window.confirm('Power Off' + selected + '?')) {\r\n      setCommand(C.ControlCommands.POWER_OFF)\r\n    }\r\n  }\r\n  const handlePowerOn = () => {\r\n    if (window.confirm('Power On' + selected + '?')) {\r\n      setCommand(C.ControlCommands.POWER_ON)\r\n    }\r\n  }\r\n  const handleCommand=(command: keyof typeof C.ControlCommands)=>{\r\n    handleCMD()\r\n    setCommand(command)\r\n    \r\n  }\r\n\r\n  \r\n\r\n  return (\r\n    <div className=\"App\">\r\n\r\n      <link rel=\"stylesheet\" href=\"https://fonts.googleapis.com/css?family=Roboto:300,400,500,700&display=swap\" />\r\n      <link rel=\"stylesheet\" href=\"https://fonts.googleapis.com/icon?family=Material+Icons\" />\r\n      <Container style={{position: 'relative', bottom:'3px', textAlign:'left', float:'left'}}>\r\n      \r\n      </Container>\r\n      <Grid container spacing={6} className='inputArea' >\r\n        <Grid item >\r\n          <Numberpad handlePad={handlePad} />\r\n        </Grid>\r\n        <Grid item>\r\n          <CommandPad  handleCommand={handleCommand} />\r\n        </Grid>\r\n      </Grid>\r\n      <TextField\r\n        id=\"cmd\"\r\n\r\n        style={{ margin: 8, width: '90%' }}\r\n        value={cmd}\r\n        helperText=\"Command Line\"\r\n        fullWidth\r\n        margin=\"normal\"\r\n        InputLabelProps={{\r\n          shrink: true,\r\n        }}\r\n        variant=\"outlined\"\r\n        \r\n      />\r\n      <Container key='groups_Worlds' style={{width:'80%'}}>\r\n      <Worlds setWorld={setWorld} groups={config.Groups} name={'Worlds'}/>\r\n      <Worlds setWorld={finalCMD} groups={config.Groups} name={'Groups'}/>\r\n      </Container>\r\n      <br key=\"programmer break\"></br>\r\n      <Container key='programmer'>\r\n        <Programmer handleTableSelect={handleTableSelect} key={'pg'} prefs={prefs} world={world} status={rigStatus} selected={selected} active={active} \r\n        pjs={pjs} />\r\n       \r\n       \r\n        <br key='stats break'></br>\r\n      \r\n\r\n      </Container>\r\n     \r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import { Socket } from 'socket.io-client'\r\nimport * as C from './constants'\r\n\r\nexport default function SocketListener(\r\n    socket: Socket, \r\n    setStatus:React.Dispatch<React.SetStateAction<C.RIG_STATUS>>, \r\n    setPJs:React.Dispatch<React.SetStateAction<C.PJs>>, \r\n    setConfig:React.Dispatch<React.SetStateAction<C.Config>>,\r\n    setWorld:React.Dispatch<React.SetStateAction<number[]>>\r\n    ){\r\n        \r\n    socket.on('connected',()=>{\r\n        console.log('Connected!')\r\n       // socket.emit('Hello')\r\n    })\r\n    socket.on('Hello',()=>{\r\n        //console.log('Hello!')\r\n    })\r\n    socket.on(C.ioCommands.EMITTING_PJS,(pjs: C.PJs)=>{\r\n        setPJs(pjs)\r\n       // console.log('Got new PJs!')\r\n    })\r\n    socket.on(C.ioCommands.EMITTING_STATUS,(status:C.RIG_STATUS)=>{\r\n        setStatus(status)\r\n    })\r\n    socket.on(C.ioCommands.REQUEST_UPDATE,()=>{\r\n       // console.log('Requesting Update')\r\n        socket.emit(C.ioCommands.REQUESTING_UPDATE)\r\n    })\r\n    socket.on(C.ioCommands.EMITTING_CONFIG,(config: C.Config)=>{\r\n        setConfig(config)\r\n        if(config.Groups[0], config.Groups[0].group)\r\n            setWorld(config.Groups[0].group)\r\n    })\r\n\r\n}","\r\nimport Cookies from 'js-cookie'\r\nexport interface prefres{\r\n    darkMode: boolean,\r\n    clearProgrammerAfterCMD: boolean,\r\n    showOnlySelected: boolean\r\n}\r\nconst cookieName= 'prefs'\r\n//const prefersDarkMode = useMediaQuery('(prefers-color-scheme: dark)');\r\nexport const defaultPrefs: prefres={\r\n    darkMode: true, //prefersDarkMode,\r\n    clearProgrammerAfterCMD: false,\r\n    showOnlySelected: false\r\n}\r\n\r\nexport const setCookie=(prefs: prefres)=>{\r\n    Cookies.set(cookieName,prefs)\r\n}\r\nconst getCookie =()=>{\r\n    return Cookies.get(cookieName)\r\n    /*\r\n    let c = Cookies.get(cookieName)\r\n    if(c){\r\n        return JSON.parse(c) \r\n       // return c as unknown as prefres\r\n    } else {\r\n        setCookie(defaultPrefs)\r\n        return defaultPrefs\r\n    }\r\n    */\r\n}\r\n\r\nexport function getPrefrences(darkMode=true):prefres{\r\n    let c = getCookie()\r\n    if(c){\r\n        return JSON.parse(c)\r\n    }else{\r\n        let d = defaultPrefs\r\n        d.darkMode = darkMode\r\n        setCookie(d)\r\n        return d\r\n    }\r\n     \r\n    //return getCookie()\r\n}\r\n\r\n\r\n\r\nexport function setCookie_DarkMode(mode: boolean){\r\n    let c = getPrefrences()\r\n    c.darkMode=mode\r\n    setCookie(c)\r\n\r\n}\r\nexport function setCookie_ClearProgrammerAfterCMD(mode: boolean){\r\n    let c = getPrefrences()\r\n    c.clearProgrammerAfterCMD = mode\r\n    setCookie(c)\r\n}\r\nexport function setCookie_ShowOnlySelected(mode:boolean){\r\n    let c =getPrefrences()\r\n    console.log(mode)\r\n    c['showOnlySelected'] = mode\r\n    setCookie(c)\r\n}\r\n\r\nexport function getDarkMode(){\r\n    return getPrefrences().darkMode\r\n}\r\n\r\nexport function getClearProgrammerAfterCMD(){\r\n    return getPrefrences().clearProgrammerAfterCMD\r\n}\r\nexport function getShowOnlySelected(){\r\n    return getPrefrences().showOnlySelected\r\n}","import { Button, Menu, MenuItem, FormControlLabel, Switch } from '@material-ui/core'\r\n//import {SettingsIcon} from '@material-ui/icons/Settings';\r\nimport SettingsIcon from \"@material-ui/icons/Settings\";\r\nimport { useState, useRef, useContext } from 'react'\r\nimport { prefres } from '../prefrences';\r\nimport { Settings } from '../Theme';\r\nimport * as C from '../util/constants'\r\n\r\n\r\ninterface menu_props {\r\n  handleSettings: (e: prefres) => void,\r\n  prefs: prefres\r\n}\r\nexport default function ControlMenu(props: menu_props) {\r\n\r\n // const value = useContext(Settings)\r\n  //console.log(value)\r\n  const { prefs, handleSettings } = props\r\n  const divRef = useRef(null)\r\n\r\n  const [open, setOpen] = useState(false)\r\n\r\n  const handleOpen = () => {\r\n    setOpen(true)\r\n\r\n\r\n  }\r\n  const handleClose = (e: C.menuCommands | undefined) => {\r\n    setOpen(false)\r\n  }\r\n\r\n  const handleChange = (e: C.menuCommands) => {\r\n    \r\n    let p = Object.assign({},prefs)\r\n    switch (e) {\r\n      case C.menuCommands.CLEAR_SELECTED_ON_CMD:\r\n        p.clearProgrammerAfterCMD = !prefs.clearProgrammerAfterCMD\r\n        break;\r\n      case C.menuCommands.IF_SELECTED:\r\n        p.showOnlySelected = !prefs.showOnlySelected\r\n        break;\r\n      case C.menuCommands.DARK_MODE:\r\n        p.darkMode = !prefs.darkMode\r\n        break;\r\n    }\r\n    handleSettings(p)\r\n  }\r\n  let button =\r\n    <Button ref={divRef} aria-controls=\"simple-menu\" aria-haspopup=\"true\" onClick={() => handleOpen()}>\r\n      <SettingsIcon />\r\n    </Button>\r\n  if(process.env.NODE_ENV === 'development'){\r\n    document.title = 'PJ Dev'\r\n  }\r\n  return (\r\n    <div>\r\n\r\n      {button}\r\n\r\n\r\n      <Menu\r\n        id=\"simple-menu\"\r\n        keepMounted\r\n        //@ts-ignore\r\n        anchorEl={divRef.current}\r\n        open={open}\r\n        onClose={() => handleClose(undefined)}\r\n      >\r\n        <MenuItem >\r\n          <FormControlLabel\r\n            control={<Switch key={C.menuCommands.CLEAR_SELECTED_ON_CMD} checked={prefs.clearProgrammerAfterCMD}\r\n              onClick={(e) => handleChange(C.menuCommands.CLEAR_SELECTED_ON_CMD)} name=\"clearSelectedOnPress\" />}\r\n            label=\"Clear Programmer On CMD\"\r\n          />\r\n        </MenuItem>\r\n        <MenuItem>\r\n\r\n          <FormControlLabel\r\n            control={<Switch key={C.menuCommands.IF_SELECTED} checked={prefs.showOnlySelected}\r\n              onChange={(e) => handleChange(C.menuCommands.IF_SELECTED)} name=\"showonlyselected\" />}\r\n            label=\"Show Only Selected\"\r\n          />\r\n        </MenuItem>\r\n        <MenuItem>\r\n\r\n          <FormControlLabel\r\n            control={<Switch key={C.menuCommands.DARK_MODE} checked={prefs.darkMode}\r\n              onChange={(e) => handleChange(C.menuCommands.DARK_MODE)} name=\"darkMode\" />}\r\n            label=\"Dark Mode\"\r\n          />\r\n        </MenuItem>\r\n      </Menu>\r\n      <span style={{textAlign:'center', fontSize: 10}}> Projector Controler v{process.env.REACT_APP_VERSION}{process.env.NODE_ENV==='development'?' Beta':''}</span>\r\n    </div>\r\n  )\r\n\r\n}","import React, { useEffect, useState } from 'react';\r\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\r\nimport { createMuiTheme, ThemeProvider } from '@material-ui/core/styles';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport App from './App';\r\nimport * as Pref from './prefrences';\r\nimport ControlMenu from './components/ControlMenu';\r\n\r\nexport const Settings = React.createContext(Pref.defaultPrefs)\r\n\r\nexport default function Theme() {\r\n    const prefersDarkMode = useMediaQuery('(prefers-color-scheme: dark)');\r\n    // const prefersDarkMode = getDarkMode()  \r\n\r\n    const [prefres, setPrefs] = useState(Pref.defaultPrefs)\r\n\r\n    useEffect(() => {\r\n        setPrefs(Pref.getPrefrences(prefersDarkMode))\r\n    }, [prefersDarkMode])\r\n\r\n    const theme = createMuiTheme({\r\n        palette: {\r\n            type: prefres.darkMode ? 'dark' : 'light',\r\n        }\r\n    })\r\n   \r\n    const handlePrefs = (p: Pref.prefres) => {\r\n       // console.log(prefres)\r\n        setPrefs(p)\r\n      //  console.log(prefres)\r\n        Pref.setCookie(p)\r\n    }\r\n    return (\r\n        <ThemeProvider theme={theme}>\r\n            <Settings.Provider value={prefres}/>\r\n            <ControlMenu handleSettings={handlePrefs} prefs={prefres} />\r\n            <CssBaseline />\r\n            <App prefs={prefres} />\r\n        </ThemeProvider>\r\n    );\r\n}","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport Theme from './Theme'\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\n/*const prefersDarkMode = true\r\nconst theme = React.useMemo(\r\n  () =>\r\n    createMuiTheme({\r\n      palette: {\r\n        type: prefersDarkMode? 'dark' : 'light'\r\n      },\r\n    }),\r\n  [prefersDarkMode],\r\n);\r\n*/\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n \r\n    <Theme/>\r\n  \r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}