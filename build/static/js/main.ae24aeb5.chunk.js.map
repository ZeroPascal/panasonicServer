{"version":3,"sources":["util/constants.ts","components/numberpad.tsx","components/BlendDialog.tsx","components/CommandInterfaces/DropdownStyle.ts","components/CommandInterfaces/Testpattern.tsx","components/MenuDialog.tsx","components/Alert.tsx","components/CommandInterfaces/LensCal.tsx","components/LensDialog.tsx","components/CommandInterfaces/Power.tsx","components/CommandInterfaces/Shutter.tsx","components/CommandInterfaces/BackColor.tsx","components/CommandInterfaces/InputSelection.tsx","components/CommandInterfaces/OSDPostion.tsx","components/CommandInterfaces/OSDRotation.tsx","components/CommandInterfaces/PJPostion.tsx","components/CommandInterfaces/QuickSlider.tsx","components/ProjectorSetupDialog.tsx","components/CommandPad.tsx","util/CMD.ts","components/PJCard.tsx","components/ProgrammerTable.tsx","components/Programmer.tsx","util/getter.ts","components/PatchAddDialog.tsx","components/Patch.tsx","util/UpdateLog.ts","components/About.tsx","components/ConfigDialog.tsx","util/SocketListener.ts","components/InputPopup.tsx","components/Worlds.tsx","components/WorldBox.tsx","App.tsx","prefrences.ts","components/ControlMenu.tsx","components/Disconnected.tsx","LoadPage.tsx","serviceWorker.js","reportWebVitals.js","index.js"],"names":["pjServer","process","ioCommands","commands","menuCommands","THRU","DEL","CLEAR","NEXT","IF_PROG","BACK","ENTER","STORE_GROUP","ControlCommands","PROJECTOR_MAKES","ConfigHeaders","keys","defaultConfig","Patch","Location","LastUpdated","Date","Polling","Polling_Interval","Groups","0","name","group","ButtonStyle","width","height","marginBottom","Numberpad","props","handlePad","getButtons","C","map","key","w","Button","variant","style","margin","padding","touchAction","size","onClick","e","Paper","elevation","className","buttons","groups","i","length","g","slice","push","ButtonGroup","buttonGroups","BlendDialog","open","handleClose","handleCommand","buttonStyle","buttonGroupStyle","justifyContent","textAlign","Dialog","onClose","aria-labelledby","DialogTitle","id","EDGE_BLENDING_ON","EDGE_BLENDING_OFF","EDGE_BLENDING_MARKERS_ON","EDGE_BLENDING_MARKERS_OFF","EDGE_BLENDING_UPPER_ON","EDGE_BLENDING_UPPER_OFF","EDGE_BLENDING_RIGHT_ON","EDGE_BLENDING_RIGHT_OFF","EDGE_BLENDING_LOWER_ON","EDGE_BLENDING_LOWER_OFF","EDGE_BLENDING_LEFT_ON","EDGE_BLENDING_LEFT_OFF","dropdownStyle","makeStyles","theme","formControl","spacing","minWidth","selectEmpty","marginTop","useStyles","Testpattern","classes","FormControl","InputLabel","Select","labelId","value","onChange","target","MenuItem","TEST_PATTERN_OFF","TEST_PATTERN_WHITE","TEST_PATTERN_BLACK","TEST_PATTERN_FOCUS_RED","TEST_PATTERN_FOCUS_WHITE","validMenuKeys","MenuDialog","document","onkeydown","includes","NUMBER_KEY_0","NUMBER_KEY_1","NUMBER_KEY_2","NUMBER_KEY_3","NUMBER_KEY_4","NUMBER_KEY_5","NUMBER_KEY_7","NUMBER_KEY_8","NUMBER_KEY_9","MENU_ENTER_KEY","MENU_DEFAULT_KEY","MENU_UP_KEY","MENU_DOWN_KEY","MENU_LEFT_KEY","MENU_RIGHT_KEY","MENU","OSD_ON","OSD_OFF","FREEZE_ON","FREEZE_OFF","Alert","command","header","message","handleClick","approval","aria-describedby","DialogContent","DialogContentText","DialogActions","color","autoFocus","LensCal","useState","openHomeAlert","setOpenHomeAlert","openCalAlert","setOpenCalAlert","LENS_POSTION_HOME","active","shift","setShift","focus","setFocus","zoom","setZoom","heldActive","setHeldActive","alertOpen","setAlertOpen","undefined","setCommand","getButton","cmd","text","processCommand","Typography","Accordion","expanded","AccordionSummary","expandIcon","aria-controls","AccordionDetails","Container","marginLeft","paddingLeft","LENS_SHIFT_H_FN","LENS_SHIFT_H_NN","LENS_SHIFT_H_SN","LENS_SHIFT_H_SP","LENS_SHIFT_H_NP","LENS_SHIFT_H_FP","LENS_SHIFT_V_FN","LENS_SHIFT_V_NN","LENS_SHIFT_V_SN","LENS_SHIFT_V_SP","LENS_SHIFT_V_NP","LENS_SHIFT_V_FP","LENS_FOCUS_FN","LENS_FOCUS_NN","LENS_FOCUS_SN","LENS_FOCUS_SP","LENS_FOCUS_NP","LENS_FOCUS_FP","LENS_ZOOM_FN","LENS_ZOOM_NN","LENS_ZOOM_SN","LENS_ZOOM_SP","LENS_ZOOM_NP","LENS_ZOOM_FP","LensAlert","handleAccept","accept","hold","setHold","c","list","forEach","a","getPJList","FormControlLabel","control","Checkbox","checked","label","Power","openPowerOnAlert","setOpenPowerOnAlert","openPowerOffAlert","setOpenPowerOffAlert","POWER_OFF","POWER_ON","Shutter","SHUTTER_CLOSED","SHUTTER_OPEN","BackColor","BACK_COLOR_BLUE","BACK_COLOR_BLACK","BACK_COLOR_DEFAULT_LOGO","BACK_COLOR_USER_LOGO","InputSelection","INPUT_SELECT_HDMI1","INPUT_SELECT_HDMI2","INPUT_SELECT_COMPUTER1","INPUT_SELECT_COMPUTER2","INPUT_SELECT_DIGITALLINK","INPUT_SELECT_DVI","INPUT_SELECT_SDI1","INPUT_SELECT_VIDEO","INPUT_SELECT_YC","OSDPostion","OSD_POSITION_UPPER_LEFT","OSD_POSITION_CENTER_LEFT","OSD_POSITION_LOWER_LEFT","OSD_POSITION_TOP_CENTER","OSD_POSITION_CENTER","OSD_POSITION_LOWER_CENTER","OSD_POSITION_UPPER_RIGHT","OSD_POSITION_LOWER_RIGHT","OSDRotation","OSD_ROTATION_OFF","OSD_ROTATION_CLOCKWISE","OSD_ROTATION_COUNTERCLOCKWISE","PJPositon","PROJECTOR_INSTALL_METHOD_FRONT_AUTO","PROJECTOR_INSTALL_METHOD_FRONT_CEILING","PROJECTOR_INSTALL_METHOD_FRONT_DESK","PROJECTOR_INSTALL_METHOD_REAR_AUTO","PROJECTOR_INSTALL_METHOD_REAR_CEILING","PROJECTOR_INSTALL_METHOD_REAR_DESK","QuickSlider","min","max","setValue","Box","gutterBottom","Slider","event","newValue","console","log","ProjectorSetup","pj","setName","direct_command","ID","setID","useEffect","popUp","PROJECTOR_NAME","PROJECTOR_ID","DIRECT_COMMAND","LIGHT_OUTPUT","TextField","CommandPad","pjs","lockCommandLine","menuOpen","setMenuOpen","blendOpen","setBlendOpen","lensOpen","setLensOpen","pjSetupOpen","setPJSetupOpen","_world","_groups","parse","cmdArray","parsed","parseThru","GROUP","parseGroup","parseNegative","parsePostive","parseNumber","Number","parseInt","isFinite","error","sub","concat","n","pop","Math","negative","x","table","PJCard","pj_tupple","handlePJCard","cardStyle","background","border","selected","ProgrammerTable","handlePJSelect","TableRow","TableCell","component","scope","shutter","regions","edgeBlendingUpper","edgeBlendingRight","edgeBlendingLower","edgeBlendingLeft","borderStyle","borderColor","edgeBlending","fontSize","edgeBlendingMarker","blendRegion","testPattren","lampStatus","hdmiResolution","hdmiSignalLevel","hdmiVerticalFrequency","osdPostion","root","flexGrow","paper","maxHeight","Programmer","world","prefs","handleTableSelect","getPJs","useMemo","groupEnd","sort","pjList","s","online","power","lastSeen","backColor","inputSignalName_Main","showOnlySelected","useMediaQuery","programmerTableView","TableContainer","Table","TableHead","TableBody","Grid","container","item","xs","goFetch","query","fetchString","fetch","mode","res","ok","json","PatchAddDialog","addPJs","currentPatch","PANASONIC","make","setMake","err","Amount","setAmount","Object","values","getMaxID","StartID","BaseIP","setBaseIP","UserName","setUserName","Pass","setPass","Port","setPort","checkOverlap","startID","amount","t","fullWidth","type","isNaN","helperText","split","handleBaseIP","disabled","auth","fab","position","bottom","right","columns","field","headerName","hide","patch","setPatch","addWindowOpen","setAddWindowOpen","setEditWindowOpen","setSelected","deleteWindowOpen","setDeleteWindowOpen","newPJs","rows","checkboxSelection","selectionModel","onSelectionModelChange","aria-label","newPatch","assign","entries","newSelect","getSelectedString","baseIP","port","ip_address","filter","v4","updateLog","version","date","notes","createStyles","bullet","display","transform","menuButton","marginRight","title","pos","About","bull","AppBar","update","Card","CardContent","note","appBar","flex","Transition","forwardRef","ref","Slide","direction","ConfigDialog","config","socket","polling","setPolling","pollingInterval","setPollingInterval","aboutOpen","setAboutOpen","fullScreen","TransitionComponent","onSubmit","preventDefault","form","querySelector","data","FormData","pair","v","toString","POLLING","POLLING_INTERVAL","setConfig","emit","EMITTING_PATCH","SocketPatcher","Toolbar","paddingBottom","IconButton","edge","LOCATION","defaultValue","labelPlacement","Switch","p","handleInput","startText","setText","Worlds","setWorld","groupEditCMD","getWorlds","WorldBox","handleWorldSelection","handleGroupSelection","handleGroupConfig","worldOpen","setWorldOpen","groupOpen","setGroupOpen","configOpen","setConfigOpen","divRef","useRef","handleConfigSelect","generalMessage","DELETE_GROUP","LABEL_GROUP","getHelperText","Fade","in","float","current","Menu","keepMounted","anchorEl","removeFocus","activeElement","HTMLElement","blur","App","Props","openConfig","handleCloseConfig","setCMD","vartiable","setVartiable","setActive","activeIndex","setActiveIndex","clearPresses","setClearPressed","groupNameOpen","setGroupNameOpen","groupName","setGroupName","setPJs","pollingProgress","setPollingProgress","setGroupEditCMD","selectedGroup","setSelectedGroup","setLastPJClicked","lockedCommandLine","setLockedCommandLine","clearOnNextClick","setClearOnNextClick","setIgnoreOnNextclick","blendMarker","blend","hdmiInput","signalName","rigStatus","setStatus","on","EMITTING_PJS","EMITTING_STATUS","status","REQUEST_UPDATE","REQUESTING_UPDATE","REQUEST_CONFIG","EMITTING_CONFIG","groupCollapsed","EMITTING_POLLING_PROGRESS","progress","SocketListener","EMITTING_CMD","pjIDs","clearProgrammerAfterCMD","onkeyup","clear0","clear1","clear2","handleCMD","currentWorld","getGroup","indexOf","handleNext","handleBack","trippleTapClearOnOne","cmdLine","cmds","trim","processed","newSelected","handleSelected","processCMD","finalCMD","groupID","handleGroupAndWorld","UPDATE_GROUP","handleGroupUpdate","rel","href","LinearProgress","lock","InputLabelProps","shrink","new_selected","new_active","cookieName","defaultPrefs","darkMode","setCookie","Cookies","set","getCookie","get","getPrefrences","JSON","d","ControlMenu","handleSettings","handleOpenConfig","setOpen","handleChange","CLEAR_SELECTED_ON_CMD","IF_SELECTED","DARK_MODE","PROGRAMMER_TABLE_VIEW","TRIPPLE_TAP_CLEAR_ON_ONE","button","aria-haspopup","Disconnected","CircularProgress","Settings","React","createContext","Pref","socketIOClinet","backdrop","zIndex","drawer","LoadPage","prefres","setPrefs","setOpenConfig","socketConnected","setSocketConnected","createMuiTheme","palette","ThemeProvider","Provider","CssBaseline","Backdrop","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","onUpdate","onSuccess","catch","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById","URL","origin","addEventListener","headers","response","contentType","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.ae24aeb5.chunk.js","sourcesContent":["import { CSSProperties } from \"react\";\n\n\nexport let pjServer = 'http://localhost:3000/'\n//export let pjServer = 'http://192.168.10.249:3000/'\nif(process.env.NODE_ENV ==='production'){\n    pjServer = process.env.REACT_APP_SERVER? process.env.REACT_APP_SERVER : 'localhost:3000';\n}\n\n\nexport const fetchSettings: RequestInit = {\n    method:'get',\n    headers:{\n        \n    }\n   \n}\n\n\nexport type PJs = Record<number,PJ_OBJ>\n\nexport enum ioCommands {\n    REQUEST_UPDATE = 'REQUEST_UPDATE',\n    REQUESTING_UPDATE = 'REQUESTING_UPDATE',\n    EMITTING_PJS = 'EMITTING_PJS',\n    EMITTING_STATUS = 'EMITTING_STATUS',\n    REQUEST_CONFIG = 'REQUEST_CONFIG',\n    EMITTING_CONFIG = 'EMITTING_CONFIG',\n    REQUESTING_CONFIG = 'REQUESTING_CONFIG', \n    EMITTING_PATCH = 'EMITTING_PATCH',\n    EMITTING_POLLING_PROGRESS = 'EMITTING_POLLING_PROGRESS',\n    EMITTING_CMD = 'EMITTING_CMD',\n    STORE_GROUP = 'STORE_GROUP',\n    UPDATE_GROUP = 'UPDATE_GROUP',\n    LABEL_GROUP= 'LABEL_GROUP',\n    DELETE_GROUP='DELETE_GROUP'\n    \n}\nexport type PJ_OBJ = {\n    id: number,\n    power: string,\n    name: string,\n    shutter: string,\n    online: string,\n    lastSeen: number,\n    lampStatus: string,\n    edgeBlending: string,\n    edgeBlendingMarker: string,\n    edgeBlendingUpper: string,\n    edgeBlendingLower: string,\n    edgeBlendingRight: string,\n    edgeBlendingLeft: string,\n    testPattren: string,\n    backColor: string,\n    hdmiSignalLevel: string,\n    hdmiResolution: string,\n    hdmiVerticalFrequency: string,\n    osdPostion: string,\n    inputSignalName_Main: string,\n    error: string\n\n}\nexport interface RIG_STATUS{\n    online: boolean,\n    power: boolean,\n    shutter: boolean,\n    blend: boolean,\n    blendMarker: boolean,\n    testPattren: boolean,\n    lampStatus: boolean,\n    hdmiInput:boolean,\n    signalName: boolean\n}\n\nexport enum commands{\n    THRU = 'THRU',\n    DEL = 'DEL',\n    CLEAR = 'CLEAR',\n    ENTER = 'ENTER',\n    NEXT = 'NEXT',\n    BACK = 'BACK',\n    IF_PROG = 'IF_PROG',\n    GROUP = 'GROUP'\n\n}\n\nexport enum menuCommands{\n    CLEAR_SELECTED_ON_CMD = 'CLEAR_SELECTED_ON_CMD',\n    IF_SELECTED = 'IF_SELECTED',\n    DARK_MODE = 'DARK_MODE',\n    PROGRAMMER_TABLE_VIEW ='PROGRAMMER_TABLE_VIEW',\n    TRIPPLE_TAP_CLEAR_ON_ONE ='TRIPPLE_TAP_CLEAR_ON_ONE'\n}\nexport const _keys= ['7','8','9','4','5','6','1','2','3','-','0','+',commands.THRU,commands.DEL, commands.CLEAR, commands.NEXT, commands.IF_PROG, commands.BACK, commands.ENTER, ioCommands.STORE_GROUP]\n\nexport const keys= ['7','8','9','4','5','6','1','2','3','-','0','+',commands.THRU,commands.DEL, commands.CLEAR, commands.BACK, commands.IF_PROG, commands.NEXT, commands.ENTER]\n\nexport enum ControlCommands {\n    POWER_OFF = 'POWER_OFF',\n    POWER_ON = 'POWER_ON',\n    SHUTTER_CLOSED = 'SHUTTER_CLOSED',\n    SHUTTER_OPEN = 'SHUTTER_OPEN',\n    EDGE_BLENDING_OFF = 'EDGE_BLENDING_OFF',\n    EDGE_BLENDING_ON = 'EDGE_BLENDING_ON',\n    EDGE_BLENDING_MARKERS_ON = 'EDGE_BLENDING_MARKERS_ON',\n    EDGE_BLENDING_MARKERS_OFF = 'EDGE_BLENDING_MARKERS_OFF',\n    TEST_PATTERN_OFF = 'TEST_PATTERN_OFF',\n    TEST_PATTERN_WHITE = 'TEST_PATTERN_WHITE',\n    TEST_PATTERN_BLACK = 'TEST_PATTERN_BLACK',\n    TEST_PATTERN_FOCUS_RED = 'TEST_PATTERN_FOCUS_RED',\n    TEST_PATTERN_FOCUS_WHITE= 'TEST_PATTERN_FOCUS_WHITE',\n    MENU = 'MENU',\n    MENU_DOWN_KEY = 'MENU_DOWN_KEY',\n    MENU_UP_KEY = 'MENU_UP_KEY',\n    MENU_RIGHT_KEY = 'MENU_RIGHT_KEY',\n    MENU_LEFT_KEY = 'MENU_LEFT_KEY',\n    MENU_DEFAULT_KEY = 'MENU_DEFAULT_KEY',\n    MENU_ENTER_KEY = 'MENU_ENTER_KEY',\n    EDGE_BLENDING_UPPER_ON = 'EDGE_BLENDING_UPPER_ON',\n    EDGE_BLENDING_UPPER_OFF = 'EDGE_BLENDING_UPPER_OFF',\n    EDGE_BLENDING_LOWER_OFF = 'EDGE_BLENDING_LOWER_OFF',\n    EDGE_BLENDING_LOWER_ON = 'EDGE_BLENDING_LOWER_ON',\n    EDGE_BLENDING_RIGHT_OFF = 'EDGE_BLENDING_RIGHT_OFF',\n    EDGE_BLENDING_RIGHT_ON = 'EDGE_BLENDING_RIGHT_ON',\n    EDGE_BLENDING_LEFT_OFF = 'EDGE_BLENDING_LEFT_OFF',\n    EDGE_BLENDING_LEFT_ON = 'EDGE_BLENDING_LEFT_ON',\n    OSD_POSITION_UPPER_LEFT = 'OSD_POSITION_UPPER_LEFT',\n    OSD_POSITION_CENTER_LEFT = 'OSD_POSITION_CENTER_LEFT',\n    OSD_POSITION_LOWER_LEFT = 'OSD_POSITION_LOWER_LEFT',\n    OSD_POSITION_TOP_CENTER = 'OSD_POSITION_TOP_CENTER',\n    OSD_POSITION_CENTER = 'OSD_POSITION_CENTER',\n    OSD_POSITION_LOWER_CENTER = 'OSD_POSITION_LOWER_CENTER',\n    OSD_POSITION_UPPER_RIGHT = 'OSD_POSITION_UPPER_RIGHT',\n    OSD_POSITION_CENTER_RIGHT = 'OSD_POSITION_CENTER_RIGHT',\n    OSD_POSITION_LOWER_RIGHT = 'OSD_POSITION_LOWER_RIGHT',\n    PROJECTOR_NAME = 'PROJECTOR_NAME',\n    NUMBER_KEY_0 = 'NUMBER_KEY_0',\n    NUMBER_KEY_1 = 'NUMBER_KEY_1',\n    NUMBER_KEY_2 = 'NUMBER_KEY_2',\n    NUMBER_KEY_3 = 'NUMBER_KEY_3',\n    NUMBER_KEY_4 = 'NUMBER_KEY_4',\n    NUMBER_KEY_5 = 'NUMBER_KEY_5',\n    NUMBER_KEY_6 = 'NUMBER_KEY_6',\n    NUMBER_KEY_7 = 'NUMBER_KEY_7',\n    NUMBER_KEY_8 = 'NUMBER_KEY_8',\n    NUMBER_KEY_9 = 'NUMBER_KEY_9',\n    LENS_POSTION_HOME = 'LENS_POSTION_HOME',\n    LENS_CALIBRATION = 'LENS_CALIBRATION',\n    LENS_SHIFT_H_SP = 'LENS_SHIFT_H_SP',\n    LENS_SHIFT_H_SN = 'LENS_SHIFT_H_SN',\n    LENS_SHIFT_H_NP = 'LENS_SHIFT_H_NP',\n    LENS_SHIFT_H_NN = 'LENS_SHIFT_H_NN',\n    LENS_SHIFT_H_FP = 'LENS_SHIFT_H_FP',\n    LENS_SHIFT_H_FN = 'LENS_SHIFT_H_FN',\n    LENS_SHIFT_V_SP = 'LENS_SHIFT_V_SP',\n    LENS_SHIFT_V_SN = 'LENS_SHIFT_V_SN',\n    LENS_SHIFT_V_NP = 'LENS_SHIFT_V_NP',\n    LENS_SHIFT_V_NN = 'LENS_SHIFT_V_NN',\n    LENS_SHIFT_V_FP = 'LENS_SHIFT_V_FP',\n    LENS_SHIFT_V_FN = 'LENS_SHIFT_V_FN',\n    LENS_FOCUS_SP = 'LENS_FOCUS_SP',\n    LENS_FOCUS_SN = 'LENS_FOCUS_SN',\n    LENS_FOCUS_NP = 'LENS_FOCUS_NP',\n    LENS_FOCUS_NN = 'LENS_FOCUS_NN',\n    LENS_FOCUS_FP = 'LENS_FOCUS_FP',\n    LENS_FOCUS_FN = 'LENS_FOCUS_FN',\n    LENS_ZOOM_SP = 'LENS_ZOOM_SP',\n    LENS_ZOOM_SN = 'LENS_ZOOM_SN',\n    LENS_ZOOM_NP = 'LENS_ZOOM_NP',\n    LENS_ZOOM_NN = 'LENS_ZOOM_NN',\n    LENS_ZOOM_FP = 'LENS_ZOOM_FP',\n    LENS_ZOOM_FN = 'LENS_ZOOM_FN',\n    BACK_COLOR_BLUE = 'BACK_COLOR_BLUE',\n    BACK_COLOR_BLACK = 'BACK_COLOR_BLACK',\n    BACK_COLOR_USER_LOGO = 'BACK_COLOR_USER_LOGO',\n    BACK_COLOR_DEFAULT_LOGO = 'BACK_COLOR_DEFAULT_LOGO',\n    PROJECTOR_ID = 'PROJECTOR_ID',\n    OSD_ON = 'OSD_ON',\n    OSD_OFF = 'OSD_OFF',\n    FREEZE_OFF = 'FREEZE_OFF',\n    FREEZE_ON = 'FREEZE_ON',\n    CEILING_MOUNT_ON ='CEILING_MOUNT_ON',\n    CEILING_MOUNT_OFF='CEILING_MOUNT_OFF',\n    STANDBY_MODE_NETWORK='STANDBY_MODE_NETWORK',\n    AUTO_SHUTDOWN_OFF='AUTO_SHUTDOWN_OFF',\n    POWER_HOG_ON='POWER_HOG_ON',\n    INPUT_SELECT_COMPUTER1 = 'INPUT_SELECT_COMPUTER1',\n    INPUT_SELECT_COMPUTER2 = 'INPUT_SELECT_COMPUTER2',\n    INPUT_SELECT_VIDEO = 'INPUT_SELECT_VIDEO',\n    INPUT_SELECT_YC = 'INPUT_SELECT_YC',\n    INPUT_SELECT_DVI = 'INPUT_SELECT_DVI',\n    INPUT_SELECT_HDMI1  = 'INPUT_SELECT_HDMI1',\n    INPUT_SELECT_HDMI2 = 'INPUT_SELECT_HDMI2',\n    INPUT_SELECT_SDI1 = 'INPUT_SELECT_SDI1',\n    INPUT_SELECT_DIGITALLINK = 'INPUT_SELECT_DIGITALLINK',\n    PROJECTOR_INSTALL_METHOD_FRONT_DESK = 'PROJECTOR_INSTALL_METHOD_FRONT_DESK',\n    PROJECTOR_INSTALL_METHOD_REAR_DESK ='PROJECTOR_INSTALL_METHOD_REAR_DESK',\n    PROJECTOR_INSTALL_METHOD_FRONT_CEILING = 'PROJECTOR_INSTALL_METHOD_FRONT_CEILING',\n    PROJECTOR_INSTALL_METHOD_REAR_CEILING='PROJECTOR_INSTALL_METHOD_REAR_CEILING',\n    PROJECTOR_INSTALL_METHOD_FRONT_AUTO = 'PROJECTOR_INSTALL_METHOD_FRONT_AUTO',\n    PROJECTOR_INSTALL_METHOD_REAR_AUTO ='PROJECTOR_INSTALL_METHOD_REAR_AUTO',\n    OSD_ROTATION_OFF = 'OSD_ROTATION_OFF',\n    OSD_ROTATION_CLOCKWISE = 'OSD_ROTATION_CLOCKWISE',\n    OSD_ROTATION_COUNTERCLOCKWISE= 'OSD_ROTATION_COUNTERCLOCKWISE',\n    LIGHT_OUTPUT = 'LIGHT_OUTPUT',\n    DIRECT_COMMAND = 'DIRECT_COMMAND'\n\n\n}\n\n//export type HandleCommand = (command: ControlKeys, text?: string) => void\nexport type ControlKeys = keyof typeof ControlCommands\n\nexport enum PROJECTOR_MAKES {\n    PANASONIC = 'PANASONIC',\n    BARCO = 'BARCO'\n}\n\n\n\nexport type PROJECTOR_MAKE = keyof typeof PROJECTOR_MAKES\n\n\nexport enum ConfigHeaders{\n    LOCATION = 'LOCATION',\n    LAST_UPDATED = 'LAST_UPDATED',\n    POLLING = 'POLLING',\n    POLLING_INTERVAL = 'POLLING_INTERVAL',\n    PATCH = 'PATCH'\n    \n}\ninterface Projector{\n    ip_address: string,\n    port: number,\n    auth: string,\n    make: keyof typeof PROJECTOR_MAKES,\n    id: number\n}\nexport type Patch = Record<string,Projector>\nexport type Group = {name: string, group: number[]}\nexport type Groups = Record<number, Group>\nexport interface Config {\n    Patch: Patch,\n    Location: string,\n    LastUpdated: string,\n    Polling: boolean,\n    Polling_Interval: number,\n    Groups: Groups\n}\n\n\nexport type ConfigKeys = keyof typeof ConfigHeaders\nexport const defaultConfig: Config = {\n    Patch: {},\n    Location: '',\n    LastUpdated: Date(),\n    Polling: false,\n    Polling_Interval: 60000,\n    Groups: {0:{name:'All',group:[]}}\n}\n\nexport type HandleCommand = (cmd: ControlKeys, text?: string )=> void\n\nexport const ButtonStyle: CSSProperties={\n\n    width: '150px',\n    height: '50px',\n    marginBottom: 1\n\n}","import {Button, ButtonGroup, Paper} from '@material-ui/core'\nimport './numberpad.css'\n\nimport * as C from '../util/constants'\ninterface numberpad_props{\n    handlePad: (e: string)=>void\n}\nexport default function Numberpad(props:numberpad_props){\n    const {handlePad} =props\n    \n    const getButtons=()=>{\n     \n        return C.keys.map(key=>{\n            let w = key === C.ioCommands.STORE_GROUP? '125px' : '75px'\n            return <Button variant=\"contained\" style={{margin: 2, padding: '10px', width: w, touchAction: 'manuplation'}} size={'large'} key={key} onClick={(e)=>handlePad(key)} >{key}</Button>     \n        })\n    }\n\n    const buttonGroups=()=>{\n        let buttons = getButtons()\n        let groups =[]\n        let chunk = 3\n        for(let i=0; i<=buttons.length-chunk; i+=chunk){\n           \n            let g = buttons.slice(i,chunk+i)\n           \n            groups.push(\n                <ButtonGroup key={'pad_group'+i}>\n                   {g}\n                </ButtonGroup>\n             \n            )\n        }\n        return groups\n    }\n    return (\n        <Paper style={{touchAction: 'manuplation'}}elevation={1} className='pad'>\n            \n            {buttonGroups()}\n            {getButtons()[C.keys.length-1]}\n            \n        </Paper>\n\n    )\n}","import { Dialog, DialogTitle, Button, ButtonGroup } from \"@material-ui/core\";\nimport { CSSProperties } from \"react\";\nimport { ControlKeys, ControlCommands } from '../util/constants'\ninterface BlendDialog_Props {\n    open: boolean,\n    handleClose: () => void,\n    handleCommand: (e: ControlKeys) => void\n}\n\nexport default function BlendDialog(props: BlendDialog_Props) {\n    const { open, handleClose, handleCommand } = props\n    const buttonStyle: CSSProperties = {\n        padding: '20px',\n        width: '140px'\n\n       \n    }\n    const buttonGroupStyle: CSSProperties = {\n        justifyContent: 'center',\n        textAlign: 'center',\n        margin: 'auto'\n       \n        \n    }\n    return (\n        <Dialog key='blend_dialog'  onClose={handleClose} aria-labelledby=\"simple-dialog-title\" open={open}>\n            <DialogTitle style={buttonGroupStyle} key='menu_dialog_title' id=\"simple-dialog-title\">Blending</DialogTitle>\n            <div key='blend_div' style={{width:300, justifyContent: 'center', textAlign: 'center'}}>\n            <ButtonGroup style={buttonGroupStyle} key='blend_main_keys' variant=\"outlined\">\n                <Button style={buttonStyle} key='blend_on' onClick={(e) => handleCommand(ControlCommands.EDGE_BLENDING_ON)} >Edge Blend On</Button>\n                <Button style={buttonStyle} key='blend_off' onClick={(e) => handleCommand(ControlCommands.EDGE_BLENDING_OFF)} >Edge Blend Off</Button>\n            </ButtonGroup>\n\n            <br></br>\n\n            <ButtonGroup style={buttonGroupStyle} key='makers_main_keys' variant=\"outlined\">\n                <Button style={buttonStyle} key='markers_on' onClick={(e) => handleCommand(ControlCommands.EDGE_BLENDING_MARKERS_ON)} >Markers On</Button>\n                <Button style={buttonStyle} key='markers_off' onClick={(e) => handleCommand(ControlCommands.EDGE_BLENDING_MARKERS_OFF)} >Markers Off</Button>\n            </ButtonGroup>\n\n            <br></br>\n\n            <ButtonGroup style={buttonGroupStyle} key='upper_keys' variant=\"outlined\">\n                <Button style={buttonStyle} key='upper_on' onClick={(e) => handleCommand(ControlCommands.EDGE_BLENDING_UPPER_ON)} >Upper On</Button>\n                <Button style={buttonStyle} key='upper_off' onClick={(e) => handleCommand(ControlCommands.EDGE_BLENDING_UPPER_OFF)} >Upper Off</Button>\n            </ButtonGroup>\n\n            <ButtonGroup style={buttonGroupStyle} key='right_keys' variant=\"outlined\">\n                <Button style={buttonStyle} key='right_on' onClick={(e) => handleCommand(ControlCommands.EDGE_BLENDING_RIGHT_ON)} >Right On</Button>\n                <Button style={buttonStyle} key='right_off' onClick={(e) => handleCommand(ControlCommands.EDGE_BLENDING_RIGHT_OFF)} >Right Off</Button>\n            </ButtonGroup>\n\n            <ButtonGroup style={buttonGroupStyle} key='lower_keys' variant=\"outlined\">\n                <Button style={buttonStyle} key='lower_on' onClick={(e) => handleCommand(ControlCommands.EDGE_BLENDING_LOWER_ON)} >Lower On</Button>\n                <Button style={buttonStyle} key='lower_off' onClick={(e) => handleCommand(ControlCommands.EDGE_BLENDING_LOWER_OFF)} >Lower Off</Button>\n            </ButtonGroup>\n\n            <ButtonGroup style={buttonGroupStyle} key='left_keys' variant=\"outlined\">\n                <Button style={buttonStyle} key='left_on' onClick={(e) => handleCommand(ControlCommands.EDGE_BLENDING_LEFT_ON)} >Left On</Button>\n                <Button style={buttonStyle} key='left_off' onClick={(e) => handleCommand(ControlCommands.EDGE_BLENDING_LEFT_OFF)} >Left Off</Button>\n            </ButtonGroup>\n            </div>\n        </Dialog>\n    );\n}","import { makeStyles } from \"@material-ui/core\";\n\nexport const dropdownStyle= makeStyles((theme) => ({\n    formControl: {\n      margin: theme.spacing(1),\n      minWidth: 120,\n    },\n    selectEmpty: {\n      marginTop: theme.spacing(2),\n    },\n  }));","import { ControlKeys, ControlCommands } from '../../util/constants'\nimport { FormControl, InputLabel, Select, MenuItem, } from '@material-ui/core'\nimport { dropdownStyle } from './DropdownStyle'\n\ninterface TestPatterProps {\n    handleCommand: (e: ControlKeys) => void\n}\n\n\nconst useStyles = dropdownStyle\nexport default function Testpattern(props: TestPatterProps) {\n    const { handleCommand } = props\n    const classes = useStyles()\n\n    return (\n        <>\n            <FormControl className={classes.formControl}>\n                <InputLabel id='test_pattren'>Test Pattern</InputLabel>\n                <Select labelId='test_pattren' id='test_pattren_select'\n                    value={''} onChange={((e) => handleCommand(e.target.value as ControlKeys))}>\n                    <MenuItem value={ControlCommands.TEST_PATTERN_OFF}>Off</MenuItem>\n                    <MenuItem value={ControlCommands.TEST_PATTERN_WHITE}>White</MenuItem>\n                    <MenuItem value={ControlCommands.TEST_PATTERN_BLACK}>Black</MenuItem>\n                    <MenuItem value={ControlCommands.TEST_PATTERN_FOCUS_RED}>Focus Red</MenuItem>\n                    <MenuItem value={ControlCommands.TEST_PATTERN_FOCUS_WHITE}>Focus White</MenuItem>\n                </Select>\n\n            </FormControl>\n        </>)\n}","import { Dialog, DialogTitle, Button, ButtonGroup } from \"@material-ui/core\";\nimport { CSSProperties } from \"react\";\nimport { ControlCommands, HandleCommand } from '../util/constants'\n\nimport Testpattern from \"./CommandInterfaces/Testpattern\";\n\nconst validMenuKeys = ['0', '1', '2', '3', '4', '5', '6', '7', '8', '9','m', 'Enter', 'Backspace', 'ArrowUp', 'ArrowRight', 'ArrowLeft', 'ArrowDown'];\ninterface MenuDialog_Props {\n    open: boolean,\n    handleClose: () => void,\n    handleCommand: HandleCommand\n}\n\nexport default function MenuDialog(props: MenuDialog_Props) {\n    const { open, handleClose, handleCommand } = props\n\n    const buttonStyle: CSSProperties = {\n        padding: '20px',\n        width: '100px',\n\n    }\n    const buttonGroupStyle: CSSProperties = {\n        justifyContent: 'center',\n        textAlign: 'center'\n\n    }\n    //@ts-ignore\n    document.onkeydown = ((e) => {\n        //console.log('Key Pressed',e.key)\n        if (!open) return\n\n        let key = e.key\n        //console.log('Menu Got',key)\n        if (!validMenuKeys.includes(key)) return\n        \n        switch (key) {\n            case '0':\n                handleCommand(ControlCommands.NUMBER_KEY_0)\n                break;\n            case '1':\n                handleCommand(ControlCommands.NUMBER_KEY_1)\n                break;\n            case '2':\n                handleCommand(ControlCommands.NUMBER_KEY_2)\n                break\n            case '3':\n                handleCommand(ControlCommands.NUMBER_KEY_3)\n                break\n            case '4':\n                handleCommand(ControlCommands.NUMBER_KEY_4)\n                break\n            case '5':\n                handleCommand(ControlCommands.NUMBER_KEY_5)\n                break\n            case '6':\n                handleCommand(ControlCommands.NUMBER_KEY_5)\n                break\n            case '7':\n                handleCommand(ControlCommands.NUMBER_KEY_7)\n                break\n            case '8':\n                handleCommand(ControlCommands.NUMBER_KEY_8)\n                break\n            case '9':\n                handleCommand(ControlCommands.NUMBER_KEY_9)\n                break\n            case 'Enter':\n                handleCommand(ControlCommands.MENU_ENTER_KEY)\n                break\n            case 'Backspace':\n                handleCommand(ControlCommands.MENU_DEFAULT_KEY)\n                break\n            case 'ArrowUp':\n                handleCommand(ControlCommands.MENU_UP_KEY)\n                break\n            case 'ArrowDown':\n                handleCommand(ControlCommands.MENU_DOWN_KEY)\n                break\n            case 'ArrowLeft':\n                handleCommand(ControlCommands.MENU_LEFT_KEY)\n                break\n            case 'ArrowRight':\n                handleCommand(ControlCommands.MENU_RIGHT_KEY)\n                break\n            case 'm':\n                handleCommand(ControlCommands.MENU)\n                break\n\n        }\n\n\n\n\n\n    })\n\n    return (\n        <Dialog key='menu_dialog' onClose={handleClose} aria-labelledby=\"simple-dialog-title\" open={open}>\n            <DialogTitle style={buttonGroupStyle} key='menu_dialog_title' id=\"simple-dialog-title\">Menu Commands</DialogTitle>\n            <ButtonGroup style={buttonGroupStyle} key='menu_main_keys' variant=\"outlined\">\n                <Button style={buttonStyle} key='menu' onClick={(e) => handleCommand(ControlCommands.MENU)} >Menu</Button>\n                <Button style={buttonStyle} key='enter' onClick={(e) => handleCommand(ControlCommands.MENU_DEFAULT_KEY)} >Default</Button>\n            </ButtonGroup>\n\n            <br></br>\n\n            <ButtonGroup style={buttonGroupStyle} key='menu_row1_keys' variant=\"outlined\">\n                <Button style={buttonStyle} key='up' onClick={(e) => handleCommand(ControlCommands.MENU_UP_KEY)} >Up</Button>\n            </ButtonGroup>\n\n            <ButtonGroup style={buttonGroupStyle} key='menu_row2_keys' variant=\"outlined\">\n                <Button style={buttonStyle} key='left' onClick={(e) => handleCommand(ControlCommands.MENU_LEFT_KEY)} >Left</Button>\n                <Button style={buttonStyle} key='enter' onClick={(e) => handleCommand(ControlCommands.MENU_ENTER_KEY)} >Enter</Button>\n                <Button style={buttonStyle} key='right' onClick={(e) => handleCommand(ControlCommands.MENU_RIGHT_KEY)} >Right</Button>\n            </ButtonGroup>\n\n            <ButtonGroup style={buttonGroupStyle} key='menu_row3_keys' variant=\"outlined\">\n                <Button style={buttonStyle} key='down' onClick={(e) => handleCommand(ControlCommands.MENU_DOWN_KEY)} >Down</Button>\n            </ButtonGroup>\n\n            <ButtonGroup style={buttonGroupStyle} key='menu_row4_keys' variant=\"outlined\">\n                <Button style={buttonStyle} key='osd on' onClick={(e) => handleCommand(ControlCommands.OSD_ON)}>OSD ON</Button>\n                <Button style={buttonStyle} key='osd off' onClick={(e) => handleCommand(ControlCommands.OSD_OFF)}>OSD OFF</Button>\n                <Button style={buttonStyle} key='freeze on' onClick={(e) => handleCommand(ControlCommands.FREEZE_ON)}>Freeze ON</Button>\n                <Button style={buttonStyle} key='freeze off' onClick={(e) => handleCommand(ControlCommands.FREEZE_OFF)}>Freeze Off</Button>\n            </ButtonGroup>\n\n\n            <Testpattern handleCommand={handleCommand} />\n\n\n        </Dialog>\n    );\n}\n\n/*\n\n            <ButtonGroup style={buttonGroupStyle} key='ceiling_mount_keys' variant='outlined'>\n                <Button style={buttonStyle} key='ceiling_mount_on' onClick={(e)=>handleCommand(ControlCommands.CEILING_MOUNT_ON)}>Ceiling On</Button>\n                <Button style={buttonStyle} key='ceiling_mount_off' onClick={(e)=>handleCommand(ControlCommands.CEILING_MOUNT_OFF)}>Ceiling Off</Button>\n            </ButtonGroup>\n            <ButtonGroup style={buttonGroupStyle} key='ceiling_mount_keys' variant='outlined'>\n                <Button style={buttonStyle} key='power_hog' onClick={(e)=>handleCommand(ControlCommands.POWER_HOG_ON)}>Barco POWER HOG</Button>\n\n            </ButtonGroup>\n            */","import {Button, Dialog, DialogActions, DialogTitle, DialogContent, DialogContentText } from \"@material-ui/core\";\nimport { ControlKeys } from \"../util/constants\";\ninterface Alert_Props{\n    open: boolean,\n    handleCommand: (cmd: ControlKeys)=>void,\n    handleClose: ()=>void,\n    command: ControlKeys,\n    header: string,\n    message: string\n}\nexport default function Alert(props: Alert_Props){\n    const {open,handleCommand, command, handleClose, header, message} = props\n\n    const handleClick=(approval: boolean)=>{\n        if(approval){\n            handleCommand(command)\n        }\n        handleClose()\n\n    }\n    return (\n        <Dialog\n        open={open}\n        onClose={handleClose}\n        aria-labelledby=\"alert-dialog-title\"\n        aria-describedby=\"alert-dialog-description\"\n      >\n        <DialogTitle id=\"alert-dialog-title\">{header}</DialogTitle>\n        <DialogContent>\n          <DialogContentText id=\"alert-dialog-description\">\n            <span style={{width:'50'}}>{message}</span>\n          </DialogContentText>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={(e)=>handleClick(false)} color=\"primary\">\n            Cancle\n          </Button>\n          <Button onClick={(e)=>handleClick(true)} color=\"primary\" autoFocus>\n            Okay\n          </Button>\n        </DialogActions>\n      </Dialog>\n        \n    )\n}","import { ButtonGroup, Button } from \"@material-ui/core\";\nimport { useState } from \"react\";\nimport { ControlKeys, ControlCommands, ButtonStyle } from \"../../util/constants\";\nimport Alert from \"../Alert\";\n\ninterface Props{\n    handleCommand: (e: ControlKeys) => void\n}\nexport default function LensCal(props: Props){\n    const {handleCommand} = props\n    const [openHomeAlert, setOpenHomeAlert]= useState(false)\n    const [openCalAlert, setOpenCalAlert]= useState(false)\n    return(\n        <div style={{margin:'auto'}}>\n        <ButtonGroup key='shutters' color=\"primary\" variant=\"outlined\">\n        <Button  key='home'  style={ButtonStyle}  onClick={(e) => setOpenHomeAlert(true)} >Lens Home</Button>\n        <Button  key='cal' style={ButtonStyle}  onClick={(e) => setOpenCalAlert(true)} >Lens Cal</Button>\n    </ButtonGroup>\n    <Alert open={openHomeAlert} handleCommand={handleCommand} handleClose={()=>setOpenHomeAlert(false)}\n        header='Home Lense' message='Are you sure?' command={ControlCommands.LENS_POSTION_HOME}/>\n        <Alert open={openCalAlert} handleCommand={handleCommand} handleClose={()=>setOpenCalAlert(false)}\n        header='Cal Lens' message='Are you sure?' command={ControlCommands.LENS_POSTION_HOME}/>\n        </div>\n    )\n}","import { Dialog, DialogTitle, Button, ButtonGroup, Accordion, AccordionSummary, Typography, AccordionDetails, Container, DialogContent, DialogContentText, DialogActions, Checkbox, FormControlLabel } from \"@material-ui/core\";\nimport ExpandMore from \"@material-ui/icons/ExpandMore\";\nimport { CSSProperties, useState } from \"react\";\nimport { ControlKeys, ControlCommands } from '../util/constants'\nimport LensCal from \"./CommandInterfaces/LensCal\";\ninterface MenuDialog_Props {\n    open: boolean,\n    active: number[],\n    handleClose: () => void,\n    handleCommand: (e: ControlKeys) => void\n}\n\nexport default function MenuDialog(props: MenuDialog_Props) {\n    const { open, handleClose, handleCommand, active } = props\n    const [shift, setShift] =useState(false)\n    const [focus, setFocus] = useState(false)\n    const [zoom, setZoom] = useState(false)\n    const [heldActive, setHeldActive]= useState<number[]>([])\n    const [alertOpen, setAlertOpen]=useState(false)\n    const [command, setCommand]=useState<undefined | ControlKeys>(undefined)\n    const buttonStyle: CSSProperties = {\n        padding: '20px',\n        width: '50px',\n        touchAction: 'manipulation'\n       \n    }\n    const buttonGroupStyle: CSSProperties = {\n        justifyContent: 'center',\n        textAlign: 'center'\n        \n    }\n    const close=()=>{\n        setShift(false)\n        setZoom(false)\n        setFocus(false)\n        setHeldActive([])\n        handleClose()\n    }   \n    const processCommand=(cmd:ControlKeys)=>{\n        if(active.length===0) return;\n        if(active.length<2 || heldActive===active ){\n            handleCommand(cmd)\n        } else{ \n            setCommand(cmd)\n            setAlertOpen(true)\n        }\n    }\n    \n    const handleAccept=(accept: boolean, hold: boolean)=>{\n        if(!accept){setAlertOpen(false); return}\n\n        if(hold){\n            setHeldActive(active)\n        }\n        setAlertOpen(false)\n\n        if(command)\n            handleCommand(command)\n\n\n    }\n    const getButton=(cmd: ControlKeys, text: string)=>{\n        return <Button style={buttonStyle} key={text+cmd} onClick={(e)=>processCommand(cmd)}>{text}</Button>\n    }\n    return (\n        <Dialog key='lens_dialog' onClose={close} aria-labelledby=\"simple-dialog-title\" open={open}>\n            <DialogTitle style={buttonGroupStyle} key='menu_dialog_title' id=\"simple-dialog-title\">Lens Commands</DialogTitle>\n            {active.length>0? <Typography style={{margin:'auto'}}>Currently {active.length} Selected</Typography> :<></>}\n            {heldActive}\n            <LensCal handleCommand={handleCommand} />\n            <Accordion key=\"a_shift\" style={{width:'100%'}} expanded={shift} onChange={()=>setShift(!shift)}>\n                <AccordionSummary expandIcon={<ExpandMore/>} aria-controls='shift' id='shift-panel' >\n                    <Typography key='t_shift'> Shift</Typography>\n                </AccordionSummary>\n                <AccordionDetails>\n                    <Container style={{width: '70%', marginLeft: '0', paddingLeft:'0'}}>\n            <ButtonGroup style={buttonGroupStyle} key='h_shif' variant=\"outlined\">\n            {getButton(ControlCommands.LENS_SHIFT_H_FN, '<<<')}\n            {getButton(ControlCommands.LENS_SHIFT_H_NN, '<<')}\n            {getButton(ControlCommands.LENS_SHIFT_H_SN, '<')}\n                {getButton(ControlCommands.LENS_SHIFT_H_SP, '>')}\n                {getButton(ControlCommands.LENS_SHIFT_H_NP, '>>')}\n                {getButton(ControlCommands.LENS_SHIFT_H_FP, '>>>')}\n            </ButtonGroup>\n           \n            <br></br>\n          \n            <ButtonGroup style={buttonGroupStyle} key='v_shift' variant=\"outlined\">\n            {getButton(ControlCommands.LENS_SHIFT_V_FN, '^^^')}\n            {getButton(ControlCommands.LENS_SHIFT_V_NN, '^^')}\n            {getButton(ControlCommands.LENS_SHIFT_V_SN, '^')}\n                {getButton(ControlCommands.LENS_SHIFT_V_SP, 'v')}\n                {getButton(ControlCommands.LENS_SHIFT_V_NP, 'vv')}\n                {getButton(ControlCommands.LENS_SHIFT_V_FP, 'vvv')}\n            </ButtonGroup>\n            </Container>\n            </AccordionDetails>\n            </Accordion>\n            <br></br>\n            <Accordion key=\"shift\" expanded={focus} onChange={()=>setFocus(!focus)}>\n                <AccordionSummary expandIcon={<ExpandMore/>} aria-controls='focus' id='focus-panel' >\n                    <Typography> Focus</Typography>\n                </AccordionSummary>\n                <AccordionDetails>\n                <Container style={{width: '70%', marginLeft: '0', paddingLeft:'0'}}>\n            <ButtonGroup style={buttonGroupStyle} key='foucs' variant=\"outlined\">\n            {getButton(ControlCommands.LENS_FOCUS_FN, '<<<\\r')}\n            {getButton(ControlCommands.LENS_FOCUS_NN, '<<\\r')}\n            {getButton(ControlCommands.LENS_FOCUS_SN, '<\\r')}\n            {getButton(ControlCommands.LENS_FOCUS_SP, '>\\r')}\n            {getButton(ControlCommands.LENS_FOCUS_NP, '>>\\r')}\n            {getButton(ControlCommands.LENS_FOCUS_FP, '>>>\\r')}\n            </ButtonGroup>\n            </Container>\n            </AccordionDetails>\n            </Accordion>\n            <br></br>\n            <Accordion key=\"zoom\" expanded={zoom} onChange={()=>setZoom(!zoom)}>\n                <AccordionSummary expandIcon={<ExpandMore/>} aria-controls='zoom' id='zoom-panel' >\n                    <Typography> Zoom</Typography>\n                </AccordionSummary>\n                <AccordionDetails>\n                <Container style={{width: '70%', marginLeft: '0', paddingLeft:'0'}}>\n            <ButtonGroup style={buttonGroupStyle} key='zoom' variant=\"outlined\">\n            {getButton(ControlCommands.LENS_ZOOM_FN, '---')}\n            {getButton(ControlCommands.LENS_ZOOM_NN, '--')}\n            {getButton(ControlCommands.LENS_ZOOM_SN, '-')}\n            {getButton(ControlCommands.LENS_ZOOM_SP, '+')}\n            {getButton(ControlCommands.LENS_ZOOM_NP, '++')}\n            {getButton(ControlCommands.LENS_ZOOM_FP, '+++')}\n            </ButtonGroup>\n            </Container>\n            </AccordionDetails>\n            </Accordion>\n\n        <LensAlert active={active} open={alertOpen} handleAccept={handleAccept} />\n        </Dialog>\n    );\n}\ninterface lensAlert_Props{\n    active: number[],\n    open: boolean,\n    handleAccept: (accept: boolean, hold: boolean)=>void\n\n}\nfunction LensAlert(props: lensAlert_Props){\n    const {open, active, handleAccept}=props\n    const [hold, setHold]=useState(true)\n    const getPJList=()=>{\n        let list = ''\n        active.forEach(a=>{\n            list+=a+' '\n        })\n        return list\n    }\n\n    const handleClick=(c: boolean)=>{\n        handleAccept(c,hold)\n    }\n    return(\n        <Dialog\n        open={open}>\n            <DialogTitle>Multiple PJ Lens Move</DialogTitle>\n            <DialogContent>\n                <DialogContentText>Moving Many Lens ({active.length})</DialogContentText>\n                <DialogContentText>{getPJList()}</DialogContentText>\n                <DialogContentText> Are you Sure?</DialogContentText>\n                <FormControlLabel control={<Checkbox checked={hold} onClick={()=>setHold(!hold)}/>} label=\"Silence Till Change\" />\n                <DialogActions>\n                    <Button variant='outlined' onClick={()=>handleClick(true)}> Yes</Button>\n                    <Button variant='outlined' onClick={()=>handleClick(false)}> Cancel</Button>\n                </DialogActions>\n            </DialogContent>\n            </Dialog>\n    )\n\n}","import { ButtonGroup, Button } from \"@material-ui/core\";\nimport { useState } from \"react\";\nimport { ControlKeys, ControlCommands, ButtonStyle } from \"../../util/constants\";\nimport Alert from \"../Alert\";\n\ninterface PowerProps{\n    handleCommand: (e: ControlKeys) => void\n}\nexport default function Power(props: PowerProps){\n    const {handleCommand} = props\n    const [openPowerOnAlert, setOpenPowerOnAlert]= useState(false)\n    const [openPowerOffAlert, setOpenPowerOffAlert]= useState(false)\n    return(\n        <>\n        <ButtonGroup key='shutters' color=\"primary\" variant=\"outlined\">\n        <Button  key='power off'  style={ButtonStyle}  onClick={(e) => setOpenPowerOffAlert(true)} >Power Off</Button>\n        <Button  key='power on' style={ButtonStyle}  onClick={(e) => setOpenPowerOnAlert(true)} >Power On</Button>\n    </ButtonGroup>\n    <Alert open={openPowerOffAlert} handleCommand={handleCommand} handleClose={()=>setOpenPowerOffAlert(false)}\n        header='Power Off' message='Are you sure?' command={ControlCommands.POWER_OFF}/>\n        <Alert open={openPowerOnAlert} handleCommand={handleCommand} handleClose={()=>setOpenPowerOnAlert(false)}\n        header='Power On' message='Are you sure?' command={ControlCommands.POWER_ON}/>\n        </>\n    )\n}","import { ButtonGroup, Button } from \"@material-ui/core\"\nimport { ControlKeys, ControlCommands, ButtonStyle } from \"../../util/constants\"\n\ninterface ShutterProps{\n    handleCommand: (e: ControlKeys) => void\n}\nexport default function Shutter(props: ShutterProps){\n    const {handleCommand} = props\n    return (\n        <ButtonGroup key='power' color=\"primary\" variant=\"outlined\">\n        <Button  key='shutter_on' style={ButtonStyle} onClick={(e) => handleCommand(ControlCommands.SHUTTER_CLOSED)} >Shutter Closed(i)</Button>\n        <Button  key='sutter_off' style={ButtonStyle}  onClick={(e) => handleCommand(ControlCommands.SHUTTER_OPEN)} >Shutter Open(o)</Button>\n        </ButtonGroup>\n    )\n}","import {ControlKeys, ControlCommands} from '../../util/constants'\nimport {FormControl, InputLabel, Select, MenuItem} from '@material-ui/core'\nimport { dropdownStyle } from './DropdownStyle'\n\ninterface Props{\n    handleCommand: (e: ControlKeys) => void\n}\n\n\nconst useStyles = dropdownStyle\nexport default function BackColor(props: Props){\n    const {handleCommand} = props\n    const classes = useStyles()\n\n    return (\n        <>\n    <FormControl className={classes.formControl}>\n    <InputLabel id='backcolor'>Back Color</InputLabel>\n    <Select labelId='backcolor' id='backcolor'\n     value={''} onChange={((e)=> handleCommand(e.target.value as ControlKeys))}>\n         <MenuItem value={ControlCommands.BACK_COLOR_BLUE}>Blue</MenuItem>\n         <MenuItem value={ControlCommands.BACK_COLOR_BLACK}>Black</MenuItem>\n         <MenuItem value={ControlCommands.BACK_COLOR_DEFAULT_LOGO}>Default Logo</MenuItem>\n         <MenuItem value={ControlCommands.BACK_COLOR_USER_LOGO}>User Logo</MenuItem>\n     </Select>\n     \n</FormControl>\n</> )\n}","import {ControlKeys, ControlCommands} from '../../util/constants'\nimport {FormControl, InputLabel, Select, MenuItem} from '@material-ui/core'\nimport { dropdownStyle } from './DropdownStyle'\n\ninterface Props{\n    handleCommand: (e: ControlKeys) => void\n}\n\n\nconst useStyles = dropdownStyle\nexport default function InputSelection(props: Props){\n    const {handleCommand} = props\n    const classes = useStyles()\n\n    return (\n        <>\n    <FormControl key='input_fc' className={classes.formControl}>\n    <InputLabel key='input_il' id='input'>Input</InputLabel>\n    <Select key='input_select' labelId='input' id='input'\n     value={''} onChange={((e)=> handleCommand(e.target.value as ControlKeys))}>\n         <MenuItem key='inhdmi1' value={ControlCommands.INPUT_SELECT_HDMI1}>HDMI 1</MenuItem>\n         <MenuItem key='inhdmi2' value={ControlCommands.INPUT_SELECT_HDMI2}>HDMI 2</MenuItem>\n         <MenuItem key='inc1' value={ControlCommands.INPUT_SELECT_COMPUTER1}>Computer 1</MenuItem>\n         <MenuItem key='inc2' value={ControlCommands.INPUT_SELECT_COMPUTER2}>Compuer 2</MenuItem>\n         <MenuItem key='indl' value={ControlCommands.INPUT_SELECT_DIGITALLINK}>Digital Link</MenuItem>\n         <MenuItem key='indvi' value={ControlCommands.INPUT_SELECT_DVI}>DVI</MenuItem>\n         <MenuItem key='insdi1' value={ControlCommands.INPUT_SELECT_SDI1}>SDI 1</MenuItem>\n         <MenuItem key='invid' value={ControlCommands.INPUT_SELECT_VIDEO}>Video</MenuItem>\n         <MenuItem key='inyc' value={ControlCommands.INPUT_SELECT_YC}>Y/C</MenuItem>\n     </Select>\n     \n</FormControl>\n</> )\n}","import {ControlKeys, ControlCommands} from '../../util/constants'\nimport {FormControl, InputLabel, Select, MenuItem} from '@material-ui/core'\nimport { dropdownStyle } from './DropdownStyle'\n\ninterface OSDProps{\n    handleCommand: (e: ControlKeys) => void\n}\n\n\nconst useStyles = dropdownStyle\nexport default function OSDPostion(props: OSDProps){\n    const {handleCommand} = props\n    const classes = useStyles()\n\n    return (\n        <>\n    <FormControl className={classes.formControl}>\n    <InputLabel id='osd_position'>OSD Position</InputLabel>\n    <Select labelId='osd_position' id='osd_postion'\n     value={''} onChange={((e)=> handleCommand(e.target.value as ControlKeys))}>\n         <MenuItem value={ControlCommands.OSD_POSITION_UPPER_LEFT}>Upper Left</MenuItem>\n         <MenuItem value={ControlCommands.OSD_POSITION_CENTER_LEFT}>Center Left</MenuItem>\n         <MenuItem value={ControlCommands.OSD_POSITION_LOWER_LEFT}>Lower Left</MenuItem>\n         <MenuItem value={ControlCommands.OSD_POSITION_TOP_CENTER}>Top Center</MenuItem>\n         <MenuItem value={ControlCommands.OSD_POSITION_CENTER}>Center</MenuItem>\n         <MenuItem value={ControlCommands.OSD_POSITION_LOWER_CENTER}>Lower Center</MenuItem>\n         <MenuItem value={ControlCommands.OSD_POSITION_UPPER_RIGHT}>Upper Right</MenuItem>\n         <MenuItem value={ControlCommands.OSD_POSITION_LOWER_RIGHT}>Lower Right</MenuItem>\n     </Select>\n     \n</FormControl>\n</> )\n}","import {ControlKeys, ControlCommands, HandleCommand} from '../../util/constants'\nimport {FormControl, InputLabel, Select, MenuItem} from '@material-ui/core'\nimport { dropdownStyle } from './DropdownStyle'\n\ninterface Props{\n    handleCommand: HandleCommand\n}\n\n\nconst useStyles = dropdownStyle\nexport default function OSDRotation(props: Props){\n    const {handleCommand} = props\n    const classes = useStyles()\n\n    return (\n        <>\n    <FormControl className={classes.formControl}>\n    <InputLabel id='osdRotation'>OSD Rotation</InputLabel>\n    <Select labelId='osdRotation' id='osdRotation'\n     value={''} onChange={((e)=> handleCommand(e.target.value as ControlKeys))}>\n         <MenuItem value={ControlCommands.OSD_ROTATION_OFF}>Off</MenuItem>\n         <MenuItem value={ControlCommands.OSD_ROTATION_CLOCKWISE}>Clockwise</MenuItem>\n         <MenuItem value={ControlCommands.OSD_ROTATION_COUNTERCLOCKWISE}>Counter Clockwise</MenuItem>\n     </Select>\n     \n</FormControl>\n</> )\n}","import {ControlKeys, ControlCommands} from '../../util/constants'\nimport {FormControl, InputLabel, Select, MenuItem} from '@material-ui/core'\nimport { dropdownStyle } from './DropdownStyle'\n\ninterface OSDProps{\n    handleCommand: (e: ControlKeys) => void\n}\n\n\nconst useStyles = dropdownStyle\nconst id = 'pj_postion'\nexport default function PJPositon(props: OSDProps){\n    const {handleCommand} = props\n    const classes = useStyles()\n    \n    return (\n        <>\n    <FormControl className={classes.formControl}>\n    <InputLabel id={id}>PJ Position</InputLabel>\n    <Select labelId={id} id={id}\n     value={''} onChange={((e)=> handleCommand(e.target.value as ControlKeys))}>\n         <MenuItem key='fa' value={ControlCommands.PROJECTOR_INSTALL_METHOD_FRONT_AUTO}>Front/Auto</MenuItem>\n         <MenuItem key='fc' value={ControlCommands.PROJECTOR_INSTALL_METHOD_FRONT_CEILING}>Front/Ceiling</MenuItem>\n         <MenuItem key='fd' value={ControlCommands.PROJECTOR_INSTALL_METHOD_FRONT_DESK}>Front/Desk</MenuItem>\n         <MenuItem key='ra' value={ControlCommands.PROJECTOR_INSTALL_METHOD_REAR_AUTO}>Rear/Auto</MenuItem>\n         <MenuItem key='rc' value={ControlCommands.PROJECTOR_INSTALL_METHOD_REAR_CEILING}>Rear/Ceiling</MenuItem>\n         <MenuItem key='rd' value={ControlCommands.PROJECTOR_INSTALL_METHOD_REAR_DESK}>Rear/Desk</MenuItem>\n     </Select>\n     \n</FormControl>\n</> )\n}","import { Box, Slider,Typography } from \"@material-ui/core\";\nimport { ChangeEvent, useState } from \"react\";\nimport { ControlKeys, HandleCommand } from \"../../util/constants\";\n\ninterface slider_props{\n    handleCommand: HandleCommand\n    cmd: ControlKeys\n    min: number\n    max: number\n    label: string\n}\nexport default function QuickSlider(props: slider_props){\n    const {handleCommand,cmd, min,max, label}=props\n    const [value, setValue] =useState(max)\n    const handleChange=(event: ChangeEvent<{}>, newValue: number | number[])=>{\n        console.log('sliddder',newValue)\n        setValue(newValue as number)\n        handleCommand(cmd,newValue+'')\n\n    }\n    return(\n    <Box style={{width:200}}>\n        <Typography id=\"input-slider\" gutterBottom>\n        {label}\n      </Typography>\n        <Slider value={value} min={min} max={max} onChange={handleChange}/>\n    </Box>\n\n    )\n}","import { Dialog, DialogTitle, Button, TextField, Container, Fade } from \"@material-ui/core\";\nimport { CSSProperties, useState, useEffect } from \"react\";\nimport { ControlKeys, ControlCommands, HandleCommand, PJ_OBJ } from '../util/constants'\nimport BackColor from \"./CommandInterfaces/BackColor\";\nimport InputSelection from \"./CommandInterfaces/InputSelection\";\nimport OSDPostion from \"./CommandInterfaces/OSDPostion\";\nimport OSDRotation from \"./CommandInterfaces/OSDRotation\";\nimport PJPositon from \"./CommandInterfaces/PJPostion\";\nimport QuickSlider from \"./CommandInterfaces/QuickSlider\";\ninterface Props {\n    open: boolean,\n    handleClose: () => void,\n    handleCommand: HandleCommand,\n    active: number[],\n    pj: PJ_OBJ\n}\n\nexport default function ProjectorSetup(props: Props) {\n    const { open, handleClose, handleCommand, pj, active } = props\n    const [name, setName] = useState( '' )\n    const [direct_command, setCommand] = useState('')\n    const [ID, setID] = useState('')\n    const buttonStyle: CSSProperties = {\n        padding: '20px',\n        width: '100px',\n        margin: 'auto'\n       \n    }\n    const buttonGroupStyle: CSSProperties = {\n        justifyContent: 'center',\n        textAlign: 'center'\n        \n    }\n\n    useEffect(()=>{\n        if(pj && pj.name){\n            setName(pj.name)\n        }\n    },[pj])\n   \n\n\n    const handleClick=(cmd: ControlKeys)=>{\n        switch (cmd){\n            case ControlCommands.PROJECTOR_NAME:\n                handleCommand(cmd, name)\n                break\n            case ControlCommands.PROJECTOR_ID:\n                handleCommand(cmd, ID)\n                break;\n            case ControlCommands.DIRECT_COMMAND:\n                handleCommand(cmd, direct_command)\n        }\n       \n        handleClose()\n    }\n    \n    const getButton=(cmd: ControlKeys, text: string, popUp: boolean)=>{\n\n        return <Button style={buttonStyle} key={text} onClick={(e)=>handleClick(cmd)}>{text}</Button>\n    }\n    return (\n        <Dialog key='setup_dialog' onClose={handleClose} aria-labelledby=\"simple-dialog-title\" open={open} >\n            <DialogTitle style={buttonGroupStyle} key='menu_dialog_title' id=\"simple-dialog-title\">PJ Setup</DialogTitle>\n            <span style={{width:300}}/>\n        <OSDPostion handleCommand={handleCommand}/>   \n        <OSDRotation handleCommand={handleCommand}/>\n        <PJPositon handleCommand={handleCommand}/> \n        <BackColor handleCommand={handleCommand}/>\n        <InputSelection handleCommand={handleCommand}/>\n        <QuickSlider handleCommand={handleCommand} min={50} max={1000} cmd={ControlCommands.LIGHT_OUTPUT} label='Light Output'/>\n        <Container key='direct_command'>    \n            <TextField key='direct_command_input' label='Direct Command' value={direct_command} onChange={(e)=>setCommand(e.target.value)}></TextField>\n            {getButton(ControlCommands.DIRECT_COMMAND, 'Send Command', false)}\n        </Container>   \n        {active.length ===1?<>\n        <Container key='name'>    \n            <TextField key='pj_name_input' label='PJ Name' value={name} onChange={(e)=>setName(e.target.value)}></TextField>\n            {getButton(ControlCommands.PROJECTOR_NAME, 'Store Name', true)}\n        </Container>    \n        <Container key='id'>\n            <TextField key='pj_id' label='PJ ID' value={ID} onChange={(e)=>setID(e.target.value)}></TextField>\n            {getButton(ControlCommands.PROJECTOR_ID, 'Store ID', true)}\n        </Container>\n        </>:<></>}\n        \n        </Dialog>\n    );\n}","import { Button, Paper, ButtonGroup, } from \"@material-ui/core\";\nimport {useState} from 'react'\nimport { ButtonStyle, HandleCommand, PJs} from \"../util/constants\";\nimport BlendDialog from \"./BlendDialog\";\nimport MenuDialog from './MenuDialog'\nimport LensDialog from './LensDialog'\nimport Power from './CommandInterfaces/Power'\nimport Shutter from \"./CommandInterfaces/Shutter\";\nimport ProjectorSetupDialog from \"./ProjectorSetupDialog\";\nimport { useEffect } from \"react\";\n\ninterface command_props{\n    handleCommand: HandleCommand\n    lockCommandLine: (lock: boolean)=> void\n    active: number[]\n    pjs: PJs\n}\nexport default function CommandPad(props:command_props){\n    const {handleCommand, active, pjs, lockCommandLine } = props\n    const [menuOpen, setMenuOpen] = useState(false)\n    const [blendOpen, setBlendOpen] = useState(false)\n    const [lensOpen,setLensOpen] = useState(false)\n    const [pjSetupOpen,setPJSetupOpen] =useState(false)\n\n    useEffect(()=>{\n        if(active.length!==1 || !pjs[active[0]]){\n            setPJSetupOpen(false)\n        }\n    },[active, pjs])\n\n    useEffect(()=>{\n        if(menuOpen){\n            lockCommandLine(true)\n        }else{\n            lockCommandLine(false)\n        }\n    },[menuOpen, lockCommandLine])\n    \n    const getPJ=()=>{\n        return pjs[active[0]]\n    }\n    return(\n       <>\n        <Paper  key='commandKeys' style={{width:'300px'}}>\n           <Shutter handleCommand={handleCommand}/>\n            <br></br>\n           <Power handleCommand={handleCommand}/>\n            <ButtonGroup color=\"primary\" variant=\"outlined\">\n                <Button color=\"primary\" key='menu' variant=\"contained\" style={ButtonStyle}  onClick={(e) => setMenuOpen(!menuOpen)} >Menu</Button>\n                <Button color=\"primary\" key='blend' variant=\"contained\" style={ButtonStyle}  onClick={(e) => setBlendOpen(!blendOpen)} >Blend</Button>\n            </ButtonGroup>\n            <ButtonGroup color='primary' variant='outlined'>\n                <Button key='lens' variant=\"contained\" style={ButtonStyle} onClick={((e)=>setLensOpen(!lensOpen))}>Lens</Button>\n                (<Button key='pj_setup' variant=\"contained\"  style={ButtonStyle} onClick={((e)=>setPJSetupOpen(!pjSetupOpen))}>PJ Setup</Button>)\n            </ButtonGroup>\n            \n            <MenuDialog open={menuOpen} handleClose={()=>setMenuOpen(false)} handleCommand={handleCommand}/>\n            <BlendDialog open={blendOpen} handleClose={()=>setBlendOpen(false)} handleCommand={handleCommand}/>\n            <LensDialog active={active} open={lensOpen} handleClose={()=>setLensOpen(false)} handleCommand={handleCommand} />\n            <ProjectorSetupDialog open={pjSetupOpen} handleClose={()=>setPJSetupOpen(false)} active={active} pj={getPJ()} handleCommand={handleCommand} />\n        </Paper>\n       \n        </>\n    )\n}\n","\nimport * as C from './constants'\n\n\n\nconst log=(s:string)=>{\n   // console.log(s)\n}\nlet _world : number[] =[]\nlet _groups :C.Groups = {}\nexport function processCMD(cmdLine: string, selected: number[], world: number[], groups: C.Groups) {\n    _world = world\n    _groups= groups\n    cmdLine = cmdLine.trim()\n    let cmds = cmdLine.split(' ')\n   // console.group('CMDs '+cmds)\n   //Removes seleced if not adding or subtracting from it\n    if(cmds.length > 0 && !(cmds[0]==='+' || cmds[0]==='-' )){\n        selected = []\n    }\n    let processed = parse(cmds)\n    log('Parsed: '+processed)\n    processed = handleSelected(processed,selected)\n    log('Filtred: '+processed)\n\n    processed = processed.filter(p=> world.includes(p))\n    log('Worlds: '+processed)\n   // console.groupEnd()\n    return processed\n}\n\nfunction handleSelected(processed: number[], selected: number[]):number[]{\n    let newSelected = selected\n    \n    for(let i=0; i<processed.length; i++){\n        let p = processed[i]\n        if(p<0 && newSelected.includes(p*-1)){\n            newSelected = newSelected.filter((n)=> n!== (p*-1))\n        } else if(!newSelected.includes(p) && p>0){\n            newSelected.push(p)\n        }\n    }\n    return newSelected\n    \n}\n\nfunction parse(cmdArray: string[], parsed: number[] = []): number[] {\n    \n    if (cmdArray.length === 0){ \n        //log('Parsing Tree Complete')\n       // console.groupEnd()\n        return parsed;\n    }\n    //console.group('Parsing: '+cmdArray+ ' |  '+parsed)\n    switch (cmdArray[0]) {\n        case C.commands.THRU:\n            log('Parsing THRU')\n            return parseThru(cmdArray, parsed)\n        case C.commands.GROUP:\n            log('Parsing GROUP')\n            return parseGroup(cmdArray,parsed)\n        case '-':\n            log('Parsing Negative')\n            return parseNegative(cmdArray, parsed)\n        case '+':\n            log('Parsing Postive')\n            return parsePostive(cmdArray,parsed)\n        default:\n            log('Parsing Number')\n            return parseNumber(cmdArray, parsed)\n    }\n}\nfunction parseNumber(cmdArray: string[], parsed: number[]): number[] {\n    if (!cmdArray) return []\n    let i = Number.parseInt(cmdArray[0])\n    \n    if (isFinite(i)) {\n        parsed.push(i)\n     //   log('parsedNumber: '+i+' | '+parsed)\n        return parse(cmdArray.slice(1), parsed)\n    }\n    console.error('Invalid Number', i)\n    return parsed\n\n}\n\nfunction parsePostive(cmdArray:string[], parsed: number[]):number[]{\n    if(!cmdArray) return []\n    let i = 1\n  //  log('CMD Lenght: '+cmdArray.length)\n  //  log(i+' '+cmdArray[i])\n    while(cmdArray[i+1] !=='+' && cmdArray[i+1] !== '-' && i< cmdArray.length){\n        i++\n      //  log(i+' '+cmdArray[i]+' '+(cmdArray[i]==='+'))\n    }\n    let slice = []\n    if(i===1){\n        slice = cmdArray.slice(1,2)\n    } else{\n        slice = cmdArray.slice(1,i+1)\n    }\n    log(cmdArray+' | Postive Slice ('+ cmdArray[i] + ' @ '+i+') '+slice)\n    let sub = parse(slice)\n\n    \n //   log('Sub '+sub+ ' | '+cmdArray[i+1]+' i:'+ i + ' ' +cmdArray.slice(i+1))\n    return parse(cmdArray.slice(i+1),parsed.concat(sub))\n}\n\nfunction parseNegative(cmdArray: string[], parsed: number[]): number[] {\n  \n        if(!cmdArray) return []\n        let i = 1\n   //     log('CMD Lenght: '+cmdArray.length)\n   //    log(i+' '+cmdArray[i])\n        while(cmdArray[i+1] !=='+' && cmdArray[i+1] !== '-' && i< cmdArray.length){\n            i++\n     //       log(i+' '+cmdArray[i]+' '+(cmdArray[i]==='+'))\n        }\n        let slice = []\n        if(i===1){\n            slice = cmdArray.slice(1,2)\n        } else{\n            slice = cmdArray.slice(1,i+1)\n        }\n        log(cmdArray+' | Negative Slice ('+ cmdArray[i] + ' @ '+i+') '+slice)\n        let sub = parse(slice)\n \n        for(let n=0; n<sub.length;n++){\n            sub[n] = sub[n]*-1\n        }\n     //   log('Sub '+sub+ ' | '+cmdArray[i+1]+' i:'+ i + ' ' +cmdArray.slice(i+1))\n        return parse(cmdArray.slice(i+1),parsed.concat(sub))\n\n}\nfunction parseThru(cmdArray: string[], parsed:number[]):number[] {\n    if(cmdArray.length ===0) return []\n    let i = parsed.pop()\n    if(!i) { \n        console.error('Invalid THRU Placement. Number Must Procced THRU CMD')\n        return []\n    }\n  //  log(''+cmdArray.slice(1))\n    let n = parse(cmdArray.slice(1,2))[0]\n    if(!n){\n        n = Math.max(..._world)\n        //console.error('Invaild THRU Placement. Number Must Follow THRU CMD', n)\n        //return []\n    }\n    let sub = []\n    let negative = 1\n    if(i<0){\n        i = i*-1\n        negative = -1\n    }\n    if(i<n){\n        for(let x = i; x<=n;x++){\n            sub.push(x*negative)\n        }\n    } else{\n        for(let x=n; x<=i; x++){\n            sub.push(x*negative)\n        }\n    }\n    return parse(cmdArray.slice(2),parsed.concat(sub))\n\n}\nfunction parseGroup(cmdArray: string[], parsed:number[]):number[]{\n    if(cmdArray.length < 1) return []\n    log(cmdArray+' '+parseInt(cmdArray[0])+'')\n    let g = _groups[parseInt(cmdArray[1])]\n    console.table(_groups)\n    if(!g) return []\n    log('Group '+g)\n    return parse(cmdArray.slice(3),parsed.concat(g.group))\n}","import { Button, } from \"@material-ui/core\";\nimport { CSSProperties } from \"react\";\n\nimport { PJ_OBJ } from \"../util/constants\";\n\n\n\ninterface PJCardProps{\n    pj_tupple: {pj:PJ_OBJ,selected: boolean, active: boolean}\n    handlePJCard: (pjID: number) => void;\n}\nexport default function PJCard(props:PJCardProps){\n    const {pj_tupple, handlePJCard} = props\n    let pj = pj_tupple.pj\n\n    //const classes = useStyles();\n\n    const cardStyle: CSSProperties={\n      \n        background: pj_tupple.active? 'gray': 'white',\n        border: pj_tupple.selected? 'thick solid cornflowerBlue' : 0,\n        color: pj_tupple.active || pj_tupple.selected? 'lightwhite': 'black',   \n        width: 80,\n        height: 50\n    }\n    \n    return(\n       \n       <Button variant='contained'  style={cardStyle} onClick={()=>handlePJCard(pj.id)}>{pj.id}\n       </Button>\n       \n       \n    )\n}\n/*\n <Card className={classes.root} variant=\"outlined\" style={cardStyle} key={pj.id+'card'}>\n            <CardContent>\n                <Typography className={classes.title} color={'primary'}>\n                    {pj.name? pj.name: ''}\n                </Typography>\n                <Typography  className={classes.title} color={'primary'}>\n                ({pj.id})\n                </Typography>\n            </CardContent>\n        </Card>\n        */","import { TableCell, TableRow } from \"@material-ui/core\";\nimport { PJ_OBJ } from \"../util/constants\";\nimport BorderColorIcon from '@material-ui/icons/BorderColor';\nimport { CSSProperties } from \"react\";\n\ninterface tableProps{\n    pj_tupple:  {pj:PJ_OBJ,selected: boolean, active: boolean}\n    handlePJSelect: (pjID: number)=> void\n}\n\nexport default function ProgrammerTable(props: tableProps){\n    const {pj_tupple, handlePJSelect} = props\n    let pj = pj_tupple.pj\n\n    const getNameFormat= ():CSSProperties =>{\n        return{\n        background: pj_tupple.active? 'gray': 'white',\n        border: pj_tupple.selected? 'thick solid cornflowerBlue' : 0,\n        color: pj_tupple.active || pj_tupple.selected? 'lightwhite': 'black',\n        }\n\n    }\n    const blendRegion =()=>{\n        let color = ''\n        let regions = [pj.edgeBlendingUpper, pj.edgeBlendingRight, pj.edgeBlendingLower, pj.edgeBlendingLeft]\n        for(let i=0; i < regions.length; i++){\n            switch(regions[i]){\n                case 'On':\n                    color+= ' green'\n                    break;\n                case 'Off':\n                    color+= ' black'\n                    break\n                case 'Unknown':\n                    color+= ' yellow'\n                    break\n                default:\n                    color+=' red'\n            }\n        }\n      \n        return (\n            <p key={pj.id+'bp'} style={{ padding: 10,  margin:'auto', textAlign: 'center', borderStyle: 'solid', borderColor: color}}> {pj.edgeBlending}\n             <BorderColorIcon key={pj.id+'blend'} style={{fontSize:'15', marginLeft: '5', marginTop: 'auto', color:pj.edgeBlendingMarker==='On'?'red':'gray'}} /></p>\n        )\n    }\n    return (\n        <TableRow key={pj.id+'row'}>\n            <TableCell style={getNameFormat()}key={pj.id+'name'} component='th' scope='row' onClick={()=>{handlePJSelect(pj_tupple.pj.id)}}>\n                {pj.name}\n            </TableCell>\n            <TableCell key={pj.id+'id'}>{pj.id}</TableCell>\n            <TableCell key={pj.id+'shutter'}>{pj.shutter}</TableCell>\n            <TableCell key={pj.id+'blendregion'}>{blendRegion()}</TableCell>\n            <TableCell key={pj.id+'markers'}>{pj.edgeBlendingMarker}</TableCell>\n            <TableCell key={pj.id+'test'}>{pj.testPattren}</TableCell>\n            <TableCell key={pj.id+'lamp'}>{pj.lampStatus}</TableCell>\n            <TableCell key={pj.id+'sig'}>{pj.hdmiResolution}/{pj.hdmiSignalLevel}/{pj.hdmiVerticalFrequency}</TableCell>\n            <TableCell key={pj.id+'osd'}>{pj.osdPostion}</TableCell>\n\n        </TableRow>\n    )\n}","\nimport * as C from '../util/constants'\nimport { Paper, makeStyles, Table, TableBody, TableCell, TableContainer, TableHead, TableRow,  Grid, useMediaQuery, GridSize } from '@material-ui/core'\nimport { prefres } from \"../prefrences\"\nimport {  useMemo, useState } from \"react\"\nimport PJCard from \"./PJCard\"\nimport ProgrammerTable from \"./ProgrammerTable\"\n\ninterface Programmer_Props {\n    selected: number[],\n    active: number[],\n    world: number[],\n    prefs: prefres,\n    status: C.RIG_STATUS,\n    pjs: Record<number, C.PJ_OBJ>,\n    handleTableSelect: (id: number) => void\n}\nconst useStyles = makeStyles({\n    root: {\n        flexGrow: 1,\n    },\n    paper: {\n        height: 140,\n        width: 100,\n    },\n    table: {\n        minWidth: 300,\n        maxHeight: 400\n    },\n    \n})\nexport default function Programmer(props: Programmer_Props) {\n    const { active, world, selected, prefs, pjs, handleTableSelect } = props\n    const classes = useStyles()\n\n    const getPJs = useMemo(() => {\n        console.groupEnd();\n        world.sort()\n        let pjList: { pj: C.PJ_OBJ, selected: boolean, active: boolean }[] = []\n        world.forEach(s => {\n            let pj = pjs[s] ? pjs[s] :\n                {\n                    id: s,\n                    online: 'false',\n                    shutter: 'Unknown',\n                    power: 'Unknown',\n                    lastSeen: -1,\n                    error: 'NOT SEEN',\n                    lampStatus: 'Unknown',\n                    edgeBlending: 'Unknown',\n                    edgeBlendingMarker: 'Unknown',\n                    testPattren: 'Unknown',\n                    backColor: 'Unknown',\n                    edgeBlendingLeft: 'Unknown',\n                    edgeBlendingLower: 'Unknown',\n                    edgeBlendingRight: 'Unknown',\n                    edgeBlendingUpper: 'Unknown',\n                    hdmiResolution: 'Unknown',\n                    hdmiSignalLevel: 'Unknown',\n                    hdmiVerticalFrequency: 'Unknown',\n                    osdPostion: 'Unknown',\n                    inputSignalName_Main: 'Unknown',\n                    name: 'Unknown'\n                }\n            if ((prefs.showOnlySelected && selected.includes(s)) || !prefs.showOnlySelected) {\n                pjList.push({ pj, selected: selected.includes(s), active: active.includes(s) })\n            }\n\n        })\n        return pjList\n\n    }, [world, pjs, prefs, selected, active])\n\n    \n    const [spacing, setSpacing] = useState( useMediaQuery('(min-width:600px)')? 2 : 0)\n    \n    const getCards = () => {\n       \n        return getPJs.map(pj_tupple => {\n            return <Grid key={'g_' + pj_tupple.pj.id} item xs={spacing as GridSize} style={{margin: 'auto'}}>\n                <PJCard handlePJCard={handleTableSelect} pj_tupple={pj_tupple} />\n            </Grid>\n        })\n    }\n\n    const getRows = () => {\n        return getPJs.map(pj_tupple => {\n\n            return <ProgrammerTable handlePJSelect={handleTableSelect} key={pj_tupple.pj.id+'card'} pj_tupple={pj_tupple} />\n        })\n    }\n    return (\n        <>  {prefs.programmerTableView?\n            <TableContainer key='pjtablecon' component={Paper}>\n                <Table key='pjtablet' className={classes.table} size='small'>\n                    <TableHead key='pjtablehead'>\n                        <TableRow key='pjtableheadrow'>\n                            <TableCell key='pjtable_name'>Name</TableCell>\n                            <TableCell key='pjtable_id'>ID</TableCell>\n                            <TableCell key='pjtable_shutter'>Shutter</TableCell>\n                            <TableCell key='pjtable_blend'>Blend</TableCell>\n                            <TableCell key='pjtable_mark'>Blend Marker</TableCell>\n                            <TableCell key='pjtable_test'>Test Pattren</TableCell>\n                            <TableCell key='pjtable_lamp'>Lamp</TableCell>\n                            <TableCell key='pjtable_hdmi'>HDMI</TableCell>\n                            <TableCell key='pjtable_osd'>OSD</TableCell>\n                        </TableRow>\n                    </TableHead>\n                    <TableBody>\n                        {getRows()}\n                    </TableBody>\n                </Table>\n            </TableContainer>\n        :\n\n            <Grid key='programmer' className={classes.root} spacing={2} container>\n                {getCards()}\n            </Grid>\n}\n        </>\n    )\n}\n/**\n<TableContainer key='p-tc' component={Paper}>\n<Table key='p-t' className={classes.table}>\n    <TableHead key='p-th'>\n        <TableRow key='p-r'>\n            <TableCell style={getStyle()} key='p_pj'> PJ </TableCell>\n            <TableCell style={getStyle(status.shutter)} key='p_s'> Shutter</TableCell>\n            <TableCell style={getStyle(status.blend)} key='p_b'> Blend</TableCell>\n            <TableCell style={getStyle(status.blendMarker)} key='p_bm'> Blend Marker</TableCell>\n            <TableCell style={getStyle(status.testPattren)} key='p_test'> Test Pattern</TableCell>\n            <TableCell style={getStyle(status.lampStatus)} key='p_lamp'> Lamp Status</TableCell>\n            <TableCell style={getStyle(status.hdmiInput)} key='p_hdmi'> HDMI Input</TableCell>\n            <TableCell style={getStyle(status.signalName)} key='p_signal name'> Signal Name</TableCell>\n            <TableCell style={getStyle()} key='p_ls'> Last Seen</TableCell>\n\n        </TableRow>\n    </TableHead>\n    <TableBody>\n        {getPJs}\n    </TableBody>\n</Table>\n</TableContainer>\n*/","import * as C from './constants'\n//const puppeteer = require('puppeteer');\n\nasync function goFetch(query: string){\n    let fetchString = C.pjServer+'api/'+query\n   // console.log(fetchString)\n    try{\n    let res = await fetch(fetchString,{\n       mode: 'no-cors'\n    })\n    \n   // console.table(res.body)\n    if(res.ok){\n      //  console.log(await res.text())\n        //return await res.json()\n        return await res.json()\n    }\n}catch(e){\n    console.log(e)\n}\n    \n    \n}\n\nexport async function getPJ(target:number) {\n    let pj = await goFetch('status/?pj='+target)\n    if(pj){\n        return pj as unknown as C.PJ_OBJ\n    }\n    return undefined\n    \n}\n\nexport async function getPJs(){\n    let pjs = await goFetch('status/?pj=all')\n    if(pjs){\n        return pjs as unknown as Record<number,C.PJ_OBJ>\n    }\n}\nexport async function getRigStatus(){\n   // console.log('Getting Rig Status')\n    let status = await goFetch('status/?rigstatus=all')\n    if(status){\n        return status as unknown as C.RIG_STATUS\n    }\n}\n/*\nexport async function setConfig(item: C.ConfigHeaders, value: string){\n    await goFetch('config/?'+item+\"=\"+value)\n}*/\n\nexport async function setConfig(query: string){\n    await goFetch('config/?'+query)\n}\nexport async function setter(target: number, command:  C.ControlKeys) {\n    console.log('Setting ',target,command)\n    await goFetch('set/?pj='+target+'&command='+command)\n}\nexport async function  powerOff(target: number) {\n     return await setter(target, C.ControlCommands.POWER_OFF)\n}\n\nexport async function powerOn(target: number) {\n    return await setter(target,C.ControlCommands.POWER_ON)\n}\n\nexport async function shutterOn(target:number){\n    console.log('Sutter On')\n    return await setter(target,C.ControlCommands.SHUTTER_OPEN)\n}\nexport async function shutterOff(target:number) {\n    return await setter(target,C.ControlCommands.SHUTTER_CLOSED)\n}\n\nexport async function menu(target:number) {\n    \n}\n","import { Dialog, DialogTitle , TextField, Select, MenuItem, InputLabel, Button} from \"@material-ui/core\";\nimport React, { CSSProperties, useState } from \"react\";\nimport {PROJECTOR_MAKES, PROJECTOR_MAKE, Patch} from '../util/constants'\ninterface PatchAdd_Props{\n    open: boolean,\n    handleClose: ()=>void,\n    addPJs: (amount: number, startID: number, baseIP: string, port: number, auth: string, make: PROJECTOR_MAKE)=>void,\n    currentPatch: Patch\n}\n\nconst style: CSSProperties={\n    width: '90%',margin: 'auto', marginBottom: '5px'\n    \n}\nexport default function PatchAddDialog(props: PatchAdd_Props){\n    const {open,handleClose, addPJs, currentPatch}= props\n\n    const getMaxID=()=>{\n        let i = -1\n        Object.values(currentPatch).forEach(pj=>{\n            if(pj.id> i)\n                i = pj.id\n        })\n        if(i===-1)\n            return 100\n        \n            return i\n    }\n\n    const [make, setMake]= useState<PROJECTOR_MAKE>(PROJECTOR_MAKES.PANASONIC)\n    const [Amount, setAmount] = useState({value:1,err:''})\n    const [StartID, setID] = useState({value:getMaxID()+1,err:''})\n    const [BaseIP, setBaseIP]= useState({value:'192.168.10.',err:''})\n    const [UserName, setUserName] = useState('admin1')\n    const [Pass, setPass] = useState('')\n    const [Port, setPort] = useState({value:1024, err:''})\n    //const [hasErrors, setHasErrors]= useState(false)\n\n   \n    const getListItems=()=>{\n        return Object.values(PROJECTOR_MAKES).map(key=>{\n            //console.log(key)\n            return <MenuItem key={key} value={key}>{key}</MenuItem>\n        })\n    }\n    const handleSubmit=()=>{\n        let auth = ''\n        if(make === PROJECTOR_MAKES.PANASONIC){\n            auth = UserName+\":\"+Pass\n        }\n        addPJs(Amount.value,StartID.value,BaseIP.value,Port.value, auth,make)\n    }\n    const handleMake=(e: React.ChangeEvent<{value:unknown}>)=>{\n        setMake(e.target.value as PROJECTOR_MAKE)\n    }\n    const getBaseStart=()=>{\n        return parseInt(BaseIP.value.split('.')[3])\n    }\n    const checkOverlap=(startID: number, amount: number)=>{\n        for(let i = startID; i<amount+startID; i++){\n            let t = false\n            Object.values(currentPatch).forEach(pj=>{\n                if(pj.id === i)\n                    t = true\n            })\n            if(t)\n                return true\n        }\n        return false\n    }\n    const handleAmount=(e: React.ChangeEvent<HTMLTextAreaElement | HTMLInputElement>)=>{\n        let value = parseInt(e.target.value)\n        let err= ''\n        if(value<1 || isNaN(value)){\n            err='Invalid Number'\n        } else if(checkOverlap(StartID.value, value)){\n            err='Will Overlap Other IDs'\n        }\n\n        setAmount({value,err})\n    }\n    \n    const handleID=(e: React.ChangeEvent<HTMLTextAreaElement | HTMLInputElement>)=>{\n        let value = parseInt(e.target.value)\n        let err= ''\n        if(value<1 || isNaN(value)){\n            err='Invalid Number'\n        } else if(getBaseStart()+Amount.value >254){\n            err='Will Land Outside Base IP Range'\n        } else if(checkOverlap(value, Amount.value)){\n            err='Will Overlap Other IDs'\n        }\n        setID({value,err})\n    }\n    const handlePort=(e: React.ChangeEvent<HTMLTextAreaElement | HTMLInputElement>)=>{\n        let value = parseInt(e.target.value)\n        let err= ''\n        if(value<1 || isNaN(value)){\n            err='Invalid Number'\n        }\n        setPort({value,err})\n    }\n    const handleBaseIP=(value: string)=>{\n        \n        let err= ''\n        let s = value.split('.')\n        if(s.length===4){\n            for(let i =0; i<4;i++){\n                if(parseInt(s[i])<0 || parseInt(s[i])>(254-Amount.value)){\n                    err ='Invalid Number Range: '+s[i]\n                }\n            }\n        } else{\n            err= 'Invalid Number of .'\n        }\n        console.log(value)\n        \n        setBaseIP({value,err})\n    }\n\n    const handlePass=(value: string)=>{\n        setPass(value)\n    }\n    const handleUser=(value:string)=>{\n        setUserName(value)\n    }\n    return( \n        <Dialog fullWidth={true} style={{padding: '10%'}} onClose={handleClose} aria-labelledby=\"simple-dialog-title\" open={open}>\n        <DialogTitle id=\"simple-dialog-title\">Add Projectors</DialogTitle>\n        <InputLabel style={style} id=\"pjMake\">Model</InputLabel>\n        <Select style={style} id='pjMake' onChange={handleMake} value={make}>\n        {getListItems()}\n        </Select>\n        <br></br>\n        <TextField style={style} error={Amount.err? true: false} variant=\"filled\" type={'number'}label={'Amount'} value={Amount.value} onChange={handleAmount} helperText={Amount.err}> </TextField>\n        <br></br>\n        <TextField style={style} error={StartID.err? true: false} value={StartID.value} helperText={StartID.err} variant=\"filled\" type={'number'} label={'StartID'} onChange={handleID} > </TextField>\n        <br></br>\n        <TextField style={style} error={BaseIP.err? true: false} value={BaseIP.value} helperText={BaseIP.err} variant=\"filled\" type={'text'}label={'BaseIP'} onChange={(e)=>handleBaseIP(e.target.value)} > </TextField>\n        <br></br>\n        <TextField style={style} error={Port.err? true: false} value={Port.value} helperText={Port.err} variant=\"filled\" type={'number'}label={'Port'} onChange={handlePort} > </TextField>\n        <br></br>\n        <TextField style={style}  value={UserName}  variant=\"filled\" label={'Username'} type={'text'} onChange={(e)=>handleUser(e.target.value)}> </TextField>\n        <br></br>\n        <TextField style={style}  value={Pass}  variant=\"filled\" label={'Password'}type={'text'} onChange={(e)=>handlePass(e.target.value)}> </TextField>\n\n        <Button style={{width:'20%', margin: 'auto', marginBottom:'2%'}} disabled={Amount.err || BaseIP.err || StartID.err? true: false} variant=\"contained\" color=\"primary\" onClick={handleSubmit}>Submit</Button>\n      </Dialog>\n    )\n}","import * as C from \"../util/constants\";\nimport { DataGrid } from '@material-ui/data-grid';\nimport { Button, Paper, makeStyles, ButtonGroup } from '@material-ui/core'\nimport AddIcon from '@material-ui/icons/Add';\nimport EditIcon from '@material-ui/icons/Edit';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport { useState } from \"react\";\nimport { v4 } from 'uuid'\nimport Alert from './Alert'\nimport PatchAddDialog from './PatchAddDialog'\n\ninterface Patch_props {\n  patch: C.Patch\n  setPatch?: (p: C.Patch) => void\n}\n\nconst useStyles = makeStyles((theme) => ({\n  fab: {\n    position: 'absolute',\n    bottom: theme.spacing(2),\n    right: theme.spacing(2),\n  },\n\n}));\nconst columns = [\n  { field: 'uuid', headerName: 'uuid', width: 100, hide: true },\n  { field: 'id', headerName: 'ID', width: 90 },\n  { field: 'ip_address', headerName: 'IP Address', width: 170 },\n  { field: 'port', headerName: 'Port', width: 130 },\n  { field: 'auth', headerName: 'Auth', width: 130 },\n  { field: 'make', headerName: 'Make', width: 130 },\n\n];\n\nexport default function Patch(props: Patch_props) {\n  const { patch, setPatch } = props\n  const [addWindowOpen, setAddWindowOpen] = useState(false)\n  const [editWindowOpen, setEditWindowOpen] = useState(false)\n  const [selected, setSelected] = useState<number[]>([])\n  const [deleteWindowOpen, setDeleteWindowOpen] = useState(false)\n  const classes = useStyles()\n  let newPJs: C.Patch = {}\n\n  const addPJs = (amount: number, startID: number, baseIP: string, port: number, auth: string, make: C.PROJECTOR_MAKE) => {\n    setAddWindowOpen(false)\n    console.log('Got PJs to make!')\n    for (let id = startID; id < amount + startID; id++) {\n      let ip_address = baseIP + id\n      //console.log('Patch', patch)\n      if (Object.values(patch).filter(pj => {\n        if (pj.id === id) {\n          console.log('Conflicting ID', id);\n          return true\n        }\n        if (pj.ip_address === ip_address) {\n          console.log('Conflicting IP', ip_address);\n          return true\n        }\n        return false\n      }\n      ).length > 0) {\n        console.log('Conflicting PJ')\n        newPJs[v4()] = { ip_address: '-', port, auth, make, id: 0 }\n      } else {\n        // console.log('new PJ!')\n        newPJs[v4()] = { ip_address, id, port, auth, make }\n      }\n    }\n    //console.log(newPJs)\n    let newPatch = Object.assign(patch, newPJs) as C.Patch\n    if (newPatch && setPatch) {\n      setPatch(newPatch)\n    }\n  }\n  /*\n  const getRows = () => {\n    return Object.entries(patch).map(e => {\n      let pj = e[1]\n      //@ts-ignore\n      pj.channel = pj.id\n      //@ts-ignore\n      pj.id = e[0]\n\n      return pj\n\n    })\n  }\n  */\n\n  const handleDelete = (c: C.ControlKeys) => {\n\n    let newPatch = Object.assign(patch) as C.Patch\n    Object.entries(newPatch).forEach(e => {\n      if (selected.includes(e[1].id)) {\n        delete newPatch[e[0]]\n        let newSelect = Object.assign(selected) as number[]\n        delete newSelect[e[1].id]\n        setSelected(newSelect)\n      }\n    })\n\n\n    //const i = Object.assign(newPatch)\n    if (newPatch && setPatch) {\n      //console.log('Deleting',Object.values(patch).length-Object.values(newPatch).length)\n      setPatch(newPatch)\n      setSelected([])\n    }\n\n  }\n  const getSelectedString = () => {\n    let s = ''\n    for (let i = 0; i < selected.length; i++) {\n      s += selected[i] + ' '\n      if (i % 9 === 0) {\n        s += '\\r'\n      }\n    }\n    return s\n  }\n\n\n\n  return (\n    <>\n      <Paper style={{ height: 700, width: '100%' }}>\n        {patch ?\n          <DataGrid rows={Object.values(patch)} columns={columns} checkboxSelection selectionModel={selected} onSelectionModelChange={(e) => setSelected(e.selectionModel as number[])} />\n          : <></>\n        }\n\n        <ButtonGroup color='primary' className={classes.fab} >\n          <Button aria-label=\"add\" onClick={(e) => setAddWindowOpen(true)}> <AddIcon /></Button>\n          <Button aria-label=\"edit\" disabled={selected.length < 1} onClick={(e) => setEditWindowOpen(true)}> <EditIcon /></Button>\n          <Button aria-label=\"edit\" disabled={selected.length < 1} onClick={(e) => setDeleteWindowOpen(true)}> <DeleteIcon /></Button>\n        </ButtonGroup>\n\n\n      </Paper>\n      <Alert open={deleteWindowOpen} handleCommand={handleDelete} handleClose={() => setDeleteWindowOpen(false)} command={C.ControlCommands.MENU} header='Delete Selected' message={'Are you srue you want to delete: \\r \\n' + getSelectedString()} ></Alert>\n      <PatchAddDialog open={addWindowOpen} handleClose={() => setAddWindowOpen(false)} addPJs={addPJs} currentPatch={patch} />\n    </>\n  )\n}","\nexport type update ={version:string,date:string, notes:string[]}\nexport type updates =update[]\nconst updateLog: updates=[\n    {version: '0.1.4.', date: '9/5/21', notes:[\n        'Added About'\n    ]},\n    {version: '0.1.4.1', date: '9/5/21', notes:[\n        'More About', 'Less Mess'\n    ]},\n    {version: '0.1.5.2', date: '10/5/21', notes:[\n        'Programmer Table now selectable'\n    ]},\n    {version:'0.1.5.3', date:'10/6/21', notes:[\n        'OSD Rotaion, PJ Roation Added',\n        'Clear Bug Fix',\n        'User Option to 3x Clear on 1 press addeds'\n    ]},\n    {version:'0.1.5.4', date:'10/7/21', notes:[\n        'Input',\n        'White TestPattren to real one',\n    ]},\n    {version:'0.1.5.5', date:'10/11/21', notes:[\n        'Menu Popup now maps keyboard keys to keys',\n        'Menu Popup now allows number key entry'\n    ]},\n    {version:'0.1.5.6', date:'11/8/21', notes:[\n        'Next and Back when only one PJ selected',\n        'Logic fix to Command Line'\n    ]},\n    {version:'0.1.5.7', date:'11/8/21', notes:[\n        'Bug Fix for worlds',\n    ]},\n    {version:'0.1.5.8', date:'11/9/21', notes:[\n        'Bug fix for CMD logic',\n    ]},\n    {version:'0.1.5.9', date:'4/15/23', notes:[\n        'Default 3x Clear',\n        'Default Dark Mode'\n    ]},\n    {version:'0.1.6.0', date:'2/12/24', notes:[\n        'Direct Commands'\n    ]}\n    \n]\n\nexport default updateLog","\nimport { Card, Dialog, Paper, Typography, makeStyles, CardContent, Theme, createStyles, AppBar } from '@material-ui/core';\n\nimport updateLog from '../util/UpdateLog'\ninterface About_Props{\n    open: boolean\n    handleClose: ()=>void\n}\nconst useStyles = makeStyles((theme: Theme)=> createStyles({\n    root: {\n      minWidth: 275,\n      flexGrow: 1,\n    },\n    bullet: {\n      display: 'inline-block',\n      margin: '0 2px',\n      transform: 'scale(0.8)',\n    },\n    menuButton: {\n        marginRight: theme.spacing(2),\n    },\n    title: {\n      fontSize: 14,\n    },\n    pos: {\n      marginBottom: 12,\n    },\n  }));\nexport default function About(props: About_Props){\n    const {open,handleClose}=props;\n    const classes = useStyles();\n    const bull = <span className={classes.bullet}>•</span>;\n    const getNotes=(notes: string[])=>{\n        return notes.map(note=>{\n           return <Typography key={note} variant='body2'>\n                {bull}{note}\n            </Typography>\n        })\n    }\n    const getUpdates=()=>{\n        return updateLog.map(update=>{\n            return <Card className={classes.root} key={update.version}>\n                <CardContent>\n                    <Typography variant='h6' component='h2'>\n                        {update.version}\n                    </Typography>\n                    <Typography className={classes.pos}>\n                        {update.date}\n                    </Typography>\n                    {getNotes(update.notes)}\n               \n                </CardContent>\n                \n                </Card>\n        })\n    }\n    return(\n        <Dialog open={open} onClose={handleClose}>\n            <div className={classes.root}>\n                <AppBar position='static'>\n                <Typography variant='h4'>vanPJ</Typography>\n              <Typography className={classes.pos} >Logic.Lighting | MIT Licence</Typography>\n                    </AppBar>\n          <Paper style={{width: '50%'}}>  \n              \n        {getUpdates()}\n        </Paper>\n        </div>\n        </Dialog>\n    )\n}","import { Dialog, AppBar, Toolbar, Typography, IconButton, Button, Paper, Slide, Switch, TextField, FormControlLabel, makeStyles } from \"@material-ui/core\";\nimport CloseIcon from '@material-ui/icons/Close';\nimport InfoIcon from '@material-ui/icons/Info';\nimport { useState, forwardRef, useEffect } from \"react\";\nimport * as C from \"../util/constants\";\nimport { setConfig } from \"../util/getter\";\nimport Patch from \"./Patch\";\nimport { SocketPatcher } from \"../util/SocketListener\";\nimport { Socket } from \"socket.io-client\";\nimport About from \"./About\";\n//import { socket } from \"../LoadPage\";\nconst useStyles = makeStyles((theme) => ({\n  appBar: {\n    position: 'relative',\n  },\n  title: {\n    marginLeft: theme.spacing(2),\n    flex: 1,\n  },\n  root: {\n    '& .MuiTextField-root': {\n      margin: theme.spacing(1),\n      width: '25ch',\n    },\n  },\n}));\n\nconst Transition = forwardRef(function Transition(props, ref) {\n  //@ts-ignore\n  return (<Slide direction=\"up\" ref={ref} {...props} />);\n});\n\ninterface ConfigDialog_Props {\n  open: boolean\n  handleClose: () => void\n  config: C.Config\n  socket: Socket | undefined\n}\nexport default function ConfigDialog(props: ConfigDialog_Props) {\n  const { open, handleClose, config, socket } = props\n  const [polling, setPolling] = useState(config.Polling)\n  const [pollingInterval, setPollingInterval] = useState(config.Polling_Interval/1000)\n  const classes = useStyles();\n  const [patch, setPatch] = useState<C.Patch>(config.Patch)\n  const [aboutOpen, setAboutOpen] =useState(false)\n\n  useEffect(() => {\n    setPollingInterval(config.Polling_Interval/1000)\n    setPolling(config.Polling)\n    setPatch(config.Patch)\n  }, [config])\n \n\n  const handleSubmit = (event: any) => {\n    event?.preventDefault();\n    // console.log(event)\n\n    let form = document.querySelector('form')\n    if (form) {\n      const data = new FormData(form);\n      let query = ''\n      for (var pair of data.entries()) {\n      \n        let t = pair[0] as C.ConfigHeaders\n       \n        let v = pair[1].toString()\n        switch(t){\n          case C.ConfigHeaders.POLLING:\n           \n            break;\n          case C.ConfigHeaders.POLLING_INTERVAL:\n            query += t + '=' + pollingInterval*1000 + '&'\n            break;\n          default:\n            query += t + '=' + v + '&'\n            break;\n        }\n\n      }\n      //Hard adds Polling to ensure it is accounted for\n      query += C.ConfigHeaders.POLLING + '=' + polling\n      \n      setConfig(query)\n      if(socket)\n        SocketPatcher(socket, patch)\n    }\n  }\n  const handlePollingInterval=(value: number)=>{\n    if(value>10){\n      setPollingInterval(value)\n    }\n  }\n  const handlePatchUpdate=(p: C.Patch)=>{\n    console.log(p)\n    setPatch(p)\n  }\n  return (\n    \n    //@ts-ignore\n    <Dialog fullScreen open={open} onClose={handleClose} TransitionComponent={Transition}>\n\n      <form className={classes.root} onSubmit={handleSubmit}>\n        <AppBar className={classes.appBar}>\n          <Toolbar style={{ paddingBottom: 0, marginBottom: 0, height: 30}}>\n            <IconButton edge=\"start\" color=\"inherit\" onClick={handleClose} aria-label=\"close\">\n              <CloseIcon />\n            </IconButton>\n            <Typography variant=\"h6\" className={classes.title}>\n              Server Configuration\n              <span style={{ fontSize: 10, marginLeft:30 }}> &nbsp;&nbsp;&nbsp; Last Update: {config.LastUpdated}</span> \n            </Typography>\n           \n            <Button autoFocus color=\"inherit\" type={'submit'} onClick={handleClose}>\n              Save\n            </Button>\n            <IconButton color='inherit' onClick={()=>setAboutOpen(true)}><InfoIcon></InfoIcon></IconButton>\n           \n          </Toolbar>\n         \n        </AppBar>\n\n        <Paper key='config_paper'>\n\n\n\n          <TextField key='location' style={{width:'25%'}}label={'Location'} name={C.ConfigHeaders.LOCATION} defaultValue={config.Location} />\n\n          <FormControlLabel name={C.ConfigHeaders.POLLING} value={polling} labelPlacement=\"top\"\n            control={<Switch checked={polling} value={polling} onChange={(e) => setPolling(!polling)} name={C.ConfigHeaders.POLLING} />}\n            label=\"Polling\"\n          />\n\n          <TextField key='polling_interval' style={{width:'25%'}} disabled={!polling} type='number' label={'Poll Interval'} onChange={(e)=> handlePollingInterval(parseInt(e.target.value))} name={C.ConfigHeaders.POLLING_INTERVAL} value={pollingInterval} />\n        </Paper>\n\n\n        <Paper key='patch'>\n          <Patch patch={patch} setPatch={handlePatchUpdate} />\n        </Paper>\n      </form>\n     \n      <About open={aboutOpen} handleClose={()=>setAboutOpen(false)}></About>\n    </Dialog>\n   \n      \n  \n    \n  )\n}","\nimport { Socket } from 'socket.io-client'\nimport * as C from './constants'\n//import {socket} from '../LoadPage'\ntype RIG_STATUS = React.Dispatch<React.SetStateAction<C.RIG_STATUS>>\ntype PJS = React.Dispatch<React.SetStateAction<C.PJs>>\ntype CONFIG = React.Dispatch<React.SetStateAction<C.Config>>\ntype POLLING_PROGRESS = React.Dispatch<React.SetStateAction<number>>\n\nexport default function SocketListener(\n    socket: Socket,\n    setStatus: RIG_STATUS,\n    setPJs: PJS,\n    setConfig: CONFIG,\n    setPollingProgress: POLLING_PROGRESS,\n) {\n   \n    socket.on('connected', () => {\n        console.log('Connected!')\n        // socket.emit('Hello')\n    })\n    socket.on('Hello', () => {\n        //console.log('Hello!')\n    })\n    socket.on(C.ioCommands.EMITTING_PJS, (pjs: C.PJs) => {\n        setPJs(pjs)\n         console.log('Got new PJs!')\n    })\n    socket.on(C.ioCommands.EMITTING_STATUS, (status: C.RIG_STATUS) => {\n       // console.log('Status Updated')\n        setStatus(status)\n    })\n    socket.on(C.ioCommands.REQUEST_UPDATE, () => {\n        console.log('Requesting Update!')\n        socket?.emit(C.ioCommands.REQUESTING_UPDATE)\n    })\n\n    socket.on(C.ioCommands.REQUEST_CONFIG, () => {\n        console.log('Requesting Config')\n       // socket?.emit(C.ioCommands.REQUESTING_CONFIG)\n    })\n    socket.on(C.ioCommands.EMITTING_CONFIG, (config: C.Config) => {\n        console.groupCollapsed('Got New Config')\n        console.log('Config', config)\n        console.log('Patch', config.Patch)\n        console.groupEnd()\n        setConfig(config)\n        /*\n        if(config.Groups[0] && config.Groups[0].group)\n            setWorld(config.Groups[0].group)\n            */\n    })\n    socket.on(C.ioCommands.EMITTING_POLLING_PROGRESS, (progress: number) => {\n        setPollingProgress(progress)\n    })\n}\n    \n\n\n\nexport function SocketPatcher(socket: Socket, patch: C.Patch) {\n    socket.emit(C.ioCommands.EMITTING_PATCH, patch)\n}   ","import {Button, Dialog, DialogActions, DialogTitle, DialogContent, DialogContentText, TextField } from \"@material-ui/core\";\nimport { useEffect, useState } from \"react\";\ninterface Alert_Props{\n    open: boolean,\n    handleInput: (text: string)=>void,\n    handleClose: ()=>void,\n    header: string,\n    message: string,\n    startText: string | undefined\n}\nexport default function Alert(props: Alert_Props){\n    const {open,handleInput, handleClose, header, message ,startText} = props\n    const [text, setText] = useState('')\n\n    useEffect(()=>{\n      if(startText)\n      setText(startText)\n    },[startText])\n\n    const handleClick=(approval: boolean)=>{\n        if(approval){\n            handleInput(text)\n        }\n        handleClose()\n        setText('')\n\n    }\n    return (\n        <Dialog\n        open={open}\n        onClose={handleClose}\n        aria-labelledby=\"alert-dialog-title\"\n        aria-describedby=\"alert-dialog-description\"\n      >\n        <DialogTitle id=\"alert-dialog-title\">{header}</DialogTitle>\n        <DialogContent>\n          <DialogContentText id=\"alert-dialog-description\">\n            <span style={{width:'50'}}>{message}</span>\n          </DialogContentText>\n        </DialogContent>\n        <DialogActions>\n          <TextField value={text} onChange={(e)=>setText(e.target.value)}></TextField>\n          <Button onClick={(e)=>handleClick(false)} color=\"primary\">\n            Cancle\n          </Button>\n          <Button onClick={(e)=>handleClick(true)} color=\"primary\" autoFocus>\n            Okay\n          </Button>\n        </DialogActions>\n      </Dialog>\n        \n    )\n}","import { Button} from '@material-ui/core'\nimport { useMemo } from 'react'\nimport * as C from '../util/constants'\n\ninterface worlds_props{\n    setWorld: (g: string)=> void\n    name: string\n    groupEditCMD: C.ioCommands | undefined\n    groups: C.Groups\n    selected?: number\n}\n/*\ninterface worldTuppel{\n  key: string,\n  name: string,\n  selected: boolean\n}*/\nexport default function Worlds( props: worlds_props){\n\n    const {setWorld, groups, groupEditCMD, selected} = props\n\n    const getWorlds = useMemo(()=>{\n        let g= Object.entries(groups).map(group=>{\n          return {key: group[0], name: group[1].name, selected: selected ===parseInt(group[0])  }\n       \n        })\n      if(groupEditCMD === C.ioCommands.STORE_GROUP){\n        g.push({key:C.ioCommands.STORE_GROUP, name: 'Add Group', selected: false})\n      }\n      return g\n    },[groups,groupEditCMD,selected])\n\n    const getButtons =()=>{\n   \n      return getWorlds.map(group=>{\n        return <Button key={group.key} onClick={(e)=>{e.preventDefault(); setWorld(group.key)}} variant={group.selected?'outlined':'text'}>{group.name}</Button>\n      })\n    }\n    return (\n        <div {...props} >\n          {getButtons()}\n          </div>\n    )\n}\n","import { Button, ButtonGroup, createStyles, Fade, makeStyles, Menu, MenuItem, Paper, Theme, Typography } from \"@material-ui/core\";\nimport Worlds from \"./Worlds\";\nimport { Config, ioCommands } from '../util/constants'\nimport { useRef, useState } from \"react\";\nimport SettingsIcon from \"@material-ui/icons/Settings\";\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\"\nimport PublicIcon from '@material-ui/icons/Public';\n\nimport ExpandLessIcon from '@material-ui/icons/ExpandLess'\n\nconst useStyles = makeStyles((theme: Theme) =>\n    createStyles({\n        root: {\n\n        },\n        container: {\n            display: 'flex',\n        },\n        paper: {\n            margin: theme.spacing(1),\n        },\n    }),\n);\n\ninterface WorldBox_Props {\n    handleWorldSelection: (g: string) => void,\n    handleGroupSelection: (g: string) => void,\n    handleGroupConfig: (cmd: ioCommands) => void,\n    groupEditCMD: ioCommands | undefined,\n    config: Config,\n    world: number\n}\nexport default function WorldBox(props: WorldBox_Props) {\n    const { handleWorldSelection, handleGroupSelection, handleGroupConfig, groupEditCMD, config, world } = props;\n    const [worldOpen, setWorldOpen] = useState(false)\n    const [groupOpen, setGroupOpen] = useState(false)\n    const [configOpen, setConfigOpen] = useState(false)\n    const divRef = useRef(null)\n    const classes = useStyles();\n\n    const handleConfigButton = () => {\n        //@ts-ignore\n        divRef.current.focus()\n\n        setConfigOpen(true)\n\n    }\n    const handleConfigSelect = (cmd: ioCommands) => {\n        setConfigOpen(false)\n        handleGroupConfig(cmd)\n    }\n    const handleWorld = (w: boolean) => {\n        setWorldOpen(!w)\n        if (!w) {\n            setGroupOpen(false)\n        }\n    }\n    const handleGroup = (g: boolean) => {\n        setGroupOpen(!g)\n        if (!g) {\n            setWorldOpen(false)\n        }\n    }\n    const getStyle = () => {\n        if (!worldOpen && !groupOpen) {\n            return {\n                width: '90%', margin: 'auto', height: '40px'\n            }\n        }\n        return {\n            width: '90%', margin: 'auto'\n        }\n\n    }\n    const getHelperText = () => {\n        let generalMessage = ' | Hit Clear to Cancle'\n        switch (groupEditCMD) {\n            case ioCommands.STORE_GROUP:\n                return <Typography>Select Group To Store {generalMessage}</Typography>\n            case ioCommands.DELETE_GROUP:\n                return <Typography>Select Group To Delete {generalMessage}</Typography>\n            case ioCommands.LABEL_GROUP:\n                return <Typography>Select Group to Label {generalMessage}</Typography>\n        }\n    }\n    return (\n        <div className='WorldBox' >\n            <Paper style={getStyle()}>\n                <ButtonGroup style={{ marginTop: '1px', marginBottom: '2px' }} >\n                    <Button key='world_button'\n                        onClick={() => handleWorld(worldOpen)}> Worlds {world !==0? <PublicIcon fontSize=\"small\" /> : '  '}\n                        {worldOpen ? <ExpandLessIcon /> : <ExpandMoreIcon />} </Button>\n                    <Button key='group_button' onClick={() => handleGroup(groupOpen)}>Groups\n                        {groupOpen ? <ExpandLessIcon /> : <ExpandMoreIcon />}\n                    </Button>\n                </ButtonGroup>\n                {getHelperText()}\n\n                <div className={classes.container} style={{width:'100%'}}>\n\n\n                    {worldOpen ? <Fade key='world_Grow' in={worldOpen}>\n\n\n                        <Worlds key=\"world_box\" setWorld={handleWorldSelection} groupEditCMD={groupEditCMD} groups={config.Groups} name={'Worlds'} selected={world} />\n                    </Fade> :\n                        <Fade key='group_box' in={groupOpen}>\n                            <Worlds setWorld={handleGroupSelection} groupEditCMD={groupEditCMD} groups={config.Groups} name={'Groups'} />\n                        </Fade>\n                    }\n                    {groupOpen || worldOpen ?\n                        <Button ref={divRef} style={{ float: 'right', marginLeft:'auto' }} onClick={() => handleConfigButton()}><SettingsIcon /></Button>\n                        : <></>}\n                </div>\n\n            </Paper>\n            <Menu id='groups-menu' keepMounted anchorEl={divRef.current}\n                open={configOpen}\n                onClose={() => setConfigOpen(false)}>\n                <MenuItem>\n                    <Button key='add_group' onClick={() => handleConfigSelect(ioCommands.STORE_GROUP)}>Store Group</Button>\n                </MenuItem>\n                <MenuItem>\n                    <Button key='rename_group' onClick={() => handleConfigSelect(ioCommands.LABEL_GROUP)}>Rename Group</Button>\n                </MenuItem>\n                <MenuItem>\n                    <Button key='delete_group' onClick={() => handleConfigSelect(ioCommands.DELETE_GROUP)}>Delete Group</Button>\n                </MenuItem>\n            </Menu>\n\n        </div>\n    )\n}\n//\n/*\n <Container key='groups_Worlds' style={{width:'80%'}}>\n\n\n        </Container>\n        */","\nimport { useEffect, useState } from 'react';\nimport './App.css';\nimport * as C from './util/constants'\n//import { getPJ } from './util/getter';\n//import PJ from './components/PJ'\nimport Numberpad from './components/numberpad';\nimport CommandPad from './components/CommandPad'\nimport { TextField, Container, Grid, LinearProgress } from '@material-ui/core'\nimport { processCMD } from './util/CMD';\nimport Programmer from './components/Programmer';\nimport * as Prefs from './prefrences';\nimport SocketListener from './util/SocketListener';\nimport ConfigDialog from './components/ConfigDialog';\nimport { Socket } from 'socket.io-client';\nimport InputPopup from './components/InputPopup';\nimport WorldBox from './components/WorldBox';\n\n\n// setSocketConnect(true)\n//import {socket}  from './LoadPage'\ninterface App_Prps {\n  prefs: Prefs.prefres\n  openConfig: boolean\n  handleCloseConfig: () => void\n  socket: Socket | undefined\n}\n\nconst removeFocus = () => {\n  if (document.activeElement instanceof HTMLElement) {\n    document.activeElement.blur();\n  }\n}\n//let socket: Socket | undefined = undefined\n\nfunction App(Props: App_Prps) {\n  const { prefs, openConfig, handleCloseConfig, socket } = Props\n  const [cmd, setCMD] = useState('')\n  const [vartiable, setVartiable] = useState<string | undefined>(undefined)\n  const [active, setActive] = useState<number[]>([])\n  const [activeIndex, setActiveIndex] = useState(-1)\n  const [clearPresses, setClearPressed] = useState(0)\n  const [selected, setSelected] = useState<number[]>([])\n  const [groupNameOpen, setGroupNameOpen] = useState(false)\n  const [groupName, setGroupName] = useState<string | undefined>(undefined)\n  const [config, setConfig] = useState(C.defaultConfig)\n  const [world, setWorld] = useState(0) //Default 0 - All\n  const [pjs, setPJs] = useState<C.PJs>({})\n  const [pollingProgress, setPollingProgress] = useState(100)\n  const [command, setCommand] = useState<C.ControlKeys | undefined>(undefined)\n  const [groupEditCMD, setGroupEditCMD] = useState<C.ioCommands | undefined>(undefined)\n  const [selectedGroup, setSelectedGroup] = useState<number | undefined>(undefined)\n  const [lastPJClicked, setLastPJClicked] = useState<number | undefined>(undefined)\n  const [lockedCommandLine, setLockedCommandLine] = useState(false)\n  const [clearOnNextClick, setClearOnNextClick] = useState(false)\n  const [ignoreClearOnNextClick, setIgnoreOnNextclick] = useState(false)\n  const [rigStatus, setStatus] = useState<C.RIG_STATUS>({\n    online: false,\n    power: false,\n    shutter: false,\n    blendMarker: false,\n    blend: false,\n    testPattren: false,\n    lampStatus: false,\n    hdmiInput: false,\n    signalName: false\n\n  })\n\n\n\n  useEffect(() => {\n\n    if (socket)\n      SocketListener(socket, setStatus, setPJs, setConfig, setPollingProgress)\n\n    if (command) {\n      console.log('Emmiting CMD', command, vartiable, active)\n      setClearOnNextClick(true)\n      socket?.emit(C.ioCommands.EMITTING_CMD, { cmd: command, pjIDs: active, vartiable: vartiable })\n      if (prefs.clearProgrammerAfterCMD) {\n        setActive([])\n        setSelected([])\n      }\n      setCommand(undefined)\n    }\n\n\n    // let i =setInterval(pollPJs,10000)\n    //console.log(selected)\n    return function cleanup() {\n\n      // socket?.disconnect()\n      //setSocketConnect(false)\n    }\n\n\n  }, [active, command, prefs, socket, vartiable, pjs])\n\n  document.onkeydown=((e)=>{\n    let key = e.key\n    switch(key){\n      case 'Shift':\n        setIgnoreOnNextclick(true)\n        break\n    }\n  })\n  document.onkeyup = ((e) => {\n    if (openConfig || groupNameOpen) return\n    if (lockedCommandLine) return\n\n\n\n    let key = e.key\n\n    if (C.keys.includes(key)) {\n      handlePad(key)\n      return\n    }\n\n    switch (key) {\n      case 't':\n        handlePad(C.commands.THRU)\n        break;\n      case 'c':\n        handlePad(C.commands.CLEAR)\n        break;\n      case '=':\n        handlePad('+')\n        break;\n      case 'Backspace':\n        handlePad(C.commands.DEL)\n        break;\n      case 'Enter':\n        //processCMD();\n        handlePad(C.commands.ENTER)\n        break;\n      case 'i':\n        handleCommand(C.ControlCommands.SHUTTER_CLOSED)\n        break;\n      case 'o':\n        handleCommand(C.ControlCommands.SHUTTER_OPEN)\n        break;\n\n      case 'ArrowUp':\n        handlePad(C.commands.IF_PROG)\n        break;\n      case 'ArrowRight':\n        handlePad(C.commands.NEXT)\n        break;\n      case 'ArrowLeft':\n        handlePad(C.commands.BACK)\n        break;\n      case 'Shift':\n        setIgnoreOnNextclick(false)\n        break\n    }\n\n  })\n\n  const handleNext = () => {\n    console.log('Nexting')\n    if (selected.length < 1) {\n      return\n    }\n    let a: number[] = []\n    let i = activeIndex\n    if (selected.length === 1) {\n\n      let currentWorld = getGroup(world)\n      i = currentWorld.indexOf(selected[0])\n\n      switch (i) {\n        case -1:\n          return;\n        case currentWorld.length - 1:\n          i = 0\n          break;\n        default:\n          i++\n          break\n      }\n\n      a.push(currentWorld[i])\n      setSelected(a)\n    } else {\n\n      if (activeIndex + 1 < selected.length) {\n        i += 1\n      }\n      if (activeIndex + 1 >= selected.length) {\n        i = 0\n      }\n      a.push(selected[i])\n    }\n\n\n    setActiveIndex(i)\n    setActive(a)\n  }\n  const handleBack = () => {\n    console.log('Backing')\n    if (selected.length < 1) {\n      return\n    }\n    let a: number[] = []\n    let i = activeIndex\n    if (selected.length === 1) {\n      let currentWorld = getGroup(world)\n      i = currentWorld.indexOf(selected[0])\n      switch (i) {\n        case -1:\n          return;\n        case 0:\n          i = currentWorld.length - 1\n          break;\n        default:\n          i--\n          break;\n      }\n\n      a.push(currentWorld[i])\n      setSelected(a)\n\n    } else {\n\n      if (activeIndex - 1 >= 0) {\n        i -= 1\n      }\n      if (activeIndex - 1 < 0) {\n        i = selected.length - 1\n      }\n      a.push(selected[i])\n    }\n\n\n    setActiveIndex(i)\n    setActive(a)\n  }\n\n  const clear0 = () => {\n    setCMD('')\n  }\n\n  const clear1 = () => {\n    setActive([])\n    setActiveIndex(-1)\n  }\n\n  const clear2 = () => {\n    setSelected([])\n  }\n  const handlePad = (e: string) => {\n\n    removeFocus()\n    if (e === C.commands.CLEAR) {\n      if (groupEditCMD) {\n        // console.log('Clear Pressed, but editCMD')\n        setGroupEditCMD(undefined)\n        return\n      }\n      if (prefs.trippleTapClearOnOne) {\n        clear0()\n        clear1()\n        clear2()\n      } else {\n        setClearPressed((clearPresses + 1))\n      }\n      //console.log('Clear', clearPresses)\n\n      switch (clearPresses) {\n        case 0:\n          clear0()\n          break;\n        case 1:\n          clear1()\n          break;\n        case 2:\n          clear2()\n          break;\n        default:\n          setClearPressed(0)\n      }\n      return\n    }\n    setClearPressed(0)\n    switch (e) {\n\n\n      case C.commands.DEL:\n        //console.log(cmd.slice(-6) === ' THRU ')\n        // console.log(cmd.includes('THRU'))\n        if (cmd.length >= 6 && cmd.slice(-6) === ' ' + C.commands.THRU + ' ') {\n          let t = cmd.slice(0, cmd.length - 6)\n          setCMD(t)\n        } else if (cmd.length >= 7 && cmd.slice(-7) === ' ' + C.commands.GROUP + ' ') {\n          let t = cmd.slice(0, cmd.length - 7)\n          setCMD(t)\n        } else {\n          setCMD(cmd.slice(0, (cmd.length - 1)))\n        }\n        break;\n      case C.commands.THRU:\n        if (cmd.length > 0)\n          setCMD(cmd + ' THRU ')\n        break;\n      case C.commands.ENTER:\n        handleCMD()\n        break;\n      case '-':\n        if (cmd[cmd.length - 1] !== ' ') {\n          setCMD(cmd + ' ' + e + ' ')\n        }\n        break\n      case '+':\n        setCMD(cmd + ' ' + e + ' ')\n        break\n      case C.commands.NEXT:\n        handleNext();\n        break;\n      case C.commands.BACK:\n        handleBack()\n        break;\n      case C.commands.IF_PROG:\n        setActive(selected);\n        setActiveIndex(-1)\n        break;\n      default:\n\n        setCMD(cmd + e)\n      // console.log('setting CMD',cmd)\n    }\n    //  console.log('CMD',cmd)\n  }\n  const handleTableSelect = (id: number) => {\n\n    console.log('Table Select', id, clearOnNextClick)\n    let a = clearOnNextClick? [] :[...active]\n\n    if (a.includes(id)) {\n      setActive(a.filter(pj => pj !== id))\n    } else {\n      a.push(id)\n      setActive(a)\n      setLastPJClicked(id)\n      // s.push(id)\n      //console.log(s)\n      // setSelected(s)\n    }\n    let s = clearOnNextClick? [] : [...selected]\n    if (!s.includes(id)) {\n      s.push(id)\n      setSelected(s)\n    }\n    if(clearOnNextClick)\n      setClearOnNextClick(false)\n  }\n\n  const handleCMD = () => {\n    if (cmd.length > 0) {\n      let s = processCMD(cmd, active, getGroup(world), config.Groups)\n      finalCMD(s)\n      setCMD('')\n    }\n\n  }\n  const finalCMD = (n: number[]) => {\n    // console.log(n)\n    setActive(n)\n    let newSelected: number[] = []\n    selected.forEach(id => {\n      if (n.includes(id)) {\n        newSelected.push(id)\n      }\n    })\n    n.forEach(id => {\n      if (!selected.includes(id)) {\n        newSelected.push(id)\n      }\n    })\n\n    setSelected(newSelected)\n    //setSelected(diffrentPJs)\n\n  }\n  const handleCommand = (command: C.ControlKeys, text?: string) => {\n    console.log(command, vartiable)\n    handleCMD()\n    setCommand(command)\n    setVartiable(text)\n  }\n  const getGroup = (groupID: string | number) => {\n    let g = config.Groups[parseInt(groupID.toString())]?.group\n    return g ? g : []\n  }\n  const handleGroupName = (name: string) => {\n\n    setGroupName(name)\n    console.log(name, groupName, groupEditCMD)\n    if (name) {\n      switch (groupEditCMD) {\n        case C.ioCommands.STORE_GROUP:\n          socket?.emit(C.ioCommands.STORE_GROUP, { name: name, group: active })\n          break;\n        case C.ioCommands.LABEL_GROUP:\n          socket?.emit(C.ioCommands.LABEL_GROUP, { groupID: selectedGroup, name })\n          break;\n      }\n\n      setGroupName(undefined)\n      setGroupEditCMD(undefined)\n      console.log(groupName)\n    }\n  }\n  const handleGroupUpdate = (groupID: string) => {\n    socket?.emit(C.ioCommands.UPDATE_GROUP, { groupID: parseInt(groupID), group: active })\n    setGroupEditCMD(undefined)\n  }\n  const handleGroupAndWorld = (groupID: string) => {\n    if (groupID === C.ioCommands.STORE_GROUP && active.length > 0) {\n      setGroupNameOpen(true)\n      return false\n    } else if (groupEditCMD === C.ioCommands.STORE_GROUP) {\n      handleGroupUpdate(groupID)\n      return false\n    } else if (groupEditCMD === C.ioCommands.LABEL_GROUP) {\n      setGroupName(config.Groups[parseInt(groupID)].name)\n      setSelectedGroup(parseInt(groupID))\n      setGroupNameOpen(true)\n      return false\n    } else if (groupEditCMD === C.ioCommands.DELETE_GROUP) {\n      socket?.emit(C.ioCommands.DELETE_GROUP, { groupID: parseInt(groupID) })\n      setGroupEditCMD(undefined)\n      return false\n    }\n    return true\n  }\n\n  const handleGroupSelection = (groupID: string) => {\n    if (handleGroupAndWorld(groupID)) {\n      removeFocus()\n      let group = getGroup(groupID)\n      if (group) {\n        let s = ''\n        let t = cmd.trim()\n        /*\n           if(t.slice(-1) !== '-' && t.slice(-1) !=='+'){\n             s= ' + '\n           }\n           */\n\n        setCMD(cmd + s + C.commands.GROUP + ' ' + parseInt(groupID))\n\n        //  handleCMD()\n        //  finalCMD(group)\n      }\n    }\n  }\n  const handleWorldSelection = (groupID: string) => {\n    if (handleGroupAndWorld(groupID))\n      setWorld(parseInt(groupID))\n\n    let new_selected = selected.filter(i => getGroup(groupID).includes(i))\n    let new_active = active.filter(i => getGroup(groupID).includes(i))\n    setSelected(new_selected)\n    setActive(new_active)\n    console.log(selected)\n    console.log(active)\n  }\n  const handleGroupConfig = (cmd: C.ioCommands) => {\n    switch (cmd) {\n      case C.ioCommands.STORE_GROUP:\n        setGroupEditCMD(cmd)\n        break;\n      case C.ioCommands.UPDATE_GROUP:\n        setGroupEditCMD(cmd)\n        break\n      case C.ioCommands.LABEL_GROUP:\n        setGroupEditCMD(cmd)\n        break;\n      case C.ioCommands.DELETE_GROUP:\n        setGroupEditCMD(cmd)\n        break;\n    }\n    //\n  }\n  const getStatusBar = () => {\n\n    if (pollingProgress === 100)\n      return <LinearProgress style={{ width: '99%', margin: 'auto' }} variant=\"determinate\" value={0} />\n\n    return <LinearProgress style={{ width: '99%', margin: 'auto' }} variant=\"determinate\" value={pollingProgress} />\n  }\n\n\n  return (\n    <div className=\"App\">\n\n      <link rel=\"stylesheet\" href=\"https://fonts.googleapis.com/css?family=Roboto:300,400,500,700&display=swap\" />\n      <link rel=\"stylesheet\" href=\"https://fonts.googleapis.com/icon?family=Material+Icons\" />\n      {getStatusBar()}\n      <Container style={{ position: 'relative', bottom: '3px', textAlign: 'left', float: 'left' }}>\n      </Container>\n      <Grid container spacing={6} className='inputArea' >\n        <Grid item >\n          <Numberpad handlePad={handlePad} />\n        </Grid>\n        <Grid item>\n          <CommandPad handleCommand={handleCommand} active={active} pjs={pjs} lockCommandLine={(lock) => setLockedCommandLine(lock)} />\n        </Grid>\n      </Grid>\n      <TextField\n        id=\"cmd\"\n\n        style={{ margin: 8, width: '90%' }}\n        value={cmd}\n        helperText=\"Command Line\"\n        fullWidth\n        margin=\"normal\"\n        InputLabelProps={{\n          shrink: true,\n        }}\n        variant=\"outlined\"\n\n      />\n\n      <WorldBox handleGroupSelection={handleGroupSelection} handleWorldSelection={handleWorldSelection} groupEditCMD={groupEditCMD} handleGroupConfig={handleGroupConfig} config={config} world={world} />\n      <br key=\"programmer break\"></br>\n      <Container key='programmer'>\n        <Programmer handleTableSelect={handleTableSelect} key={'pg'} prefs={prefs} world={getGroup(world)} status={rigStatus} selected={selected} active={active}\n          pjs={pjs} />\n\n\n        <br key='stats break'></br>\n\n\n      </Container>\n      <ConfigDialog socket={socket} open={openConfig} handleClose={() => handleCloseConfig()} config={config} />\n      <InputPopup open={groupNameOpen} handleInput={handleGroupName} startText={groupName} handleClose={() => setGroupNameOpen(false)} header={'Group Name'} message={active.toString()} />\n    </div>\n  );\n}\n\nexport default App;\n","\nimport Cookies from 'js-cookie'\nexport interface prefres{\n    darkMode: boolean,\n    clearProgrammerAfterCMD: boolean,\n    showOnlySelected: boolean,\n    programmerTableView: boolean,\n    trippleTapClearOnOne: boolean\n}\nconst cookieName= 'prefs'\n//const prefersDarkMode = useMediaQuery('(prefers-color-scheme: dark)');\nexport const defaultPrefs: prefres={\n    darkMode: true, //prefersDarkMode,\n    clearProgrammerAfterCMD: false,\n    showOnlySelected: false,\n    programmerTableView: false,\n    trippleTapClearOnOne: true\n}\n\nexport const setCookie=(prefs: prefres)=>{\n    Cookies.set(cookieName,prefs)\n}\nconst getCookie =()=>{\n    return Cookies.get(cookieName)\n    /*\n    let c = Cookies.get(cookieName)\n    if(c){\n        return JSON.parse(c) \n       // return c as unknown as prefres\n    } else {\n        setCookie(defaultPrefs)\n        return defaultPrefs\n    }\n    */\n}\n\nexport function getPrefrences(darkMode=true):prefres{\n    let c = getCookie()\n    if(c){\n        return Object.assign(defaultPrefs, JSON.parse(c))\n\n    }else{\n        let d = defaultPrefs\n        d.darkMode = darkMode\n        setCookie(d)\n        return d\n    }\n     \n    //return getCookie()\n}\n\n\n\nexport function setCookie_DarkMode(mode: boolean){\n    let c = getPrefrences()\n    c.darkMode=mode\n    setCookie(c)\n\n}\nexport function setCookie_ClearProgrammerAfterCMD(mode: boolean){\n    let c = getPrefrences()\n    c.clearProgrammerAfterCMD = mode\n    setCookie(c)\n}\nexport function setCookie_ShowOnlySelected(mode:boolean){\n    let c =getPrefrences()\n    console.log(mode)\n    c['showOnlySelected'] = mode\n    setCookie(c)\n}\n\nexport function getDarkMode(){\n    return getPrefrences().darkMode\n}\n\nexport function getClearProgrammerAfterCMD(){\n    return getPrefrences().clearProgrammerAfterCMD\n}\nexport function getShowOnlySelected(){\n    return getPrefrences().showOnlySelected\n}\n\nexport function getProgrammerTableView(){\n    return getPrefrences().programmerTableView\n}","import { Button, Menu, MenuItem, FormControlLabel, Switch  } from '@material-ui/core'\n//import {SettingsIcon} from '@material-ui/icons/Settings';\nimport SettingsIcon from \"@material-ui/icons/Settings\";\nimport { useState, useRef} from 'react'\nimport { prefres } from '../prefrences';\nimport * as C from '../util/constants'\n\n\ninterface menu_props {\n  handleSettings: (e: prefres) => void,\n  prefs: prefres,\n  handleOpenConfig: ()=>void\n}\nexport default function ControlMenu(props: menu_props) {\n\n // const value = useContext(Settings)\n  //console.log(value)\n  const { prefs, handleSettings, handleOpenConfig } = props\n  const divRef = useRef(null)\n\n  const [open, setOpen] = useState(false)\n  \n\n  const handleOpen = () => {\n    setOpen(true)\n\n\n  }\n  const handleClose = (e: C.menuCommands | undefined) => {\n    setOpen(false)\n  }\n\n  const handleChange = (e: C.menuCommands) => {\n    \n    let p = Object.assign({},prefs)\n    switch (e) {\n      case C.menuCommands.CLEAR_SELECTED_ON_CMD:\n        p.clearProgrammerAfterCMD = !prefs.clearProgrammerAfterCMD\n        break;\n      case C.menuCommands.IF_SELECTED:\n        p.showOnlySelected = !prefs.showOnlySelected\n        break;\n      case C.menuCommands.DARK_MODE:\n        p.darkMode = !prefs.darkMode\n        break;\n      case C.menuCommands.PROGRAMMER_TABLE_VIEW:\n        p.programmerTableView = !prefs.programmerTableView\n        break;\n      case C.menuCommands.TRIPPLE_TAP_CLEAR_ON_ONE:\n        p.trippleTapClearOnOne = !prefs.trippleTapClearOnOne\n        break;\n    }\n    handleSettings(p)\n  }\n  let button =\n    <Button ref={divRef} aria-controls=\"simple-menu\" aria-haspopup=\"true\" onClick={() => handleOpen()}>\n      <SettingsIcon />\n    </Button>\n  if(process.env.NODE_ENV === 'development'){\n    document.title = 'PJ Dev'\n  }\n  return (\n    <div>\n\n      {button}\n\n\n      <Menu\n        id=\"simple-menu\"\n        keepMounted\n        //@ts-ignore\n        anchorEl={divRef.current}\n        open={open}\n        onClose={() => handleClose(undefined)}\n      >\n        <MenuItem >\n          <FormControlLabel\n            control={<Switch key={C.menuCommands.CLEAR_SELECTED_ON_CMD} checked={prefs.clearProgrammerAfterCMD}\n              onClick={(e) => handleChange(C.menuCommands.CLEAR_SELECTED_ON_CMD)} name=\"clearSelectedOnPress\" />}\n            label=\"Clear Programmer On CMD\"\n          />\n        </MenuItem>\n        <MenuItem key='trippletap'>\n\n          <FormControlLabel\n            control={<Switch key={C.menuCommands.TRIPPLE_TAP_CLEAR_ON_ONE} checked={prefs.trippleTapClearOnOne}\n              onChange={(e) => handleChange(C.menuCommands.TRIPPLE_TAP_CLEAR_ON_ONE)} name=\"trippleTap\" />}\n            label=\"Auto 3x Clear\"\n          />\n       \n        </MenuItem>\n        <MenuItem>\n\n          <FormControlLabel\n            control={<Switch key={C.menuCommands.IF_SELECTED} checked={prefs.showOnlySelected}\n              onChange={(e) => handleChange(C.menuCommands.IF_SELECTED)} name=\"showonlyselected\" />}\n            label=\"Show Only Selected\"\n          />\n        </MenuItem>\n        <MenuItem>\n\n          <FormControlLabel\n            control={<Switch key={C.menuCommands.DARK_MODE} checked={prefs.darkMode}\n              onChange={(e) => handleChange(C.menuCommands.DARK_MODE)} name=\"darkMode\" />}\n            label=\"Dark Mode\"\n          />\n       \n        </MenuItem>\n        <MenuItem>\n\n          <FormControlLabel\n            control={<Switch key={C.menuCommands.PROGRAMMER_TABLE_VIEW} checked={prefs.programmerTableView}\n              onChange={(e) => handleChange(C.menuCommands.PROGRAMMER_TABLE_VIEW)} name=\"Programmer Table View\" />}\n            label=\"Programmer Table View\"\n          />\n       \n        </MenuItem>\n        <MenuItem>\n        <Button onClick={(e)=>{setOpen(false); handleOpenConfig()}}>Edit Config</Button>\n        </MenuItem>\n      </Menu>\n     \n      <span style={{textAlign:'center', fontSize: 10}}> vanPJ v{process.env.REACT_APP_VERSION}{process.env.NODE_ENV==='development'?' Beta':''}</span>\n    </div>\n  )\n\n}","import { CircularProgress } from \"@material-ui/core\";\n\nexport default function Disconnected(){\n    return (\n      \n            <div style={{width:'100%', textAlign:'center'}} >\n     \n            <CircularProgress  color=\"secondary\" />\n            <p>Can't connect to server</p>\n            \n            </div>\n   \n    )\n}","import React, { useEffect, useState } from 'react';\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\nimport { createMuiTheme, createStyles, makeStyles, ThemeProvider, Theme } from '@material-ui/core/styles';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport App from './App';\nimport * as Pref from './prefrences';\nimport ControlMenu from './components/ControlMenu';\nimport socketIOClinet   from 'socket.io-client'\nimport { Backdrop } from '@material-ui/core';\nimport Disconnected from './components/Disconnected';\nexport const Settings = React.createContext(Pref.defaultPrefs)\n\nexport let socket =socketIOClinet()\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    backdrop: {\n      zIndex: theme.zIndex.drawer + 1,\n      color: '#fff',\n    },\n  }),\n);\nexport default function LoadPage() {\n    const prefersDarkMode = true //useMediaQuery('(prefers-color-scheme: dark)');\n    // const prefersDarkMode = getDarkMode()  \n    const classes = useStyles()\n    const [prefres, setPrefs] = useState(Pref.defaultPrefs)\n    const [openConfig,setOpenConfig] = useState(false)\n    const [socketConnected,setSocketConnected]= useState(false)\n\n    useEffect(()=>{\n    if(!socketConnected){\n      try{\n   \n          console.log('Connecting Socket...')\n       // let s = socketIOClinet()\n    \n        socket.on('connect',()=>{\n           // socket = s\n            setSocketConnected(true)\n        })\n        socket.on('disconnect',()=>{\n           // socket = undefined\n            setSocketConnected(false)\n        })\n      \n      }catch(e){\n\n      }\n    }\n    return function cleanup(){\n     \n    }\n\n    },[socketConnected])\n\n    useEffect(() => {\n  \n        setPrefs(Pref.getPrefrences())\n      \n    },[setPrefs])\n\n    const theme = createMuiTheme({\n        palette: {\n            type: prefres.darkMode ? 'dark' : 'light',\n        }\n    })\n   \n    const handlePrefs = (p: Pref.prefres) => {\n       // console.log(prefres)\n        setPrefs(p)\n      //  console.log(prefres)\n        Pref.setCookie(p)\n    }\n    return (\n        <ThemeProvider theme={theme}>\n            <Settings.Provider value={prefres}/>\n            <CssBaseline />\n            <Backdrop className={classes.backdrop} open={!socketConnected} >\n                <Disconnected/>\n            </Backdrop>\n                <ControlMenu handleOpenConfig={()=> setOpenConfig(true)}handleSettings={handlePrefs} prefs={prefres} />\n                <App socket={socket} prefs={prefres} openConfig={openConfig} handleCloseConfig={()=>setOpenConfig(false)}/>\n              \n                \n            \n        </ThemeProvider>\n    );\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n    window.location.hostname === 'localhost' ||\n      // [::1] is the IPv6 localhost address.\n      window.location.hostname === '[::1]' ||\n      // 127.0.0.0/8 are considered localhost for IPv4.\n      window.location.hostname.match(\n        /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n      )\n  );\n  \n  export function register(config) {\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n      // The URL constructor is available in all browsers that support SW.\n      const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n      if (publicUrl.origin !== window.location.origin) {\n        // Our service worker won't work if PUBLIC_URL is on a different origin\n        // from what our page is served on. This might happen if a CDN is used to\n        // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n        return;\n      }\n  \n      window.addEventListener('load', () => {\n        const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n  \n        if (isLocalhost) {\n          // This is running on localhost. Let's check if a service worker still exists or not.\n          checkValidServiceWorker(swUrl, config);\n  \n          // Add some additional logging to localhost, pointing developers to the\n          // service worker/PWA documentation.\n          navigator.serviceWorker.ready.then(() => {\n            console.log(\n              'This web app is being served cache-first by a service ' +\n                'worker. To learn more, visit https://bit.ly/CRA-PWA'\n            );\n          });\n        } else {\n          // Is not localhost. Just register service worker\n          registerValidSW(swUrl, config);\n        }\n      });\n    }\n  }\n  \n  function registerValidSW(swUrl, config) {\n    navigator.serviceWorker\n      .register(swUrl)\n      .then(registration => {\n        registration.onupdatefound = () => {\n          const installingWorker = registration.installing;\n          if (installingWorker == null) {\n            return;\n          }\n          installingWorker.onstatechange = () => {\n            if (installingWorker.state === 'installed') {\n              if (navigator.serviceWorker.controller) {\n                // At this point, the updated precached content has been fetched,\n                // but the previous service worker will still serve the older\n                // content until all client tabs are closed.\n                console.log(\n                  'New content is available and will be used when all ' +\n                    'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n                );\n  \n                // Execute callback\n                if (config && config.onUpdate) {\n                  config.onUpdate(registration);\n                }\n              } else {\n                // At this point, everything has been precached.\n                // It's the perfect time to display a\n                // \"Content is cached for offline use.\" message.\n                console.log('Content is cached for offline use.');\n  \n                // Execute callback\n                if (config && config.onSuccess) {\n                  config.onSuccess(registration);\n                }\n              }\n            }\n          };\n        };\n      })\n      .catch(error => {\n        console.error('Error during service worker registration:', error);\n      });\n  }\n  \n  function checkValidServiceWorker(swUrl, config) {\n    // Check if the service worker can be found. If it can't reload the page.\n    fetch(swUrl, {\n      headers: { 'Service-Worker': 'script' },\n    })\n      .then(response => {\n        // Ensure service worker exists, and that we really are getting a JS file.\n        const contentType = response.headers.get('content-type');\n        if (\n          response.status === 404 ||\n          (contentType != null && contentType.indexOf('javascript') === -1)\n        ) {\n          // No service worker found. Probably a different app. Reload the page.\n          navigator.serviceWorker.ready.then(registration => {\n            registration.unregister().then(() => {\n              window.location.reload();\n            });\n          });\n        } else {\n          // Service worker found. Proceed as normal.\n          registerValidSW(swUrl, config);\n        }\n      })\n      .catch(() => {\n        console.log(\n          'No internet connection found. App is running in offline mode.'\n        );\n      });\n  }\n  \n  export function unregister() {\n    if ('serviceWorker' in navigator) {\n      navigator.serviceWorker.ready\n        .then(registration => {\n          registration.unregister();\n        })\n        .catch(error => {\n          console.error(error.message);\n        });\n    }\n  }\n  ","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport LoadPage from './LoadPage'\nimport * as serviceWorker from './serviceWorker';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n \n    <LoadPage/>\n  \n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://cra.link/PWA\nserviceWorker.register();\n"],"sourceRoot":""}