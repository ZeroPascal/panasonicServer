{"version":3,"sources":["util/constants.ts","components/numberpad.tsx","components/BlendDialog.tsx","components/CommandInterfaces/DropdownStyle.ts","components/CommandInterfaces/Testpattern.tsx","components/MenuDialog.tsx","components/Alert.tsx","components/CommandInterfaces/LensCal.tsx","components/LensDialog.tsx","components/CommandInterfaces/Power.tsx","components/CommandInterfaces/Shutter.tsx","components/CommandInterfaces/BackColor.tsx","components/CommandInterfaces/InputSelection.tsx","components/CommandInterfaces/OSDPostion.tsx","components/CommandInterfaces/OSDRotation.tsx","components/CommandInterfaces/PJPostion.tsx","components/CommandInterfaces/QuickSlider.tsx","components/ProjectorSetupDialog.tsx","util/SocketSender.ts","components/MacroEditDialog.tsx","components/InputPopup.tsx","components/MacrosDialog.tsx","components/CommandPad.tsx","util/CMD.ts","components/PJCard.tsx","components/ProgrammerTable.tsx","components/Programmer.tsx","util/getter.ts","components/PatchAddDialog.tsx","components/Patch.tsx","util/UpdateLog.ts","components/About.tsx","components/ConfigDialog.tsx","util/SocketListener.ts","components/Worlds.tsx","components/WorldBox.tsx","App.tsx","prefrences.ts","components/ControlMenu.tsx","components/Disconnected.tsx","LoadPage.tsx","serviceWorker.js","reportWebVitals.js","index.js"],"names":["pjServer","process","ioCommands","commands","menuCommands","THRU","DEL","CLEAR","NEXT","IF_PROG","BACK","ENTER","STORE_GROUP","ControlCommands","PROJECTOR_MAKES","ConfigHeaders","keys","defaultConfig","Patch","Location","LastUpdated","Date","Polling","Polling_Interval","Groups","0","name","group","ButtonStyle","width","height","marginBottom","Numberpad","props","handlePad","getButtons","C","map","key","w","Button","variant","style","margin","padding","touchAction","size","onClick","e","Paper","elevation","className","buttons","groups","i","length","g","slice","push","ButtonGroup","buttonGroups","BlendDialog","open","handleClose","handleCommand","buttonStyle","buttonGroupStyle","justifyContent","textAlign","Dialog","onClose","aria-labelledby","DialogTitle","id","EDGE_BLENDING_ON","EDGE_BLENDING_OFF","EDGE_BLENDING_MARKERS_ON","EDGE_BLENDING_MARKERS_OFF","EDGE_BLENDING_UPPER_ON","EDGE_BLENDING_UPPER_OFF","EDGE_BLENDING_RIGHT_ON","EDGE_BLENDING_RIGHT_OFF","EDGE_BLENDING_LOWER_ON","EDGE_BLENDING_LOWER_OFF","EDGE_BLENDING_LEFT_ON","EDGE_BLENDING_LEFT_OFF","dropdownStyle","makeStyles","theme","formControl","spacing","minWidth","selectEmpty","marginTop","useStyles","Testpattern","classes","FormControl","InputLabel","Select","labelId","value","onChange","target","MenuItem","TEST_PATTERN_OFF","TEST_PATTERN_WHITE","TEST_PATTERN_BLACK","TEST_PATTERN_FOCUS_RED","TEST_PATTERN_FOCUS_WHITE","validMenuKeys","MenuDialog","document","onkeydown","includes","NUMBER_KEY_0","NUMBER_KEY_1","NUMBER_KEY_2","NUMBER_KEY_3","NUMBER_KEY_4","NUMBER_KEY_5","NUMBER_KEY_7","NUMBER_KEY_8","NUMBER_KEY_9","MENU_ENTER_KEY","MENU_DEFAULT_KEY","MENU_UP_KEY","MENU_DOWN_KEY","MENU_LEFT_KEY","MENU_RIGHT_KEY","MENU","OSD_ON","OSD_OFF","FREEZE_ON","FREEZE_OFF","Alert","command","header","message","handleClick","approval","aria-describedby","DialogContent","DialogContentText","DialogActions","color","autoFocus","LensCal","useState","openHomeAlert","setOpenHomeAlert","openCalAlert","setOpenCalAlert","LENS_POSTION_HOME","shift","setShift","focus","setFocus","zoom","setZoom","getButton","cmd","text","Accordion","expanded","AccordionSummary","expandIcon","aria-controls","Typography","AccordionDetails","Container","marginLeft","paddingLeft","LENS_SHIFT_H_FN","LENS_SHIFT_H_NN","LENS_SHIFT_H_SN","LENS_SHIFT_H_SP","LENS_SHIFT_H_NP","LENS_SHIFT_H_FP","LENS_SHIFT_V_FN","LENS_SHIFT_V_NN","LENS_SHIFT_V_SN","LENS_SHIFT_V_SP","LENS_SHIFT_V_NP","LENS_SHIFT_V_FP","LENS_FOCUS_FN","LENS_FOCUS_NN","LENS_FOCUS_SN","LENS_FOCUS_SP","LENS_FOCUS_NP","LENS_FOCUS_FP","LENS_ZOOM_FN","LENS_ZOOM_NN","LENS_ZOOM_SN","LENS_ZOOM_SP","LENS_ZOOM_NP","LENS_ZOOM_FP","Power","openPowerOnAlert","setOpenPowerOnAlert","openPowerOffAlert","setOpenPowerOffAlert","POWER_OFF","POWER_ON","Shutter","SHUTTER_CLOSED","SHUTTER_OPEN","BackColor","BACK_COLOR_BLUE","BACK_COLOR_BLACK","BACK_COLOR_DEFAULT_LOGO","BACK_COLOR_USER_LOGO","InputSelection","INPUT_SELECT_HDMI1","INPUT_SELECT_HDMI2","INPUT_SELECT_COMPUTER1","INPUT_SELECT_COMPUTER2","INPUT_SELECT_DIGITALLINK","INPUT_SELECT_DVI","INPUT_SELECT_SDI1","INPUT_SELECT_VIDEO","INPUT_SELECT_YC","OSDPostion","OSD_POSITION_UPPER_LEFT","OSD_POSITION_CENTER_LEFT","OSD_POSITION_LOWER_LEFT","OSD_POSITION_TOP_CENTER","OSD_POSITION_CENTER","OSD_POSITION_LOWER_CENTER","OSD_POSITION_UPPER_RIGHT","OSD_POSITION_LOWER_RIGHT","OSDRotation","OSD_ROTATION_OFF","OSD_ROTATION_CLOCKWISE","OSD_ROTATION_COUNTERCLOCKWISE","PJPositon","PROJECTOR_INSTALL_METHOD_FRONT_AUTO","PROJECTOR_INSTALL_METHOD_FRONT_CEILING","PROJECTOR_INSTALL_METHOD_FRONT_DESK","PROJECTOR_INSTALL_METHOD_REAR_AUTO","PROJECTOR_INSTALL_METHOD_REAR_CEILING","PROJECTOR_INSTALL_METHOD_REAR_DESK","QuickSlider","min","max","label","setValue","Box","gutterBottom","Slider","event","newValue","console","log","ProjectorSetup","pj","active","setName","ID","setID","useEffect","popUp","PROJECTOR_NAME","PROJECTOR_ID","LIGHT_OUTPUT","TextField","send","item","socket","emit","a","appBar","position","title","flex","root","MacroEditDialog","saveMacro","macro","move","setMove","hover","setHover","search","setSearch","left","setLeft","r","n","right","setRight","macroName","setMacroName","leftList","maxHeight","overflow","autoComplete","searchValue","searchString","toUpperCase","newLeft","filter","handleSearch","List","dense","component","role","ListItem","button","newCMD","var","requestVar","addToRight","fontSize","ListItemText","primary","getRight","listItem","background","onMouseOver","ListItemIcon","onMouseDown","onMouseUp","itemToMove","newRight","splice","handleMove","cmdIndex","v","handleVarInput","Checkbox","checked","handleVarCheck","index","removeItem","AppBar","Toolbar","paddingBottom","IconButton","edge","aria-label","type","disabled","Grid","container","alignItems","sx","handleInput","startText","setText","MacroDialog","macros","addOpen","setAddOpen","deleteSelected","setDeleteSelected","editSelected","setEditSelected","configOpen","setConfigOpen","undefined","selectedMacro","setSelectedMacro","varInput","setVarInput","divRef","useRef","handleSaveMacro","UPDATE_MACRO","SocketSender","NEW_MACRO","sendCMD","vartiable","Promise","setTimeout","line","res","str","handleAskInput","handleWait","t","parseInt","cancle","handleForceNext","processMacro","m","prepedLines","c","l","handleMacroClick","Object","assign","DELETE_MACRO","handleConfigSelect","fullScreen","ref","current","values","Menu","keepMounted","anchorEl","entries","CommandPad","pjs","lockCommandLine","menuOpen","setMenuOpen","blendOpen","setBlendOpen","lensOpen","setLensOpen","pjSetupOpen","setPJSetupOpen","macroOpen","setMacroOpen","_world","_groups","parse","cmdArray","parsed","parseThru","GROUP","parseGroup","parseNegative","parsePostive","parseNumber","Number","isFinite","error","sub","concat","pop","Math","negative","x","table","PJCard","pj_tupple","handlePJCard","cardStyle","border","selected","ProgrammerTable","handlePJSelect","TableRow","TableCell","scope","shutter","regions","edgeBlendingUpper","edgeBlendingRight","edgeBlendingLower","edgeBlendingLeft","borderStyle","borderColor","edgeBlending","edgeBlendingMarker","blendRegion","testPattren","lampStatus","hdmiResolution","hdmiSignalLevel","hdmiVerticalFrequency","osdPostion","flexGrow","paper","Programmer","world","prefs","handleTableSelect","getPJs","useMemo","groupEnd","sort","pjList","forEach","s","online","power","lastSeen","backColor","inputSignalName_Main","showOnlySelected","useMediaQuery","programmerTableView","TableContainer","Table","TableHead","TableBody","xs","goFetch","query","fetchString","fetch","mode","ok","json","PatchAddDialog","addPJs","currentPatch","PANASONIC","make","setMake","err","Amount","setAmount","getMaxID","StartID","BaseIP","setBaseIP","UserName","setUserName","Pass","setPass","Port","setPort","checkOverlap","startID","amount","fullWidth","isNaN","helperText","split","handleBaseIP","auth","fab","bottom","columns","field","headerName","hide","patch","setPatch","addWindowOpen","setAddWindowOpen","setEditWindowOpen","setSelected","deleteWindowOpen","setDeleteWindowOpen","newPJs","rows","checkboxSelection","selectionModel","onSelectionModelChange","newPatch","newSelect","getSelectedString","baseIP","port","ip_address","v4","updateLog","version","date","notes","createStyles","bullet","display","transform","menuButton","marginRight","pos","About","bull","update","Card","CardContent","note","Transition","forwardRef","Slide","direction","ConfigDialog","config","polling","setPolling","pollingInterval","setPollingInterval","aboutOpen","setAboutOpen","TransitionComponent","onSubmit","preventDefault","form","querySelector","data","FormData","pair","toString","POLLING","POLLING_INTERVAL","setConfig","EMITTING_PATCH","SocketPatcher","LOCATION","defaultValue","FormControlLabel","labelPlacement","control","Switch","p","Worlds","setWorld","groupEditCMD","getWorlds","WorldBox","handleWorldSelection","handleGroupSelection","handleGroupConfig","worldOpen","setWorldOpen","groupOpen","setGroupOpen","generalMessage","DELETE_GROUP","LABEL_GROUP","getHelperText","Fade","in","float","removeFocus","activeElement","HTMLElement","blur","App","Props","openConfig","handleCloseConfig","setCMD","setVartiable","setActive","activeIndex","setActiveIndex","clearPresses","setClearPressed","groupNameOpen","setGroupNameOpen","groupName","setGroupName","setPJs","pollingProgress","setPollingProgress","setCommand","setGroupEditCMD","selectedGroup","setSelectedGroup","setLastPJClicked","lockedCommandLine","setLockedCommandLine","marcos","setMacros","blendMarker","blend","hdmiInput","signalName","rigStatus","setStatus","on","EMITTING_PJS","EMITTING_STATUS","status","REQUEST_UPDATE","REQUESTING_UPDATE","REQUEST_CONFIG","EMITTING_CONFIG","groupCollapsed","EMITTING_POLLING_PROGRESS","progress","EMITTING_MACROS","SocketListener","EMITTING_CMD","pjIDs","clearProgrammerAfterCMD","onkeyup","clear0","clear1","clear2","handleCMD","currentWorld","getGroup","indexOf","handleNext","handleBack","trippleTapClearOnOne","cmdLine","cmds","trim","processed","newSelected","handleSelected","processCMD","finalCMD","groupID","handleGroupAndWorld","UPDATE_GROUP","handleGroupUpdate","rel","href","LinearProgress","lock","InputLabelProps","shrink","new_selected","new_active","cookieName","defaultPrefs","darkMode","setCookie","Cookies","set","getCookie","get","getPrefrences","JSON","d","ControlMenu","handleSettings","handleOpenConfig","setOpen","handleChange","CLEAR_SELECTED_ON_CMD","IF_SELECTED","DARK_MODE","PROGRAMMER_TABLE_VIEW","TRIPPLE_TAP_CLEAR_ON_ONE","aria-haspopup","Disconnected","CircularProgress","Settings","React","createContext","Pref","socketIOClinet","backdrop","zIndex","drawer","LoadPage","prefersDarkMode","prefres","setPrefs","setOpenConfig","socketConnected","setSocketConnected","createMuiTheme","palette","ThemeProvider","Provider","CssBaseline","Backdrop","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","onUpdate","onSuccess","catch","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById","URL","origin","addEventListener","headers","response","contentType","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.260783ae.chunk.js","sourcesContent":["import { CSSProperties } from \"react\";\n\n\nexport let pjServer = 'http://localhost:3000/'\n//export let pjServer = 'http://192.168.10.249:3000/'\nif(process.env.NODE_ENV ==='production'){\n    pjServer = process.env.REACT_APP_SERVER? process.env.REACT_APP_SERVER : 'localhost:3000';\n}\n\n\nexport const fetchSettings: RequestInit = {\n    method:'get',\n    headers:{\n        \n    }\n   \n}\n\n\nexport type PJs = Record<number,PJ_OBJ>\n\nexport enum ioCommands {\n    REQUEST_UPDATE = 'REQUEST_UPDATE',\n    REQUESTING_UPDATE = 'REQUESTING_UPDATE',\n    EMITTING_PJS = 'EMITTING_PJS',\n    EMITTING_STATUS = 'EMITTING_STATUS',\n    REQUEST_CONFIG = 'REQUEST_CONFIG',\n    EMITTING_CONFIG = 'EMITTING_CONFIG',\n    REQUESTING_CONFIG = 'REQUESTING_CONFIG', \n    EMITTING_PATCH = 'EMITTING_PATCH',\n    EMITTING_POLLING_PROGRESS = 'EMITTING_POLLING_PROGRESS',\n    EMITTING_CMD = 'EMITTING_CMD',\n    STORE_GROUP = 'STORE_GROUP',\n    UPDATE_GROUP = 'UPDATE_GROUP',\n    LABEL_GROUP= 'LABEL_GROUP',\n    DELETE_GROUP='DELETE_GROUP',\n    EMITTING_MACROS='EMITTING_MACROS',\n    NEW_MACRO='NEW_MACRO',\n    DELETE_MACRO = 'DELETE_MACRO',\n    UPDATE_MACRO = 'UPDATE_MACRO'\n    \n}\nexport type PJ_OBJ = {\n    id: number,\n    power: string,\n    name: string,\n    shutter: string,\n    online: string,\n    lastSeen: number,\n    lampStatus: string,\n    edgeBlending: string,\n    edgeBlendingMarker: string,\n    edgeBlendingUpper: string,\n    edgeBlendingLower: string,\n    edgeBlendingRight: string,\n    edgeBlendingLeft: string,\n    testPattren: string,\n    backColor: string,\n    hdmiSignalLevel: string,\n    hdmiResolution: string,\n    hdmiVerticalFrequency: string,\n    osdPostion: string,\n    inputSignalName_Main: string,\n    error: string\n\n}\nexport interface RIG_STATUS{\n    online: boolean,\n    power: boolean,\n    shutter: boolean,\n    blend: boolean,\n    blendMarker: boolean,\n    testPattren: boolean,\n    lampStatus: boolean,\n    hdmiInput:boolean,\n    signalName: boolean\n}\n\nexport enum commands{\n    THRU = 'THRU',\n    DEL = 'DEL',\n    CLEAR = 'CLEAR',\n    ENTER = 'ENTER',\n    NEXT = 'NEXT',\n    BACK = 'BACK',\n    IF_PROG = 'IF_PROG',\n    GROUP = 'GROUP'\n\n}\n\nexport enum menuCommands{\n    CLEAR_SELECTED_ON_CMD = 'CLEAR_SELECTED_ON_CMD',\n    IF_SELECTED = 'IF_SELECTED',\n    DARK_MODE = 'DARK_MODE',\n    PROGRAMMER_TABLE_VIEW ='PROGRAMMER_TABLE_VIEW',\n    TRIPPLE_TAP_CLEAR_ON_ONE ='TRIPPLE_TAP_CLEAR_ON_ONE'\n}\nexport const _keys= ['7','8','9','4','5','6','1','2','3','-','0','+',commands.THRU,commands.DEL, commands.CLEAR, commands.NEXT, commands.IF_PROG, commands.BACK, commands.ENTER, ioCommands.STORE_GROUP]\n\nexport const keys= ['7','8','9','4','5','6','1','2','3','-','0','+',commands.THRU,commands.DEL, commands.CLEAR, commands.BACK, commands.IF_PROG, commands.NEXT, commands.ENTER]\n\nexport enum ControlCommands {\n    POWER_OFF = 'POWER_OFF',\n    POWER_ON = 'POWER_ON',\n    SHUTTER_CLOSED = 'SHUTTER_CLOSED',\n    SHUTTER_OPEN = 'SHUTTER_OPEN',\n    EDGE_BLENDING_OFF = 'EDGE_BLENDING_OFF',\n    EDGE_BLENDING_ON = 'EDGE_BLENDING_ON',\n    EDGE_BLENDING_MARKERS_ON = 'EDGE_BLENDING_MARKERS_ON',\n    EDGE_BLENDING_MARKERS_OFF = 'EDGE_BLENDING_MARKERS_OFF',\n    TEST_PATTERN_OFF = 'TEST_PATTERN_OFF',\n    TEST_PATTERN_WHITE = 'TEST_PATTERN_WHITE',\n    TEST_PATTERN_BLACK = 'TEST_PATTERN_BLACK',\n    TEST_PATTERN_FOCUS_RED = 'TEST_PATTERN_FOCUS_RED',\n    TEST_PATTERN_FOCUS_WHITE= 'TEST_PATTERN_FOCUS_WHITE',\n    MENU = 'MENU',\n    MENU_DOWN_KEY = 'MENU_DOWN_KEY',\n    MENU_UP_KEY = 'MENU_UP_KEY',\n    MENU_RIGHT_KEY = 'MENU_RIGHT_KEY',\n    MENU_LEFT_KEY = 'MENU_LEFT_KEY',\n    MENU_DEFAULT_KEY = 'MENU_DEFAULT_KEY',\n    MENU_ENTER_KEY = 'MENU_ENTER_KEY',\n    EDGE_BLENDING_UPPER_ON = 'EDGE_BLENDING_UPPER_ON',\n    EDGE_BLENDING_UPPER_OFF = 'EDGE_BLENDING_UPPER_OFF',\n    EDGE_BLENDING_LOWER_OFF = 'EDGE_BLENDING_LOWER_OFF',\n    EDGE_BLENDING_LOWER_ON = 'EDGE_BLENDING_LOWER_ON',\n    EDGE_BLENDING_RIGHT_OFF = 'EDGE_BLENDING_RIGHT_OFF',\n    EDGE_BLENDING_RIGHT_ON = 'EDGE_BLENDING_RIGHT_ON',\n    EDGE_BLENDING_LEFT_OFF = 'EDGE_BLENDING_LEFT_OFF',\n    EDGE_BLENDING_LEFT_ON = 'EDGE_BLENDING_LEFT_ON',\n    OSD_POSITION_UPPER_LEFT = 'OSD_POSITION_UPPER_LEFT',\n    OSD_POSITION_CENTER_LEFT = 'OSD_POSITION_CENTER_LEFT',\n    OSD_POSITION_LOWER_LEFT = 'OSD_POSITION_LOWER_LEFT',\n    OSD_POSITION_TOP_CENTER = 'OSD_POSITION_TOP_CENTER',\n    OSD_POSITION_CENTER = 'OSD_POSITION_CENTER',\n    OSD_POSITION_LOWER_CENTER = 'OSD_POSITION_LOWER_CENTER',\n    OSD_POSITION_UPPER_RIGHT = 'OSD_POSITION_UPPER_RIGHT',\n    OSD_POSITION_CENTER_RIGHT = 'OSD_POSITION_CENTER_RIGHT',\n    OSD_POSITION_LOWER_RIGHT = 'OSD_POSITION_LOWER_RIGHT',\n    PROJECTOR_NAME = 'PROJECTOR_NAME',\n    NUMBER_KEY_0 = 'NUMBER_KEY_0',\n    NUMBER_KEY_1 = 'NUMBER_KEY_1',\n    NUMBER_KEY_2 = 'NUMBER_KEY_2',\n    NUMBER_KEY_3 = 'NUMBER_KEY_3',\n    NUMBER_KEY_4 = 'NUMBER_KEY_4',\n    NUMBER_KEY_5 = 'NUMBER_KEY_5',\n    NUMBER_KEY_6 = 'NUMBER_KEY_6',\n    NUMBER_KEY_7 = 'NUMBER_KEY_7',\n    NUMBER_KEY_8 = 'NUMBER_KEY_8',\n    NUMBER_KEY_9 = 'NUMBER_KEY_9',\n    LENS_POSTION_HOME = 'LENS_POSTION_HOME',\n    LENS_CALIBRATION = 'LENS_CALIBRATION',\n    LENS_SHIFT_H_SP = 'LENS_SHIFT_H_SP',\n    LENS_SHIFT_H_SN = 'LENS_SHIFT_H_SN',\n    LENS_SHIFT_H_NP = 'LENS_SHIFT_H_NP',\n    LENS_SHIFT_H_NN = 'LENS_SHIFT_H_NN',\n    LENS_SHIFT_H_FP = 'LENS_SHIFT_H_FP',\n    LENS_SHIFT_H_FN = 'LENS_SHIFT_H_FN',\n    LENS_SHIFT_V_SP = 'LENS_SHIFT_V_SP',\n    LENS_SHIFT_V_SN = 'LENS_SHIFT_V_SN',\n    LENS_SHIFT_V_NP = 'LENS_SHIFT_V_NP',\n    LENS_SHIFT_V_NN = 'LENS_SHIFT_V_NN',\n    LENS_SHIFT_V_FP = 'LENS_SHIFT_V_FP',\n    LENS_SHIFT_V_FN = 'LENS_SHIFT_V_FN',\n    LENS_FOCUS_SP = 'LENS_FOCUS_SP',\n    LENS_FOCUS_SN = 'LENS_FOCUS_SN',\n    LENS_FOCUS_NP = 'LENS_FOCUS_NP',\n    LENS_FOCUS_NN = 'LENS_FOCUS_NN',\n    LENS_FOCUS_FP = 'LENS_FOCUS_FP',\n    LENS_FOCUS_FN = 'LENS_FOCUS_FN',\n    LENS_ZOOM_SP = 'LENS_ZOOM_SP',\n    LENS_ZOOM_SN = 'LENS_ZOOM_SN',\n    LENS_ZOOM_NP = 'LENS_ZOOM_NP',\n    LENS_ZOOM_NN = 'LENS_ZOOM_NN',\n    LENS_ZOOM_FP = 'LENS_ZOOM_FP',\n    LENS_ZOOM_FN = 'LENS_ZOOM_FN',\n    BACK_COLOR_BLUE = 'BACK_COLOR_BLUE',\n    BACK_COLOR_BLACK = 'BACK_COLOR_BLACK',\n    BACK_COLOR_USER_LOGO = 'BACK_COLOR_USER_LOGO',\n    BACK_COLOR_DEFAULT_LOGO = 'BACK_COLOR_DEFAULT_LOGO',\n    PROJECTOR_ID = 'PROJECTOR_ID',\n    OSD_ON = 'OSD_ON',\n    OSD_OFF = 'OSD_OFF',\n    FREEZE_OFF = 'FREEZE_OFF',\n    FREEZE_ON = 'FREEZE_ON',\n    CEILING_MOUNT_ON ='CEILING_MOUNT_ON',\n    CEILING_MOUNT_OFF='CEILING_MOUNT_OFF',\n    STANDBY_MODE_NETWORK='STANDBY_MODE_NETWORK',\n    AUTO_SHUTDOWN_OFF='AUTO_SHUTDOWN_OFF',\n    POWER_HOG_ON='POWER_HOG_ON',\n    INPUT_SELECT_COMPUTER1 = 'INPUT_SELECT_COMPUTER1',\n    INPUT_SELECT_COMPUTER2 = 'INPUT_SELECT_COMPUTER2',\n    INPUT_SELECT_VIDEO = 'INPUT_SELECT_VIDEO',\n    INPUT_SELECT_YC = 'INPUT_SELECT_YC',\n    INPUT_SELECT_DVI = 'INPUT_SELECT_DVI',\n    INPUT_SELECT_HDMI1  = 'INPUT_SELECT_HDMI1',\n    INPUT_SELECT_HDMI2 = 'INPUT_SELECT_HDMI2',\n    INPUT_SELECT_SDI1 = 'INPUT_SELECT_SDI1',\n    INPUT_SELECT_DIGITALLINK = 'INPUT_SELECT_DIGITALLINK',\n    PROJECTOR_INSTALL_METHOD_FRONT_DESK = 'PROJECTOR_INSTALL_METHOD_FRONT_DESK',\n    PROJECTOR_INSTALL_METHOD_REAR_DESK ='PROJECTOR_INSTALL_METHOD_REAR_DESK',\n    PROJECTOR_INSTALL_METHOD_FRONT_CEILING = 'PROJECTOR_INSTALL_METHOD_FRONT_CEILING',\n    PROJECTOR_INSTALL_METHOD_REAR_CEILING='PROJECTOR_INSTALL_METHOD_REAR_CEILING',\n    PROJECTOR_INSTALL_METHOD_FRONT_AUTO = 'PROJECTOR_INSTALL_METHOD_FRONT_AUTO',\n    PROJECTOR_INSTALL_METHOD_REAR_AUTO ='PROJECTOR_INSTALL_METHOD_REAR_AUTO',\n    OSD_ROTATION_OFF = 'OSD_ROTATION_OFF',\n    OSD_ROTATION_CLOCKWISE = 'OSD_ROTATION_CLOCKWISE',\n    OSD_ROTATION_COUNTERCLOCKWISE= 'OSD_ROTATION_COUNTERCLOCKWISE',\n    LIGHT_OUTPUT = 'LIGHT_OUTPUT',\n    MACRO_WAIT = 'MACRO_WAIT',\n    MACRO_ASK = 'MACRO_ASK'\n\n\n}\n\n//export type HandleCommand = (command: ControlKeys, text?: string) => void\nexport type ControlKeys = keyof typeof ControlCommands\n\nexport enum PROJECTOR_MAKES {\n    PANASONIC = 'PANASONIC',\n    BARCO = 'BARCO'\n}\n\n\n\nexport type PROJECTOR_MAKE = keyof typeof PROJECTOR_MAKES\n\n\nexport enum ConfigHeaders{\n    LOCATION = 'LOCATION',\n    LAST_UPDATED = 'LAST_UPDATED',\n    POLLING = 'POLLING',\n    POLLING_INTERVAL = 'POLLING_INTERVAL',\n    PATCH = 'PATCH'\n    \n}\ninterface Projector{\n    ip_address: string,\n    port: number,\n    auth: string,\n    make: keyof typeof PROJECTOR_MAKES,\n    id: number\n}\nexport type Patch = Record<string,Projector>\nexport type Group = {name: string, group: number[]}\nexport type Groups = Record<number, Group>\nexport interface Config {\n    Patch: Patch,\n    Location: string,\n    LastUpdated: string,\n    Polling: boolean,\n    Polling_Interval: number,\n    Groups: Groups\n}\n\nexport type MacroLine = {cmd: ControlKeys, var: string, requestVar: boolean}\nexport type Macro = {name: string, commands: MacroLine[], key: string}\nexport type Macros = Record<string,Macro>\n\n\nexport type ConfigKeys = keyof typeof ConfigHeaders\nexport const defaultConfig: Config = {\n    Patch: {},\n    Location: '',\n    LastUpdated: Date(),\n    Polling: false,\n    Polling_Interval: 60000,\n    Groups: {0:{name:'All',group:[]}}\n}\n\nexport type HandleCommand = (cmd: ControlKeys, text?: string )=> void\n\nexport const ButtonStyle: CSSProperties={\n\n    width: '150px',\n    height: '50px',\n    marginBottom: 1\n\n}","import {Button, ButtonGroup, Paper} from '@material-ui/core'\nimport './numberpad.css'\n\nimport * as C from '../util/constants'\ninterface numberpad_props{\n    handlePad: (e: string)=>void\n}\nexport default function Numberpad(props:numberpad_props){\n    const {handlePad} =props\n    \n    const getButtons=()=>{\n     \n        return C.keys.map(key=>{\n            let w = key === C.ioCommands.STORE_GROUP? '125px' : '75px'\n            return <Button variant=\"contained\" style={{margin: 2, padding: '10px', width: w, touchAction: 'manuplation'}} size={'large'} key={key} onClick={(e)=>handlePad(key)} >{key}</Button>     \n        })\n    }\n\n    const buttonGroups=()=>{\n        let buttons = getButtons()\n        let groups =[]\n        let chunk = 3\n        for(let i=0; i<=buttons.length-chunk; i+=chunk){\n           \n            let g = buttons.slice(i,chunk+i)\n           \n            groups.push(\n                <ButtonGroup key={'pad_group'+i}>\n                   {g}\n                </ButtonGroup>\n             \n            )\n        }\n        return groups\n    }\n    return (\n        <Paper style={{touchAction: 'manuplation'}}elevation={1} className='pad'>\n            \n            {buttonGroups()}\n            {getButtons()[C.keys.length-1]}\n            \n        </Paper>\n\n    )\n}","import { Dialog, DialogTitle, Button, ButtonGroup } from \"@material-ui/core\";\nimport { CSSProperties } from \"react\";\nimport { ControlKeys, ControlCommands } from '../util/constants'\ninterface BlendDialog_Props {\n    open: boolean,\n    handleClose: () => void,\n    handleCommand: (e: ControlKeys) => void\n}\n\nexport default function BlendDialog(props: BlendDialog_Props) {\n    const { open, handleClose, handleCommand } = props\n    const buttonStyle: CSSProperties = {\n        padding: '20px',\n        width: '140px'\n\n       \n    }\n    const buttonGroupStyle: CSSProperties = {\n        justifyContent: 'center',\n        textAlign: 'center',\n        margin: 'auto'\n       \n        \n    }\n    return (\n        <Dialog key='blend_dialog'  onClose={handleClose} aria-labelledby=\"simple-dialog-title\" open={open}>\n            <DialogTitle style={buttonGroupStyle} key='menu_dialog_title' id=\"simple-dialog-title\">Blending</DialogTitle>\n            <div key='blend_div' style={{width:300, justifyContent: 'center', textAlign: 'center'}}>\n            <ButtonGroup style={buttonGroupStyle} key='blend_main_keys' variant=\"outlined\">\n                <Button style={buttonStyle} key='blend_on' onClick={(e) => handleCommand(ControlCommands.EDGE_BLENDING_ON)} >Edge Blend On</Button>\n                <Button style={buttonStyle} key='blend_off' onClick={(e) => handleCommand(ControlCommands.EDGE_BLENDING_OFF)} >Edge Blend Off</Button>\n            </ButtonGroup>\n\n            <br></br>\n\n            <ButtonGroup style={buttonGroupStyle} key='makers_main_keys' variant=\"outlined\">\n                <Button style={buttonStyle} key='markers_on' onClick={(e) => handleCommand(ControlCommands.EDGE_BLENDING_MARKERS_ON)} >Markers On</Button>\n                <Button style={buttonStyle} key='markers_off' onClick={(e) => handleCommand(ControlCommands.EDGE_BLENDING_MARKERS_OFF)} >Markers Off</Button>\n            </ButtonGroup>\n\n            <br></br>\n\n            <ButtonGroup style={buttonGroupStyle} key='upper_keys' variant=\"outlined\">\n                <Button style={buttonStyle} key='upper_on' onClick={(e) => handleCommand(ControlCommands.EDGE_BLENDING_UPPER_ON)} >Upper On</Button>\n                <Button style={buttonStyle} key='upper_off' onClick={(e) => handleCommand(ControlCommands.EDGE_BLENDING_UPPER_OFF)} >Upper Off</Button>\n            </ButtonGroup>\n\n            <ButtonGroup style={buttonGroupStyle} key='right_keys' variant=\"outlined\">\n                <Button style={buttonStyle} key='right_on' onClick={(e) => handleCommand(ControlCommands.EDGE_BLENDING_RIGHT_ON)} >Right On</Button>\n                <Button style={buttonStyle} key='right_off' onClick={(e) => handleCommand(ControlCommands.EDGE_BLENDING_RIGHT_OFF)} >Right Off</Button>\n            </ButtonGroup>\n\n            <ButtonGroup style={buttonGroupStyle} key='lower_keys' variant=\"outlined\">\n                <Button style={buttonStyle} key='lower_on' onClick={(e) => handleCommand(ControlCommands.EDGE_BLENDING_LOWER_ON)} >Lower On</Button>\n                <Button style={buttonStyle} key='lower_off' onClick={(e) => handleCommand(ControlCommands.EDGE_BLENDING_LOWER_OFF)} >Lower Off</Button>\n            </ButtonGroup>\n\n            <ButtonGroup style={buttonGroupStyle} key='left_keys' variant=\"outlined\">\n                <Button style={buttonStyle} key='left_on' onClick={(e) => handleCommand(ControlCommands.EDGE_BLENDING_LEFT_ON)} >Left On</Button>\n                <Button style={buttonStyle} key='left_off' onClick={(e) => handleCommand(ControlCommands.EDGE_BLENDING_LEFT_OFF)} >Left Off</Button>\n            </ButtonGroup>\n            </div>\n        </Dialog>\n    );\n}","import { makeStyles } from \"@material-ui/core\";\n\nexport const dropdownStyle= makeStyles((theme) => ({\n    formControl: {\n      margin: theme.spacing(1),\n      minWidth: 120,\n    },\n    selectEmpty: {\n      marginTop: theme.spacing(2),\n    },\n  }));","import { ControlKeys, ControlCommands } from '../../util/constants'\nimport { FormControl, InputLabel, Select, MenuItem, } from '@material-ui/core'\nimport { dropdownStyle } from './DropdownStyle'\n\ninterface TestPatterProps {\n    handleCommand: (e: ControlKeys) => void\n}\n\n\nconst useStyles = dropdownStyle\nexport default function Testpattern(props: TestPatterProps) {\n    const { handleCommand } = props\n    const classes = useStyles()\n\n    return (\n        <>\n            <FormControl className={classes.formControl}>\n                <InputLabel id='test_pattren'>Test Pattern</InputLabel>\n                <Select labelId='test_pattren' id='test_pattren_select'\n                    value={''} onChange={((e) => handleCommand(e.target.value as ControlKeys))}>\n                    <MenuItem value={ControlCommands.TEST_PATTERN_OFF}>Off</MenuItem>\n                    <MenuItem value={ControlCommands.TEST_PATTERN_WHITE}>White</MenuItem>\n                    <MenuItem value={ControlCommands.TEST_PATTERN_BLACK}>Black</MenuItem>\n                    <MenuItem value={ControlCommands.TEST_PATTERN_FOCUS_RED}>Focus Red</MenuItem>\n                    <MenuItem value={ControlCommands.TEST_PATTERN_FOCUS_WHITE}>Focus White</MenuItem>\n                </Select>\n\n            </FormControl>\n        </>)\n}","import { Dialog, DialogTitle, Button, ButtonGroup } from \"@material-ui/core\";\nimport { CSSProperties } from \"react\";\nimport { ControlCommands, HandleCommand } from '../util/constants'\n\nimport Testpattern from \"./CommandInterfaces/Testpattern\";\n\nconst validMenuKeys = ['0', '1', '2', '3', '4', '5', '6', '7', '8', '9','m', 'Enter', 'Backspace', 'ArrowUp', 'ArrowRight', 'ArrowLeft', 'ArrowDown'];\ninterface MenuDialog_Props {\n    open: boolean,\n    handleClose: () => void,\n    handleCommand: HandleCommand\n}\n\nexport default function MenuDialog(props: MenuDialog_Props) {\n    const { open, handleClose, handleCommand } = props\n\n    const buttonStyle: CSSProperties = {\n        padding: '20px',\n        width: '100px',\n\n    }\n    const buttonGroupStyle: CSSProperties = {\n        justifyContent: 'center',\n        textAlign: 'center'\n\n    }\n    //@ts-ignore\n    document.onkeydown = ((e) => {\n        //console.log('Key Pressed',e.key)\n        if (!open) return\n\n        let key = e.key\n        //console.log('Menu Got',key)\n        if (!validMenuKeys.includes(key)) return\n        \n        switch (key) {\n            case '0':\n                handleCommand(ControlCommands.NUMBER_KEY_0)\n                break;\n            case '1':\n                handleCommand(ControlCommands.NUMBER_KEY_1)\n                break;\n            case '2':\n                handleCommand(ControlCommands.NUMBER_KEY_2)\n                break\n            case '3':\n                handleCommand(ControlCommands.NUMBER_KEY_3)\n                break\n            case '4':\n                handleCommand(ControlCommands.NUMBER_KEY_4)\n                break\n            case '5':\n                handleCommand(ControlCommands.NUMBER_KEY_5)\n                break\n            case '6':\n                handleCommand(ControlCommands.NUMBER_KEY_5)\n                break\n            case '7':\n                handleCommand(ControlCommands.NUMBER_KEY_7)\n                break\n            case '8':\n                handleCommand(ControlCommands.NUMBER_KEY_8)\n                break\n            case '9':\n                handleCommand(ControlCommands.NUMBER_KEY_9)\n                break\n            case 'Enter':\n                handleCommand(ControlCommands.MENU_ENTER_KEY)\n                break\n            case 'Backspace':\n                handleCommand(ControlCommands.MENU_DEFAULT_KEY)\n                break\n            case 'ArrowUp':\n                handleCommand(ControlCommands.MENU_UP_KEY)\n                break\n            case 'ArrowDown':\n                handleCommand(ControlCommands.MENU_DOWN_KEY)\n                break\n            case 'ArrowLeft':\n                handleCommand(ControlCommands.MENU_LEFT_KEY)\n                break\n            case 'ArrowRight':\n                handleCommand(ControlCommands.MENU_RIGHT_KEY)\n                break\n            case 'm':\n                handleCommand(ControlCommands.MENU)\n                break\n\n        }\n\n\n\n\n\n    })\n\n    return (\n        <Dialog key='menu_dialog' onClose={handleClose} aria-labelledby=\"simple-dialog-title\" open={open}>\n            <DialogTitle style={buttonGroupStyle} key='menu_dialog_title' id=\"simple-dialog-title\">Menu Commands</DialogTitle>\n            <ButtonGroup style={buttonGroupStyle} key='menu_main_keys' variant=\"outlined\">\n                <Button style={buttonStyle} key='menu' onClick={(e) => handleCommand(ControlCommands.MENU)} >Menu</Button>\n                <Button style={buttonStyle} key='enter' onClick={(e) => handleCommand(ControlCommands.MENU_DEFAULT_KEY)} >Default</Button>\n            </ButtonGroup>\n\n            <br></br>\n\n            <ButtonGroup style={buttonGroupStyle} key='menu_row1_keys' variant=\"outlined\">\n                <Button style={buttonStyle} key='up' onClick={(e) => handleCommand(ControlCommands.MENU_UP_KEY)} >Up</Button>\n            </ButtonGroup>\n\n            <ButtonGroup style={buttonGroupStyle} key='menu_row2_keys' variant=\"outlined\">\n                <Button style={buttonStyle} key='left' onClick={(e) => handleCommand(ControlCommands.MENU_LEFT_KEY)} >Left</Button>\n                <Button style={buttonStyle} key='enter' onClick={(e) => handleCommand(ControlCommands.MENU_ENTER_KEY)} >Enter</Button>\n                <Button style={buttonStyle} key='right' onClick={(e) => handleCommand(ControlCommands.MENU_RIGHT_KEY)} >Right</Button>\n            </ButtonGroup>\n\n            <ButtonGroup style={buttonGroupStyle} key='menu_row3_keys' variant=\"outlined\">\n                <Button style={buttonStyle} key='down' onClick={(e) => handleCommand(ControlCommands.MENU_DOWN_KEY)} >Down</Button>\n            </ButtonGroup>\n\n            <ButtonGroup style={buttonGroupStyle} key='menu_row4_keys' variant=\"outlined\">\n                <Button style={buttonStyle} key='osd on' onClick={(e) => handleCommand(ControlCommands.OSD_ON)}>OSD ON</Button>\n                <Button style={buttonStyle} key='osd off' onClick={(e) => handleCommand(ControlCommands.OSD_OFF)}>OSD OFF</Button>\n                <Button style={buttonStyle} key='freeze on' onClick={(e) => handleCommand(ControlCommands.FREEZE_ON)}>Freeze ON</Button>\n                <Button style={buttonStyle} key='freeze off' onClick={(e) => handleCommand(ControlCommands.FREEZE_OFF)}>Freeze Off</Button>\n            </ButtonGroup>\n\n\n            <Testpattern handleCommand={handleCommand} />\n\n\n        </Dialog>\n    );\n}\n\n/*\n\n            <ButtonGroup style={buttonGroupStyle} key='ceiling_mount_keys' variant='outlined'>\n                <Button style={buttonStyle} key='ceiling_mount_on' onClick={(e)=>handleCommand(ControlCommands.CEILING_MOUNT_ON)}>Ceiling On</Button>\n                <Button style={buttonStyle} key='ceiling_mount_off' onClick={(e)=>handleCommand(ControlCommands.CEILING_MOUNT_OFF)}>Ceiling Off</Button>\n            </ButtonGroup>\n            <ButtonGroup style={buttonGroupStyle} key='ceiling_mount_keys' variant='outlined'>\n                <Button style={buttonStyle} key='power_hog' onClick={(e)=>handleCommand(ControlCommands.POWER_HOG_ON)}>Barco POWER HOG</Button>\n\n            </ButtonGroup>\n            */","import {Button, Dialog, DialogActions, DialogTitle, DialogContent, DialogContentText } from \"@material-ui/core\";\nimport { ControlKeys } from \"../util/constants\";\ninterface Alert_Props{\n    open: boolean,\n    handleCommand: (cmd: ControlKeys)=>void,\n    handleClose: ()=>void,\n    command: ControlKeys,\n    header: string,\n    message: string\n}\nexport default function Alert(props: Alert_Props){\n    const {open,handleCommand, command, handleClose, header, message} = props\n\n    const handleClick=(approval: boolean)=>{\n        if(approval){\n            handleCommand(command)\n        }\n        handleClose()\n\n    }\n    return (\n        <Dialog\n        open={open}\n        onClose={handleClose}\n        aria-labelledby=\"alert-dialog-title\"\n        aria-describedby=\"alert-dialog-description\"\n      >\n        <DialogTitle id=\"alert-dialog-title\">{header}</DialogTitle>\n        <DialogContent>\n          <DialogContentText id=\"alert-dialog-description\">\n            <span style={{width:'50'}}>{message}</span>\n          </DialogContentText>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={(e)=>handleClick(false)} color=\"primary\">\n            Cancle\n          </Button>\n          <Button onClick={(e)=>handleClick(true)} color=\"primary\" autoFocus>\n            Okay\n          </Button>\n        </DialogActions>\n      </Dialog>\n        \n    )\n}","import { ButtonGroup, Button } from \"@material-ui/core\";\nimport { useState } from \"react\";\nimport { ControlKeys, ControlCommands, ButtonStyle } from \"../../util/constants\";\nimport Alert from \"../Alert\";\n\ninterface Props{\n    handleCommand: (e: ControlKeys) => void\n}\nexport default function LensCal(props: Props){\n    const {handleCommand} = props\n    const [openHomeAlert, setOpenHomeAlert]= useState(false)\n    const [openCalAlert, setOpenCalAlert]= useState(false)\n    return(\n        <div style={{margin:'auto'}}>\n        <ButtonGroup key='shutters' color=\"primary\" variant=\"outlined\">\n        <Button  key='home'  style={ButtonStyle}  onClick={(e) => setOpenHomeAlert(true)} >Lens Home</Button>\n        <Button  key='cal' style={ButtonStyle}  onClick={(e) => setOpenCalAlert(true)} >Lens Cal</Button>\n    </ButtonGroup>\n    <Alert open={openHomeAlert} handleCommand={handleCommand} handleClose={()=>setOpenHomeAlert(false)}\n        header='Home Lense' message='Are you sure?' command={ControlCommands.LENS_POSTION_HOME}/>\n        <Alert open={openCalAlert} handleCommand={handleCommand} handleClose={()=>setOpenCalAlert(false)}\n        header='Cal Lens' message='Are you sure?' command={ControlCommands.LENS_POSTION_HOME}/>\n        </div>\n    )\n}","import { Dialog, DialogTitle, Button, ButtonGroup, Accordion, AccordionSummary, Typography, AccordionDetails, Container } from \"@material-ui/core\";\nimport ExpandMore from \"@material-ui/icons/ExpandMore\";\nimport { CSSProperties, useState } from \"react\";\nimport { ControlKeys, ControlCommands } from '../util/constants'\nimport LensCal from \"./CommandInterfaces/LensCal\";\ninterface MenuDialog_Props {\n    open: boolean,\n    handleClose: () => void,\n    handleCommand: (e: ControlKeys) => void\n}\n\nexport default function MenuDialog(props: MenuDialog_Props) {\n    const { open, handleClose, handleCommand } = props\n    const [shift, setShift] =useState(false)\n    const [focus, setFocus] = useState(false)\n    const [zoom, setZoom] = useState(false)\n   \n    const buttonStyle: CSSProperties = {\n        padding: '20px',\n        width: '50px',\n        touchAction: 'manipulation'\n       \n    }\n    const buttonGroupStyle: CSSProperties = {\n        justifyContent: 'center',\n        textAlign: 'center'\n        \n    }\n    const close=()=>{\n        setShift(false)\n        setZoom(false)\n        setFocus(false)\n        handleClose()\n    }\n    const getButton=(cmd: ControlKeys, text: string)=>{\n        return <Button style={buttonStyle} key={text} onClick={(e)=>handleCommand(cmd)}>{text}</Button>\n    }\n    return (\n        <Dialog key='lens_dialog' onClose={close} aria-labelledby=\"simple-dialog-title\" open={open}>\n            <DialogTitle style={buttonGroupStyle} key='menu_dialog_title' id=\"simple-dialog-title\">Lens Commands</DialogTitle>\n            <LensCal handleCommand={handleCommand} />\n            <Accordion key=\"shift\" style={{width:'100%'}} expanded={shift} onChange={()=>setShift(!shift)}>\n                <AccordionSummary expandIcon={<ExpandMore/>} aria-controls='shift' id='shift-panel' >\n                    <Typography> Shift</Typography>\n                </AccordionSummary>\n                <AccordionDetails>\n                    <Container style={{width: '70%', marginLeft: '0', paddingLeft:'0'}}>\n            <ButtonGroup style={buttonGroupStyle} key='h_shif' variant=\"outlined\">\n            {getButton(ControlCommands.LENS_SHIFT_H_FN, '<<<')}\n            {getButton(ControlCommands.LENS_SHIFT_H_NN, '<<')}\n            {getButton(ControlCommands.LENS_SHIFT_H_SN, '<')}\n                {getButton(ControlCommands.LENS_SHIFT_H_SP, '>')}\n                {getButton(ControlCommands.LENS_SHIFT_H_NP, '>>')}\n                {getButton(ControlCommands.LENS_SHIFT_H_FP, '>>>')}\n            </ButtonGroup>\n           \n            <br></br>\n          \n            <ButtonGroup style={buttonGroupStyle} key='v_shift' variant=\"outlined\">\n            {getButton(ControlCommands.LENS_SHIFT_V_FN, '^^^')}\n            {getButton(ControlCommands.LENS_SHIFT_V_NN, '^^')}\n            {getButton(ControlCommands.LENS_SHIFT_V_SN, '^')}\n                {getButton(ControlCommands.LENS_SHIFT_V_SP, 'v')}\n                {getButton(ControlCommands.LENS_SHIFT_V_NP, 'vv')}\n                {getButton(ControlCommands.LENS_SHIFT_V_FP, 'vvv')}\n            </ButtonGroup>\n            </Container>\n            </AccordionDetails>\n            </Accordion>\n            <br></br>\n            <Accordion key=\"shift\" expanded={focus} onChange={()=>setFocus(!focus)}>\n                <AccordionSummary expandIcon={<ExpandMore/>} aria-controls='focus' id='focus-panel' >\n                    <Typography> Focus</Typography>\n                </AccordionSummary>\n                <AccordionDetails>\n                <Container style={{width: '70%', marginLeft: '0', paddingLeft:'0'}}>\n            <ButtonGroup style={buttonGroupStyle} key='foucs' variant=\"outlined\">\n            {getButton(ControlCommands.LENS_FOCUS_FN, '<<<\\r')}\n            {getButton(ControlCommands.LENS_FOCUS_NN, '<<\\r')}\n            {getButton(ControlCommands.LENS_FOCUS_SN, '<\\r')}\n            {getButton(ControlCommands.LENS_FOCUS_SP, '>\\r')}\n            {getButton(ControlCommands.LENS_FOCUS_NP, '>>\\r')}\n            {getButton(ControlCommands.LENS_FOCUS_FP, '>>>\\r')}\n            </ButtonGroup>\n            </Container>\n            </AccordionDetails>\n            </Accordion>\n            <br></br>\n            <Accordion key=\"zoom\" expanded={zoom} onChange={()=>setZoom(!zoom)}>\n                <AccordionSummary expandIcon={<ExpandMore/>} aria-controls='zoom' id='zoom-panel' >\n                    <Typography> Zoom</Typography>\n                </AccordionSummary>\n                <AccordionDetails>\n                <Container style={{width: '70%', marginLeft: '0', paddingLeft:'0'}}>\n            <ButtonGroup style={buttonGroupStyle} key='zoom' variant=\"outlined\">\n            {getButton(ControlCommands.LENS_ZOOM_FN, '---')}\n            {getButton(ControlCommands.LENS_ZOOM_NN, '--')}\n            {getButton(ControlCommands.LENS_ZOOM_SN, '-')}\n            {getButton(ControlCommands.LENS_ZOOM_SP, '+')}\n            {getButton(ControlCommands.LENS_ZOOM_NP, '++')}\n            {getButton(ControlCommands.LENS_ZOOM_FP, '+++')}\n            </ButtonGroup>\n            </Container>\n            </AccordionDetails>\n            </Accordion>\n\n\n        </Dialog>\n    );\n}","import { ButtonGroup, Button } from \"@material-ui/core\";\nimport { useState } from \"react\";\nimport { ControlKeys, ControlCommands, ButtonStyle } from \"../../util/constants\";\nimport Alert from \"../Alert\";\n\ninterface PowerProps{\n    handleCommand: (e: ControlKeys) => void\n}\nexport default function Power(props: PowerProps){\n    const {handleCommand} = props\n    const [openPowerOnAlert, setOpenPowerOnAlert]= useState(false)\n    const [openPowerOffAlert, setOpenPowerOffAlert]= useState(false)\n    return(\n        <>\n        <ButtonGroup key='shutters' color=\"primary\" variant=\"outlined\">\n        <Button  key='power off'  style={ButtonStyle}  onClick={(e) => setOpenPowerOffAlert(true)} >Power Off</Button>\n        <Button  key='power on' style={ButtonStyle}  onClick={(e) => setOpenPowerOnAlert(true)} >Power On</Button>\n    </ButtonGroup>\n    <Alert open={openPowerOffAlert} handleCommand={handleCommand} handleClose={()=>setOpenPowerOffAlert(false)}\n        header='Power Off' message='Are you sure?' command={ControlCommands.POWER_OFF}/>\n        <Alert open={openPowerOnAlert} handleCommand={handleCommand} handleClose={()=>setOpenPowerOnAlert(false)}\n        header='Power On' message='Are you sure?' command={ControlCommands.POWER_ON}/>\n        </>\n    )\n}","import { ButtonGroup, Button } from \"@material-ui/core\"\nimport { ControlKeys, ControlCommands, ButtonStyle } from \"../../util/constants\"\n\ninterface ShutterProps{\n    handleCommand: (e: ControlKeys) => void\n}\nexport default function Shutter(props: ShutterProps){\n    const {handleCommand} = props\n    return (\n        <ButtonGroup key='power' color=\"primary\" variant=\"outlined\">\n        <Button  key='shutter_on' style={ButtonStyle} onClick={(e) => handleCommand(ControlCommands.SHUTTER_CLOSED)} >Shutter Closed(i)</Button>\n        <Button  key='sutter_off' style={ButtonStyle}  onClick={(e) => handleCommand(ControlCommands.SHUTTER_OPEN)} >Shutter Open(o)</Button>\n        </ButtonGroup>\n    )\n}","import {ControlKeys, ControlCommands} from '../../util/constants'\nimport {FormControl, InputLabel, Select, MenuItem} from '@material-ui/core'\nimport { dropdownStyle } from './DropdownStyle'\n\ninterface Props{\n    handleCommand: (e: ControlKeys) => void\n}\n\n\nconst useStyles = dropdownStyle\nexport default function BackColor(props: Props){\n    const {handleCommand} = props\n    const classes = useStyles()\n\n    return (\n        <>\n    <FormControl className={classes.formControl}>\n    <InputLabel id='backcolor'>Back Color</InputLabel>\n    <Select labelId='backcolor' id='backcolor'\n     value={''} onChange={((e)=> handleCommand(e.target.value as ControlKeys))}>\n         <MenuItem value={ControlCommands.BACK_COLOR_BLUE}>Blue</MenuItem>\n         <MenuItem value={ControlCommands.BACK_COLOR_BLACK}>Black</MenuItem>\n         <MenuItem value={ControlCommands.BACK_COLOR_DEFAULT_LOGO}>Default Logo</MenuItem>\n         <MenuItem value={ControlCommands.BACK_COLOR_USER_LOGO}>User Logo</MenuItem>\n     </Select>\n     \n</FormControl>\n</> )\n}","import {ControlKeys, ControlCommands} from '../../util/constants'\nimport {FormControl, InputLabel, Select, MenuItem} from '@material-ui/core'\nimport { dropdownStyle } from './DropdownStyle'\n\ninterface Props{\n    handleCommand: (e: ControlKeys) => void\n}\n\n\nconst useStyles = dropdownStyle\nexport default function InputSelection(props: Props){\n    const {handleCommand} = props\n    const classes = useStyles()\n\n    return (\n        <>\n    <FormControl key='input_fc' className={classes.formControl}>\n    <InputLabel key='input_il' id='input'>Input</InputLabel>\n    <Select key='input_select' labelId='input' id='input'\n     value={''} onChange={((e)=> handleCommand(e.target.value as ControlKeys))}>\n         <MenuItem key='inhdmi1' value={ControlCommands.INPUT_SELECT_HDMI1}>HDMI 1</MenuItem>\n         <MenuItem key='inhdmi2' value={ControlCommands.INPUT_SELECT_HDMI2}>HDMI 2</MenuItem>\n         <MenuItem key='inc1' value={ControlCommands.INPUT_SELECT_COMPUTER1}>Computer 1</MenuItem>\n         <MenuItem key='inc2' value={ControlCommands.INPUT_SELECT_COMPUTER2}>Compuer 2</MenuItem>\n         <MenuItem key='indl' value={ControlCommands.INPUT_SELECT_DIGITALLINK}>Digital Link</MenuItem>\n         <MenuItem key='indvi' value={ControlCommands.INPUT_SELECT_DVI}>DVI</MenuItem>\n         <MenuItem key='insdi1' value={ControlCommands.INPUT_SELECT_SDI1}>SDI 1</MenuItem>\n         <MenuItem key='invid' value={ControlCommands.INPUT_SELECT_VIDEO}>Video</MenuItem>\n         <MenuItem key='inyc' value={ControlCommands.INPUT_SELECT_YC}>Y/C</MenuItem>\n     </Select>\n     \n</FormControl>\n</> )\n}","import {ControlKeys, ControlCommands} from '../../util/constants'\nimport {FormControl, InputLabel, Select, MenuItem} from '@material-ui/core'\nimport { dropdownStyle } from './DropdownStyle'\n\ninterface OSDProps{\n    handleCommand: (e: ControlKeys) => void\n}\n\n\nconst useStyles = dropdownStyle\nexport default function OSDPostion(props: OSDProps){\n    const {handleCommand} = props\n    const classes = useStyles()\n\n    return (\n        <>\n    <FormControl className={classes.formControl}>\n    <InputLabel id='osd_position'>OSD Position</InputLabel>\n    <Select labelId='osd_position' id='osd_postion'\n     value={''} onChange={((e)=> handleCommand(e.target.value as ControlKeys))}>\n         <MenuItem value={ControlCommands.OSD_POSITION_UPPER_LEFT}>Upper Left</MenuItem>\n         <MenuItem value={ControlCommands.OSD_POSITION_CENTER_LEFT}>Center Left</MenuItem>\n         <MenuItem value={ControlCommands.OSD_POSITION_LOWER_LEFT}>Lower Left</MenuItem>\n         <MenuItem value={ControlCommands.OSD_POSITION_TOP_CENTER}>Top Center</MenuItem>\n         <MenuItem value={ControlCommands.OSD_POSITION_CENTER}>Center</MenuItem>\n         <MenuItem value={ControlCommands.OSD_POSITION_LOWER_CENTER}>Lower Center</MenuItem>\n         <MenuItem value={ControlCommands.OSD_POSITION_UPPER_RIGHT}>Upper Right</MenuItem>\n         <MenuItem value={ControlCommands.OSD_POSITION_LOWER_RIGHT}>Lower Right</MenuItem>\n     </Select>\n     \n</FormControl>\n</> )\n}","import {ControlKeys, ControlCommands, HandleCommand} from '../../util/constants'\nimport {FormControl, InputLabel, Select, MenuItem} from '@material-ui/core'\nimport { dropdownStyle } from './DropdownStyle'\n\ninterface Props{\n    handleCommand: HandleCommand\n}\n\n\nconst useStyles = dropdownStyle\nexport default function OSDRotation(props: Props){\n    const {handleCommand} = props\n    const classes = useStyles()\n\n    return (\n        <>\n    <FormControl className={classes.formControl}>\n    <InputLabel id='osdRotation'>OSD Rotation</InputLabel>\n    <Select labelId='osdRotation' id='osdRotation'\n     value={''} onChange={((e)=> handleCommand(e.target.value as ControlKeys))}>\n         <MenuItem value={ControlCommands.OSD_ROTATION_OFF}>Off</MenuItem>\n         <MenuItem value={ControlCommands.OSD_ROTATION_CLOCKWISE}>Clockwise</MenuItem>\n         <MenuItem value={ControlCommands.OSD_ROTATION_COUNTERCLOCKWISE}>Counter Clockwise</MenuItem>\n     </Select>\n     \n</FormControl>\n</> )\n}","import {ControlKeys, ControlCommands} from '../../util/constants'\nimport {FormControl, InputLabel, Select, MenuItem} from '@material-ui/core'\nimport { dropdownStyle } from './DropdownStyle'\n\ninterface OSDProps{\n    handleCommand: (e: ControlKeys) => void\n}\n\n\nconst useStyles = dropdownStyle\nconst id = 'pj_postion'\nexport default function PJPositon(props: OSDProps){\n    const {handleCommand} = props\n    const classes = useStyles()\n    \n    return (\n        <>\n    <FormControl className={classes.formControl}>\n    <InputLabel id={id}>PJ Position</InputLabel>\n    <Select labelId={id} id={id}\n     value={''} onChange={((e)=> handleCommand(e.target.value as ControlKeys))}>\n         <MenuItem key='fa' value={ControlCommands.PROJECTOR_INSTALL_METHOD_FRONT_AUTO}>Front/Auto</MenuItem>\n         <MenuItem key='fc' value={ControlCommands.PROJECTOR_INSTALL_METHOD_FRONT_CEILING}>Front/Ceiling</MenuItem>\n         <MenuItem key='fd' value={ControlCommands.PROJECTOR_INSTALL_METHOD_FRONT_DESK}>Front/Desk</MenuItem>\n         <MenuItem key='ra' value={ControlCommands.PROJECTOR_INSTALL_METHOD_REAR_AUTO}>Rear/Auto</MenuItem>\n         <MenuItem key='rc' value={ControlCommands.PROJECTOR_INSTALL_METHOD_REAR_CEILING}>Rear/Ceiling</MenuItem>\n         <MenuItem key='rd' value={ControlCommands.PROJECTOR_INSTALL_METHOD_REAR_DESK}>Rear/Desk</MenuItem>\n     </Select>\n     \n</FormControl>\n</> )\n}","import { Box, Slider,Typography } from \"@material-ui/core\";\nimport { ChangeEvent, useState } from \"react\";\nimport { ControlKeys, HandleCommand } from \"../../util/constants\";\n\ninterface slider_props{\n    handleCommand: HandleCommand\n    cmd: ControlKeys\n    min: number\n    max: number\n    label: string\n}\nexport default function QuickSlider(props: slider_props){\n    const {handleCommand,cmd, min,max, label}=props\n    const [value, setValue] =useState(max)\n    const handleChange=(event: ChangeEvent<{}>, newValue: number | number[])=>{\n        console.log('sliddder',newValue)\n        setValue(newValue as number)\n        handleCommand(cmd,newValue+'')\n\n    }\n    return(\n    <Box style={{width:200}}>\n        <Typography id=\"input-slider\" gutterBottom>\n        {label}\n      </Typography>\n        <Slider value={value} min={min} max={max} onChange={handleChange}/>\n    </Box>\n\n    )\n}","import { Dialog, DialogTitle, Button, TextField, Container, Fade } from \"@material-ui/core\";\nimport { CSSProperties, useState, useEffect } from \"react\";\nimport { ControlKeys, ControlCommands, HandleCommand, PJ_OBJ } from '../util/constants'\nimport BackColor from \"./CommandInterfaces/BackColor\";\nimport InputSelection from \"./CommandInterfaces/InputSelection\";\nimport OSDPostion from \"./CommandInterfaces/OSDPostion\";\nimport OSDRotation from \"./CommandInterfaces/OSDRotation\";\nimport PJPositon from \"./CommandInterfaces/PJPostion\";\nimport QuickSlider from \"./CommandInterfaces/QuickSlider\";\ninterface Props {\n    open: boolean,\n    handleClose: () => void,\n    handleCommand: HandleCommand,\n    active: number[],\n    pj: PJ_OBJ\n}\n\nexport default function ProjectorSetup(props: Props) {\n    const { open, handleClose, handleCommand, pj, active } = props\n    const [name, setName] = useState( '' )\n    const [ID, setID] = useState('')\n    const buttonStyle: CSSProperties = {\n        padding: '20px',\n        width: '100px',\n        margin: 'auto'\n       \n    }\n    const buttonGroupStyle: CSSProperties = {\n        justifyContent: 'center',\n        textAlign: 'center'\n        \n    }\n\n    useEffect(()=>{\n        if(pj && pj.name){\n            setName(pj.name)\n        }\n    },[pj])\n   \n\n\n    const handleClick=(cmd: ControlKeys)=>{\n        switch (cmd){\n            case ControlCommands.PROJECTOR_NAME:\n                handleCommand(cmd, name)\n                break\n            case ControlCommands.PROJECTOR_ID:\n                handleCommand(cmd, ID)\n                break;\n        }\n       \n        handleClose()\n    }\n    \n    const getButton=(cmd: ControlKeys, text: string, popUp: boolean)=>{\n\n        return <Button style={buttonStyle} key={text} onClick={(e)=>handleClick(cmd)}>{text}</Button>\n    }\n    return (\n        <Dialog key='setup_dialog' onClose={handleClose} aria-labelledby=\"simple-dialog-title\" open={open} >\n            <DialogTitle style={buttonGroupStyle} key='menu_dialog_title' id=\"simple-dialog-title\">PJ Setup</DialogTitle>\n            <span style={{width:300}}/>\n        <OSDPostion handleCommand={handleCommand}/>   \n        <OSDRotation handleCommand={handleCommand}/>\n        <PJPositon handleCommand={handleCommand}/> \n        <BackColor handleCommand={handleCommand}/>\n        <InputSelection handleCommand={handleCommand}/>\n        <QuickSlider handleCommand={handleCommand} min={50} max={1000} cmd={ControlCommands.LIGHT_OUTPUT} label='Light Output'/>\n        {active.length ===1?<>\n        <Container key='name'>    \n            <TextField key='pj_name_input' label='PJ Name' value={name} onChange={(e)=>setName(e.target.value)}></TextField>\n            {getButton(ControlCommands.PROJECTOR_NAME, 'Store Name', true)}\n        </Container>    \n        <Container key='id'>\n            <TextField key='pj_id' label='PJ ID' value={ID} onChange={(e)=>setID(e.target.value)}></TextField>\n            {getButton(ControlCommands.PROJECTOR_ID, 'Store ID', true)}\n        </Container>\n        </>:<></>}\n        \n        </Dialog>\n    );\n}","import { ioCommands, Macro } from \"./constants\";\nimport {socket} from '../LoadPage'\n\nfunction send(cmd: ioCommands, item: any){\n    if(socket){\n        socket.emit(cmd,item)\n    }\n}\nexport function sendNewMacro(macro:Macro){\n        send(ioCommands.NEW_MACRO,macro) \n}\nexport function sendUpdatedMacro(macro:Macro){\n    send(ioCommands.UPDATE_MACRO,macro)\n}\nexport function deleteMacro(key:string){\n    send(ioCommands.DELETE_MACRO,key)\n}","import { AppBar, Button, Checkbox, Grid, IconButton, List, ListItem, ListItemIcon, ListItemText, makeStyles, Paper, TextField, Toolbar, Typography } from \"@material-ui/core\";\nimport { useEffect, useState } from \"react\";\nimport { ControlCommands, ControlKeys, Macro, MacroLine } from \"../util/constants\"\n\nimport ReoderIcon from '@material-ui/icons/Reorder';\nimport DeleteIcon from '@material-ui/icons/Delete'\nimport CloseIcon from '@material-ui/icons/Close';\n\n\nconst commands = () => {\n  let a: string[] = []\n  for (let i in ControlCommands) {\n    //i.replaceAll('_',' ')\n    a.push(i)\n  }\n  return a\n}\n\nconst useStyles = makeStyles((theme) => ({\n  appBar: {\n    position: 'relative',\n  },\n  title: {\n    marginLeft: theme.spacing(2),\n    flex: 1,\n  },\n  root: {\n    '& .MuiTextField-root': {\n      margin: theme.spacing(1),\n      width: '25ch',\n    },\n  },\n}));\ninterface props{\n  handleClose: ()=>void\n  saveMacro:(macro: Macro)=>void,\n  macro: Macro | undefined\n}\nexport default function MacroEditDialog(props:props) {\n  const {handleClose, saveMacro, macro} = props\n  const [move, setMove] = useState<number>(-1);\n  const [hover, setHover]= useState<number>(-1);\n  const [search, setSearch] = useState('')\n  const [left, setLeft] = useState(commands())\n\n  let r: MacroLine[] = []\n  let n = ''\n  let key: string = ''\n  if(macro){\n    r = macro.commands\n    n = macro.name\n    key = macro.key\n\n  }\n  const [right, setRight] = useState<MacroLine[]>(r);\n  const [macroName, setMacroName] = useState(n)\n  \n  const classes = useStyles();\n  \n  const handleSave=()=>{\n    saveMacro({name: macroName,commands: right, key})\n    handleClose()\n  }\n\n  const handleSearch=(searchValue:string)=>{\n    if(searchValue === ''){\n      setLeft(commands())\n      setSearch(searchValue)\n      return \n    }\n  \n    let searchString= searchValue.toUpperCase()\n    let newLeft = left.slice()\n    \n    newLeft = newLeft.filter(i=>{\n      return i.includes(searchString)\n    })\n    setLeft(newLeft)\n    setSearch(searchValue)\n\n  }\n  const removeItem=(index: number)=>{\n    let newRight = right.slice()\n    newRight.splice(index,1)\n    setRight(newRight)\n  }\n\n  const handleMove=()=>{\n    console.log('Right',right)\n    console.log('Moving',move, 'above',hover)\n    if(move < -1 || hover < -1) return \n    if(move === hover) return\n    //But move on bottom\n    let itemToMove = right[move]\n    //let newRight = right.splice(move,1)\n    let newRight = right.slice()\n    newRight.splice(move,1)\n    console.log('Removed move', newRight)\n    \n    if(hover ===right.length ){\n     \n      newRight.push(itemToMove)\n    } else{\n     // newRight.splice(move,1)\n\n      newRight.splice(hover,0,itemToMove)\n    }\n    console.log('New Right',newRight)\n    setRight(newRight)\n    setMove(-1)\n    setHover(-1)\n  }\n\n  const addToRight = (value: ControlKeys) => {\n   // let rightMax=Object.values(right).length\n    let newCMD: MacroLine = {cmd: value, var: '', requestVar: false}\n    setRight(right=>[...right, newCMD])\n    console.log(right)\n  }\n \n  const leftList = () => {\n    return (\n      //@ts-ignore\n      <Paper style={{ width: '220', maxHeight: '80vh', overflow: 'auto' }}>\n        <Typography> Command List</Typography>\n         <TextField id=\"outlined-basic\" autoComplete='off' label=\"Command Search\" variant=\"standard\" style={{width: '100%'}} value={search} onChange={(e)=>{handleSearch(e.target.value)}}/>\n        <List dense component=\"div\" role=\"list\">\n          {left.map((value) => {\n            const labelId = `transfer-list-item-${value}-label`;\n\n            return (\n              <ListItem\n                key={value}\n                role=\"listitem\"\n                button\n                onClick={() => addToRight(value as ControlKeys)}\n                style={{fontSize: 12}}\n              >\n\n                <ListItemText id={labelId} primary={value} />\n              </ListItem>\n            );\n          })}\n          <ListItem style={{width:400}}> </ListItem>\n          <ListItem />\n        </List>\n      </Paper>\n    )\n  }\n  const getRight=()=>{\n    let i = 0\n    return right.map((value) => {\n      return listItem(value,i++)\n    })\n  }\n  const handleVarInput=(cmdIndex:number, v:string)=>{\n    let newRight = right.slice()\n    newRight[cmdIndex].var=v\n    setRight(newRight)\n  }\n  const handleVarCheck=(cmdIndex:number)=>{\n    let newRight = right.slice()\n    newRight[cmdIndex].requestVar = !newRight[cmdIndex].requestVar\n    setRight(newRight)\n  }\n  const listItem=(value: MacroLine, i: number)=>{\n    const labelId = `transfer-list-item-${value.cmd+i}-label`;\n    const getStyle = ()=>{\n      if(i===move)\n      return {background: 'gray'}\n      if(i===hover)\n      return {background: '#aaaaaa'}\n    }\n    return(\n      <ListItem\n      key={value.cmd+i}\n      role=\"listitem\"\n      style={getStyle()}\n      onMouseOver={()=>{if(move!==-1 && move !==i)setHover(i)}}\n    >\n      <ListItemIcon>\n        <ReoderIcon onMouseDown={()=>setMove(i)} onMouseUp={()=>{handleMove()}}/>\n      </ListItemIcon>\n      <ListItemText id={labelId} style={{width: 350}}primary={value.cmd}/>\n      <TextField style={{width:100}} value={value.var} onChange={(e)=>handleVarInput(i,e.target.value)}/> \n      <Checkbox checked={value.requestVar} onChange={()=>handleVarCheck(i)}/>\n      <DeleteIcon onClick={()=>removeItem(i)}/>\n    </ListItem>\n    )\n  }\n  const placeHolderRight=()=>{\n    return(\n      <ListItem style={{width:600}}>\n        <ListItemText id={'helperText'} primary={'Click on Commands in Left Column to Build Macro'} />\n      </ListItem>\n    )\n  }\n  const rightList = () => {\n   \n    return (\n      //@ts-ignore\n    \n      <Paper  sx={{ maxHeight:'80vh', overflow: 'auto' }}>\n        <List dense component=\"div\" role=\"list\">\n          <ListItem> Selected Values</ListItem>\n          {right.length< 1? placeHolderRight(): getRight()}\n          <ListItem />\n        </List>\n      </Paper>\n    )\n  }\n\n  const getGrid=()=>{\n  return (\n    //@ts-ignore\n    <Grid container spacing={1} justifyContent=\"center\" alignItems=\"top\" overflow=\"auto\" >\n      <Grid item>{leftList()}</Grid>\n      \n      <Grid item>{rightList()}</Grid>\n    </Grid>\n  )}\n\n  return(\n    <div>\n       <AppBar className={classes.appBar}>\n          <Toolbar style={{ paddingBottom: 0, marginBottom: 0, height: 30}}>\n            <IconButton edge=\"start\" color=\"inherit\" onClick={handleClose} aria-label=\"close\">\n              <CloseIcon />\n            </IconButton>\n            <Typography variant=\"h6\" className={classes.title}>\n              Macro Editor {key}\n            </Typography>\n           \n            <Button autoFocus color=\"inherit\" type={'submit'} onClick={()=>handleSave()} disabled={right.length<1}>\n              Save\n            </Button>\n           \n          </Toolbar>\n        </AppBar>\n      <br/>\n      <TextField id=\"outlined-basic\" autoComplete={'off'} label=\"Macro Name\" variant=\"outlined\" value={macroName} onChange={(e)=>{setMacroName(e.target.value)}}/>\n      \n      {getGrid()}\n    </div>\n  )\n\n}","import {Button, Dialog, DialogActions, DialogTitle, DialogContent, DialogContentText, TextField } from \"@material-ui/core\";\nimport { useEffect, useState } from \"react\";\ninterface Alert_Props{\n    open: boolean,\n    handleInput: (text: string)=>void,\n    handleClose: ()=>void,\n    header: string,\n    message: string,\n    startText: string | undefined\n}\nexport default function Alert(props: Alert_Props){\n    const {open,handleInput, handleClose, header, message ,startText} = props\n    const [text, setText] = useState('')\n\n    useEffect(()=>{\n      if(startText)\n      setText(startText)\n    },[startText])\n\n    const handleClick=(approval: boolean)=>{\n        if(approval){\n            handleInput(text)\n        }\n        handleClose()\n        setText('')\n\n    }\n    return (\n        <Dialog\n        open={open}\n        onClose={handleClose}\n        aria-labelledby=\"alert-dialog-title\"\n        aria-describedby=\"alert-dialog-description\"\n      >\n        <DialogTitle id=\"alert-dialog-title\">{header}</DialogTitle>\n        <DialogContent>\n          <DialogContentText id=\"alert-dialog-description\">\n            <span style={{width:'50'}}>{message}</span>\n          </DialogContentText>\n        </DialogContent>\n        <DialogActions>\n          <TextField value={text} onChange={(e)=>setText(e.target.value)}></TextField>\n          <Button onClick={(e)=>handleClick(false)} color=\"primary\">\n            Cancle\n          </Button>\n          <Button onClick={(e)=>handleClick(true)} color=\"primary\" autoFocus>\n            Okay\n          </Button>\n        </DialogActions>\n      </Dialog>\n        \n    )\n}","import { Button,  Dialog, DialogTitle,Menu, MenuItem, TextField } from \"@material-ui/core\"\nimport {  useEffect, useRef, useState } from \"react\"\nimport { ControlKeys, HandleCommand, ioCommands, Macro, MacroLine, Macros } from \"../util/constants\"\nimport * as SocketSender from '../util/SocketSender'\n\nimport EditIcon from '@material-ui/icons/Edit';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport MacroEditDialog from \"./MacroEditDialog\";\nimport SettingsIcon from \"@material-ui/icons/Settings\";\nimport InputPopup from \"./InputPopup\";\n\ninterface macroInput_props {\n    open: boolean\n    cmd: string\n    handleInput: (str: string) => void\n}\nfunction MacroInput(props: macroInput_props) {\n    const { open, cmd, handleInput } = props\n    const [input, setInput] = useState('')\n\n    const handleSave = () => {\n        handleInput(input)\n        setInput('')\n\n    }\n    return (\n        <Dialog open={open}>\n            <DialogTitle>{cmd}</DialogTitle>\n            <TextField value={input} onChange={(e) => { setInput(e.target.value) }}></TextField>\n            <Button onClick={() => handleSave()}>Save</Button>\n        </Dialog>\n    )\n}\ninterface Props {\n    handleCommand: HandleCommand\n    open: boolean,\n    handleClose: () => void\n    macros: Macros\n}\n\nexport default function MacroDialog(props: Props) {\n    const { open, handleClose, macros, handleCommand } = props\n    const [addOpen, setAddOpen] = useState(false)\n    const [deleteSelected, setDeleteSelected] = useState(false)\n    const [editSelected, setEditSelected] = useState(false)\n    const [configOpen, setConfigOpen] = useState(false)\n    const [selectedMacro, setSelectedMacro] = useState<Macro | undefined>(undefined)\n    const [varInput, setVarInput] = useState(<></>)\n\n    const divRef = useRef(null)\n\n    useEffect(()=>{\n        if(!open){\n            setEditSelected(false)\n            setDeleteSelected(false)\n        }\n    },[open,editSelected,deleteSelected])\n    const handleSaveMacro = (macro: Macro) => {\n        console.log(macro)\n        if (editSelected) {\n            SocketSender.sendUpdatedMacro(macro)\n            setEditSelected(false)\n            setAddOpen(false)\n        } else if (addOpen) {\n            SocketSender.sendNewMacro(macro)\n            setAddOpen(false)\n        }\n\n    }\n    const sendCMD = async (cmd: ControlKeys, vartiable: string | undefined) => {\n        handleCommand(cmd, vartiable)\n        await new Promise(r => setTimeout(r, 1000))\n    }\n    const handleVarInput = async (line: MacroLine): Promise<MacroLine | false> => {\n        return new Promise(async res => {\n            const handleInput = (str: string) => {\n                console.log(str)\n                line.var = str\n                // await sendCMD(line.cmd,str)\n                setVarInput(<></>)\n                res(line)\n            }\n            const handleClose= ()=>{\n                setVarInput(<></>)\n                res(false)\n            }\n            setVarInput(<InputPopup open={true} handleInput={handleInput} handleClose={handleClose} header='Macro Input' message={'Set Input For '+line.cmd} startText={''}/>)\n        })\n    }\n    const handleAskInput = async(line: MacroLine): Promise<boolean>=>{\n        return new Promise(async res=>{\n           \n            const handleInput =  (str: string)=>{\n                setVarInput(<></>)\n                res(false)\n            }\n            const handleClose= ()=>{\n                setVarInput(<></>)\n                res(true)\n            }\n            setVarInput(<InputPopup open={true} handleInput={handleInput} handleClose={handleClose} header='Macro Held' message={'Press Okay to Proceed'} startText={undefined}/>)\n        })\n    }\n    const handleWait = async(line: MacroLine): Promise<boolean>=>{\n        let t = parseInt(line.var)\n        let cancle = false\n            return new Promise(async res=>{\n                const handleForceNext=()=>{\n                    t = 0\n                }\n                const handleClose= ()=>{\n                    t = 0\n                    cancle = true\n                }\n                while(t>0){\n                    await new Promise(r=>setTimeout(r,1))\n                    t--\n                    setVarInput(<InputPopup open={true} handleInput={handleForceNext} handleClose={handleClose} header={'Macro Waiting '+t} message={'Press Okay to Proceed'} startText={undefined}/>)\n                }\n                setVarInput(<></>)\n                res(cancle)\n\n            })\n    }\n    const processMacro = async (m: Macro) => {\n        let cancle = false\n        const prepedLines: MacroLine[] = []\n        for (const cmd in m.commands) {\n            if(cancle) return;\n            let c = m.commands[cmd]\n            if (c.requestVar) {\n                let i = await handleVarInput(c)\n                if(i === false){\n                    cancle= true\n                    return\n                } else{\n                prepedLines.push(i)\n                }\n            } else {\n                prepedLines.push(c)\n            }\n        }\n        if (cancle) return;\n        for(const l in prepedLines){\n            let line = prepedLines[l]\n            console.log(l)\n            if(cancle) return;\n            if(line.cmd === 'MACRO_WAIT'){\n                console.log('Waiting ',line.var)\n                cancle= await handleWait(line)\n                console.log('Wait Done')\n            } else if(line.cmd ==='MACRO_ASK'){\n                if(prepedLines[parseInt(l)+1]) \n                    cancle = await handleAskInput(prepedLines[parseInt(l)+1])\n                else   \n                    cancle = await handleAskInput(line)\n            } else{\n            await sendCMD(line.cmd, line.var)\n            }\n        }\n\n        if(cancle){\n\n        }\n\n\n    }\n    const handleMacroClick = (key: string) => {\n        let macro = Object.assign(macros[key], {});\n        console.log(macro)\n        if (macro) {\n            if (deleteSelected) {\n                SocketSender.deleteMacro(key)\n            } else if (editSelected) {\n                setSelectedMacro(macro)\n                setAddOpen(true)\n            } else {\n                processMacro(macro)\n\n            }\n\n        }\n    }\n    const handleAddClosed = () => {\n        setEditSelected(false)\n        setDeleteSelected(false)\n        setAddOpen(false)\n        setSelectedMacro(undefined)\n    }\n    const getMacros = () => {\n        return Object.values(macros).map(macro => {\n            return (\n                <Button key={macro.name + 'button'} onClick={() => handleMacroClick(macro.key)}> {macro.name}{editSelected ? <EditIcon /> : deleteSelected ? <DeleteIcon /> : ''} </Button>\n            )\n        })\n    }\n    const handleConfigSelect = (command: ioCommands) => {\n        switch (command) {\n            case ioCommands.DELETE_MACRO:\n                setDeleteSelected(!deleteSelected)\n                setEditSelected(false)\n                break;\n            case ioCommands.UPDATE_MACRO:\n                setEditSelected(!editSelected)\n                setDeleteSelected(false)\n                break;\n            case ioCommands.NEW_MACRO:\n                setAddOpen(true)\n                break;\n        }\n        setConfigOpen(false)\n    }\n\n    const handleConfigButton = () => {\n        //@ts-ignore\n        divRef.current.focus()\n\n        setConfigOpen(true)\n\n    }\n    const getMain = () => {\n        return (\n            <div key='main_marco_dialog'>\n                <DialogTitle key='macro_title' id='macro title'>\n                    Macros <Button key='macro_add' aria-label=\"add\" ref={divRef}  onClick={(e) => handleConfigButton()}> <SettingsIcon/></Button>\n                </DialogTitle>\n                <div>\n                    {getMacros()}\n                </div>\n\n                <Menu id='groups-menu' keepMounted anchorEl={divRef.current}\n                    open={configOpen}\n                    onClose={() => setConfigOpen(false)}>\n                    <MenuItem>\n                        <Button key='add_group' onClick={() => handleConfigSelect(ioCommands.NEW_MACRO)}>Add Macro</Button>\n                    </MenuItem>\n                    <MenuItem>\n                        <Button key='rename_group' disabled={Object.entries(macros).length < 1 ? true : false} onClick={() => handleConfigSelect(ioCommands.UPDATE_MACRO)}>Edit Macro</Button>\n                    </MenuItem>\n                    <MenuItem>\n                        <Button key='delete_group' disabled={Object.entries(macros).length < 1 ? true : false} onClick={() => handleConfigSelect(ioCommands.DELETE_MACRO)}>Delete Macro</Button>\n                    </MenuItem>\n                </Menu>\n            </div>\n        )\n    }\n    const getEditDialog = () => {\n        return (\n            <div key='macro_add_dialog'>\n                <MacroEditDialog macro={selectedMacro} saveMacro={handleSaveMacro} handleClose={() => handleAddClosed()} />\n\n            </div>\n        )\n    }\n    return (\n        <>\n            <Dialog fullScreen={addOpen} key='macro_dialog' onClose={handleClose} open={open} >\n\n                {addOpen ? getEditDialog() : getMain()}\n\n            </Dialog>\n            {varInput}\n        </>\n    )\n}\n","import { Button, Paper, ButtonGroup, } from \"@material-ui/core\";\nimport {useState} from 'react'\nimport { ButtonStyle, HandleCommand, Macros, PJs} from \"../util/constants\";\nimport BlendDialog from \"./BlendDialog\";\nimport MenuDialog from './MenuDialog'\nimport LensDialog from './LensDialog'\nimport Power from './CommandInterfaces/Power'\nimport Shutter from \"./CommandInterfaces/Shutter\";\nimport ProjectorSetupDialog from \"./ProjectorSetupDialog\";\nimport { useEffect } from \"react\";\nimport MacroDialog from \"./MacrosDialog\";\n\ninterface command_props{\n    handleCommand: HandleCommand\n    lockCommandLine: (lock: boolean)=> void\n    active: number[]\n    pjs: PJs\n    macros: Macros\n}\nexport default function CommandPad(props:command_props){\n    const {handleCommand, active, pjs, lockCommandLine, macros } = props\n    const [menuOpen, setMenuOpen] = useState(false)\n    const [blendOpen, setBlendOpen] = useState(false)\n    const [lensOpen,setLensOpen] = useState(false)\n    const [pjSetupOpen,setPJSetupOpen] =useState(false)\n    const [macroOpen, setMacroOpen]= useState(false)\n\n    useEffect(()=>{\n        if(active.length!==1 || !pjs[active[0]]){\n            setPJSetupOpen(false)\n        }\n    },[active, pjs])\n\n    useEffect(()=>{\n        if(menuOpen || macroOpen){\n            lockCommandLine(true)\n        }else{\n            lockCommandLine(false)\n        }\n    },[menuOpen, macroOpen, lockCommandLine])\n    \n    const getPJ=()=>{\n        return pjs[active[0]]\n    }\n    return(\n       <>\n        <Paper  key='commandKeys' style={{width:'300px'}}>\n           <Shutter handleCommand={handleCommand}/>\n            <br></br>\n           <Power handleCommand={handleCommand}/>\n            <ButtonGroup key='cp_menu'color=\"primary\" variant=\"outlined\">\n                <Button color=\"primary\" key='menu' variant=\"contained\" style={ButtonStyle}  onClick={(e) => setMenuOpen(!menuOpen)} >Menu</Button>\n                <Button color=\"primary\" key='blend' variant=\"contained\" style={ButtonStyle}  onClick={(e) => setBlendOpen(!blendOpen)} >Blend</Button>\n            </ButtonGroup>\n            <ButtonGroup key='cp_lens' color='primary' variant='outlined'>\n                <Button key='lens' variant=\"contained\" style={ButtonStyle} onClick={((e)=>setLensOpen(!lensOpen))}>Lens</Button>\n                (<Button key='pj_setup' variant=\"contained\"  style={ButtonStyle} onClick={((e)=>setPJSetupOpen(!pjSetupOpen))}>PJ Setup</Button>)\n            </ButtonGroup>\n            <ButtonGroup key='cp_macro' color='primary' variant='outlined'>\n                <Button key='macros_bt' variant='contained' style={ButtonStyle} onClick={((e)=>setMacroOpen(!macroOpen))}> Macros</Button>\n                </ButtonGroup>\n            \n            <MenuDialog open={menuOpen} handleClose={()=>setMenuOpen(false)} handleCommand={handleCommand}/>\n            <BlendDialog open={blendOpen} handleClose={()=>setBlendOpen(false)} handleCommand={handleCommand}/>\n            <LensDialog open={lensOpen} handleClose={()=>setLensOpen(false)} handleCommand={handleCommand} />\n            <ProjectorSetupDialog open={pjSetupOpen} handleClose={()=>setPJSetupOpen(false)} active={active} pj={getPJ()} handleCommand={handleCommand} />\n            <MacroDialog open={macroOpen} handleClose={()=>setMacroOpen(false)} macros={macros} handleCommand={handleCommand}/>\n        </Paper>\n       \n        </>\n    )\n}\n","\nimport * as C from './constants'\n\n\n\nconst log=(s:string)=>{\n   // console.log(s)\n}\nlet _world : number[] =[]\nlet _groups :C.Groups = {}\nexport function processCMD(cmdLine: string, selected: number[], world: number[], groups: C.Groups) {\n    _world = world\n    _groups= groups\n    cmdLine = cmdLine.trim()\n    let cmds = cmdLine.split(' ')\n   // console.group('CMDs '+cmds)\n   //Removes seleced if not adding or subtracting from it\n    if(cmds.length > 0 && !(cmds[0]==='+' || cmds[0]==='-' )){\n        selected = []\n    }\n    let processed = parse(cmds)\n    log('Parsed: '+processed)\n    processed = handleSelected(processed,selected)\n    log('Filtred: '+processed)\n\n    processed = processed.filter(p=> world.includes(p))\n    log('Worlds: '+processed)\n   // console.groupEnd()\n    return processed\n}\n\nfunction handleSelected(processed: number[], selected: number[]):number[]{\n    let newSelected = selected\n    \n    for(let i=0; i<processed.length; i++){\n        let p = processed[i]\n        if(p<0 && newSelected.includes(p*-1)){\n            newSelected = newSelected.filter((n)=> n!== (p*-1))\n        } else if(!newSelected.includes(p) && p>0){\n            newSelected.push(p)\n        }\n    }\n    return newSelected\n    \n}\n\nfunction parse(cmdArray: string[], parsed: number[] = []): number[] {\n    \n    if (cmdArray.length === 0){ \n        //log('Parsing Tree Complete')\n       // console.groupEnd()\n        return parsed;\n    }\n    //console.group('Parsing: '+cmdArray+ ' |  '+parsed)\n    switch (cmdArray[0]) {\n        case C.commands.THRU:\n            log('Parsing THRU')\n            return parseThru(cmdArray, parsed)\n        case C.commands.GROUP:\n            log('Parsing GROUP')\n            return parseGroup(cmdArray,parsed)\n        case '-':\n            log('Parsing Negative')\n            return parseNegative(cmdArray, parsed)\n        case '+':\n            log('Parsing Postive')\n            return parsePostive(cmdArray,parsed)\n        default:\n            log('Parsing Number')\n            return parseNumber(cmdArray, parsed)\n    }\n}\nfunction parseNumber(cmdArray: string[], parsed: number[]): number[] {\n    if (!cmdArray) return []\n    let i = Number.parseInt(cmdArray[0])\n    \n    if (isFinite(i)) {\n        parsed.push(i)\n     //   log('parsedNumber: '+i+' | '+parsed)\n        return parse(cmdArray.slice(1), parsed)\n    }\n    console.error('Invalid Number', i)\n    return parsed\n\n}\n\nfunction parsePostive(cmdArray:string[], parsed: number[]):number[]{\n    if(!cmdArray) return []\n    let i = 1\n  //  log('CMD Lenght: '+cmdArray.length)\n  //  log(i+' '+cmdArray[i])\n    while(cmdArray[i+1] !=='+' && cmdArray[i+1] !== '-' && i< cmdArray.length){\n        i++\n      //  log(i+' '+cmdArray[i]+' '+(cmdArray[i]==='+'))\n    }\n    let slice = []\n    if(i===1){\n        slice = cmdArray.slice(1,2)\n    } else{\n        slice = cmdArray.slice(1,i+1)\n    }\n    log(cmdArray+' | Postive Slice ('+ cmdArray[i] + ' @ '+i+') '+slice)\n    let sub = parse(slice)\n\n    \n //   log('Sub '+sub+ ' | '+cmdArray[i+1]+' i:'+ i + ' ' +cmdArray.slice(i+1))\n    return parse(cmdArray.slice(i+1),parsed.concat(sub))\n}\n\nfunction parseNegative(cmdArray: string[], parsed: number[]): number[] {\n  \n        if(!cmdArray) return []\n        let i = 1\n   //     log('CMD Lenght: '+cmdArray.length)\n   //    log(i+' '+cmdArray[i])\n        while(cmdArray[i+1] !=='+' && cmdArray[i+1] !== '-' && i< cmdArray.length){\n            i++\n     //       log(i+' '+cmdArray[i]+' '+(cmdArray[i]==='+'))\n        }\n        let slice = []\n        if(i===1){\n            slice = cmdArray.slice(1,2)\n        } else{\n            slice = cmdArray.slice(1,i+1)\n        }\n        log(cmdArray+' | Negative Slice ('+ cmdArray[i] + ' @ '+i+') '+slice)\n        let sub = parse(slice)\n \n        for(let n=0; n<sub.length;n++){\n            sub[n] = sub[n]*-1\n        }\n     //   log('Sub '+sub+ ' | '+cmdArray[i+1]+' i:'+ i + ' ' +cmdArray.slice(i+1))\n        return parse(cmdArray.slice(i+1),parsed.concat(sub))\n\n}\nfunction parseThru(cmdArray: string[], parsed:number[]):number[] {\n    if(cmdArray.length ===0) return []\n    let i = parsed.pop()\n    if(!i) { \n        console.error('Invalid THRU Placement. Number Must Procced THRU CMD')\n        return []\n    }\n  //  log(''+cmdArray.slice(1))\n    let n = parse(cmdArray.slice(1,2))[0]\n    if(!n){\n        n = Math.max(..._world)\n        //console.error('Invaild THRU Placement. Number Must Follow THRU CMD', n)\n        //return []\n    }\n    let sub = []\n    let negative = 1\n    if(i<0){\n        i = i*-1\n        negative = -1\n    }\n    if(i<n){\n        for(let x = i; x<=n;x++){\n            sub.push(x*negative)\n        }\n    } else{\n        for(let x=n; x<=i; x++){\n            sub.push(x*negative)\n        }\n    }\n    return parse(cmdArray.slice(2),parsed.concat(sub))\n\n}\nfunction parseGroup(cmdArray: string[], parsed:number[]):number[]{\n    if(cmdArray.length < 1) return []\n    log(cmdArray+' '+parseInt(cmdArray[0])+'')\n    let g = _groups[parseInt(cmdArray[1])]\n    console.table(_groups)\n    if(!g) return []\n    log('Group '+g)\n    return parse(cmdArray.slice(3),parsed.concat(g.group))\n}","import { Button, } from \"@material-ui/core\";\nimport { CSSProperties } from \"react\";\n\nimport { PJ_OBJ } from \"../util/constants\";\n\n\n\ninterface PJCardProps{\n    pj_tupple: {pj:PJ_OBJ,selected: boolean, active: boolean}\n    handlePJCard: (pjID: number) => void;\n}\nexport default function PJCard(props:PJCardProps){\n    const {pj_tupple, handlePJCard} = props\n    let pj = pj_tupple.pj\n\n    //const classes = useStyles();\n\n    const cardStyle: CSSProperties={\n      \n        background: pj_tupple.active? 'gray': 'white',\n        border: pj_tupple.selected? 'thick solid cornflowerBlue' : 0,\n        color: pj_tupple.active || pj_tupple.selected? 'lightwhite': 'black',   \n        width: 80,\n        height: 50\n    }\n    \n    return(\n       \n       <Button variant='contained'  style={cardStyle} onClick={()=>handlePJCard(pj.id)}>{pj.id}\n       </Button>\n       \n       \n    )\n}\n/*\n <Card className={classes.root} variant=\"outlined\" style={cardStyle} key={pj.id+'card'}>\n            <CardContent>\n                <Typography className={classes.title} color={'primary'}>\n                    {pj.name? pj.name: ''}\n                </Typography>\n                <Typography  className={classes.title} color={'primary'}>\n                ({pj.id})\n                </Typography>\n            </CardContent>\n        </Card>\n        */","import { TableCell, TableRow } from \"@material-ui/core\";\nimport { PJ_OBJ } from \"../util/constants\";\nimport BorderColorIcon from '@material-ui/icons/BorderColor';\nimport { CSSProperties } from \"react\";\n\ninterface tableProps{\n    pj_tupple:  {pj:PJ_OBJ,selected: boolean, active: boolean}\n    handlePJSelect: (pjID: number)=> void\n}\n\nexport default function ProgrammerTable(props: tableProps){\n    const {pj_tupple, handlePJSelect} = props\n    let pj = pj_tupple.pj\n\n    const getNameFormat= ():CSSProperties =>{\n        return{\n        background: pj_tupple.active? 'gray': 'white',\n        border: pj_tupple.selected? 'thick solid cornflowerBlue' : 0,\n        color: pj_tupple.active || pj_tupple.selected? 'lightwhite': 'black',\n        }\n\n    }\n    const blendRegion =()=>{\n        let color = ''\n        let regions = [pj.edgeBlendingUpper, pj.edgeBlendingRight, pj.edgeBlendingLower, pj.edgeBlendingLeft]\n        for(let i=0; i < regions.length; i++){\n            switch(regions[i]){\n                case 'On':\n                    color+= ' green'\n                    break;\n                case 'Off':\n                    color+= ' black'\n                    break\n                case 'Unknown':\n                    color+= ' yellow'\n                    break\n                default:\n                    color+=' red'\n            }\n        }\n      \n        return (\n            <p key={pj.id+'bp'} style={{ padding: 10,  margin:'auto', textAlign: 'center', borderStyle: 'solid', borderColor: color}}> {pj.edgeBlending}\n             <BorderColorIcon key={pj.id+'blend'} style={{fontSize:'15', marginLeft: '5', marginTop: 'auto', color:pj.edgeBlendingMarker==='On'?'red':'gray'}} /></p>\n        )\n    }\n    return (\n        <TableRow key={pj.id+'row'}>\n            <TableCell style={getNameFormat()}key={pj.id+'name'} component='th' scope='row' onClick={()=>{handlePJSelect(pj_tupple.pj.id)}}>\n                {pj.name}\n            </TableCell>\n            <TableCell key={pj.id+'id'}>{pj.id}</TableCell>\n            <TableCell key={pj.id+'shutter'}>{pj.shutter}</TableCell>\n            <TableCell key={pj.id+'blendregion'}>{blendRegion()}</TableCell>\n            <TableCell key={pj.id+'markers'}>{pj.edgeBlendingMarker}</TableCell>\n            <TableCell key={pj.id+'test'}>{pj.testPattren}</TableCell>\n            <TableCell key={pj.id+'lamp'}>{pj.lampStatus}</TableCell>\n            <TableCell key={pj.id+'sig'}>{pj.hdmiResolution}/{pj.hdmiSignalLevel}/{pj.hdmiVerticalFrequency}</TableCell>\n            <TableCell key={pj.id+'osd'}>{pj.osdPostion}</TableCell>\n\n        </TableRow>\n    )\n}","\nimport * as C from '../util/constants'\nimport { Paper, makeStyles, Table, TableBody, TableCell, TableContainer, TableHead, TableRow,  Grid, useMediaQuery, GridSize } from '@material-ui/core'\nimport { prefres } from \"../prefrences\"\nimport {  useMemo, useState } from \"react\"\nimport PJCard from \"./PJCard\"\nimport ProgrammerTable from \"./ProgrammerTable\"\n\ninterface Programmer_Props {\n    selected: number[],\n    active: number[],\n    world: number[],\n    prefs: prefres,\n    status: C.RIG_STATUS,\n    pjs: Record<number, C.PJ_OBJ>,\n    handleTableSelect: (id: number) => void\n}\nconst useStyles = makeStyles({\n    root: {\n        flexGrow: 1,\n    },\n    paper: {\n        height: 140,\n        width: 100,\n    },\n    table: {\n        minWidth: 300,\n        maxHeight: 400\n    },\n    \n})\nexport default function Programmer(props: Programmer_Props) {\n    const { active, world, selected, prefs, pjs, handleTableSelect } = props\n    const classes = useStyles()\n\n\n    // const pj = useMemo(()=>getPJ(pjID),[pjID])\n/*\n    const _getPJs = useMemo(() => {\n        world.sort()\n        // console.log('Programmer Making PJs')\n        return world.map(s => {\n\n            let pj = pjs[s] ? pjs[s] : {\n                id: s,\n                online: 'false',\n                shutter: 'Unknown',\n                power: 'Unknown',\n                lastSeen: -1,\n                error: 'NOT SEEN',\n                lampStatus: 'Unknown',\n                edgeBlending: 'Unknown',\n                edgeBlendingMarker: 'Unknown',\n                testPattren: 'Unknown',\n                backColor: 'Unknown',\n                edgeBlendingLeft: 'Unknown',\n                edgeBlendingLower: 'Unknown',\n                edgeBlendingRight: 'Unknown',\n                edgeBlendingUpper: 'Unknown',\n                hdmiResolution: 'Unknown',\n                hdmiSignalLevel: 'Unknown',\n                hdmiVerticalFrequency: 'Unknown',\n                osdPostion: 'Unknown',\n                inputSignalName_Main: 'Unknown',\n                name: 'Unknown'\n            }\n            if ((prefs.showOnlySelected && selected.includes(s)) || !prefs.showOnlySelected) {\n                return <PJ key={'pj id_' + pj.id} pj={pj} handleTableSelect={handleTableSelect} selected={selected.includes(s)} darkMode={prefs.darkMode} active={active.includes(s)} />\n            }\n            return <></>\n\n        })\n    }, [world, active, selected, handleTableSelect, prefs.darkMode, prefs.showOnlySelected, pjs])\n    */\n    const getPJs = useMemo(() => {\n      //  console.groupCollapsed('Recomputing PJ List')\n       // console.log('Active', active)\n       // console.log('Selected', selected)\n        console.groupEnd();\n        world.sort()\n        let pjList: { pj: C.PJ_OBJ, selected: boolean, active: boolean }[] = []\n        world.forEach(s => {\n            let pj = pjs[s] ? pjs[s] :\n                {\n                    id: s,\n                    online: 'false',\n                    shutter: 'Unknown',\n                    power: 'Unknown',\n                    lastSeen: -1,\n                    error: 'NOT SEEN',\n                    lampStatus: 'Unknown',\n                    edgeBlending: 'Unknown',\n                    edgeBlendingMarker: 'Unknown',\n                    testPattren: 'Unknown',\n                    backColor: 'Unknown',\n                    edgeBlendingLeft: 'Unknown',\n                    edgeBlendingLower: 'Unknown',\n                    edgeBlendingRight: 'Unknown',\n                    edgeBlendingUpper: 'Unknown',\n                    hdmiResolution: 'Unknown',\n                    hdmiSignalLevel: 'Unknown',\n                    hdmiVerticalFrequency: 'Unknown',\n                    osdPostion: 'Unknown',\n                    inputSignalName_Main: 'Unknown',\n                    name: 'Unknown'\n                }\n            if ((prefs.showOnlySelected && selected.includes(s)) || !prefs.showOnlySelected) {\n                pjList.push({ pj, selected: selected.includes(s), active: active.includes(s) })\n            }\n\n        })\n        return pjList\n\n    }, [world, pjs, prefs, selected, active])\n\n    \n    const [spacing, setSpacing] = useState( useMediaQuery('(min-width:600px)')? 2 : 0)\n    \n    const getCards = () => {\n       \n        return getPJs.map(pj_tupple => {\n            return <Grid key={'g_' + pj_tupple.pj.id} item xs={spacing as GridSize} style={{margin: 'auto'}}>\n                <PJCard handlePJCard={handleTableSelect} pj_tupple={pj_tupple} />\n            </Grid>\n        })\n    }\n\n    const getRows = () => {\n        return getPJs.map(pj_tupple => {\n\n            return <ProgrammerTable handlePJSelect={handleTableSelect} key={pj_tupple.pj.id+'card'} pj_tupple={pj_tupple} />\n        })\n    }\n    /*\n    const getStyle = (good = true) => {\n        let s: CSSProperties = {\n            width: '50',\n            textAlign: 'center'\n        }\n        if (!good)\n            s.backgroundColor = prefs.darkMode ? 'red' : 'red'\n\n        return s\n    }*/\n    return (\n        <>  {prefs.programmerTableView?\n            <TableContainer key='pjtablecon' component={Paper}>\n                <Table key='pjtablet' className={classes.table} size='small'>\n                    <TableHead key='pjtablehead'>\n                        <TableRow key='pjtableheadrow'>\n                            <TableCell key='pjtable_name'>Name</TableCell>\n                            <TableCell key='pjtable_id'>ID</TableCell>\n                            <TableCell key='pjtable_shutter'>Shutter</TableCell>\n                            <TableCell key='pjtable_blend'>Blend</TableCell>\n                            <TableCell key='pjtable_mark'>Blend Marker</TableCell>\n                            <TableCell key='pjtable_test'>Test Pattren</TableCell>\n                            <TableCell key='pjtable_lamp'>Lamp</TableCell>\n                            <TableCell key='pjtable_hdmi'>HDMI</TableCell>\n                            <TableCell key='pjtable_osd'>OSD</TableCell>\n                        </TableRow>\n                    </TableHead>\n                    <TableBody>\n                        {getRows()}\n                    </TableBody>\n                </Table>\n            </TableContainer>\n        :\n\n            <Grid key='programmer' className={classes.root} spacing={2} container>\n                {getCards()}\n            </Grid>\n}\n        </>\n    )\n}\n/**\n<TableContainer key='p-tc' component={Paper}>\n<Table key='p-t' className={classes.table}>\n    <TableHead key='p-th'>\n        <TableRow key='p-r'>\n            <TableCell style={getStyle()} key='p_pj'> PJ </TableCell>\n            <TableCell style={getStyle(status.shutter)} key='p_s'> Shutter</TableCell>\n            <TableCell style={getStyle(status.blend)} key='p_b'> Blend</TableCell>\n            <TableCell style={getStyle(status.blendMarker)} key='p_bm'> Blend Marker</TableCell>\n            <TableCell style={getStyle(status.testPattren)} key='p_test'> Test Pattern</TableCell>\n            <TableCell style={getStyle(status.lampStatus)} key='p_lamp'> Lamp Status</TableCell>\n            <TableCell style={getStyle(status.hdmiInput)} key='p_hdmi'> HDMI Input</TableCell>\n            <TableCell style={getStyle(status.signalName)} key='p_signal name'> Signal Name</TableCell>\n            <TableCell style={getStyle()} key='p_ls'> Last Seen</TableCell>\n\n        </TableRow>\n    </TableHead>\n    <TableBody>\n        {getPJs}\n    </TableBody>\n</Table>\n</TableContainer>\n*/","import * as C from './constants'\n//const puppeteer = require('puppeteer');\n\nasync function goFetch(query: string){\n    let fetchString = C.pjServer+'api/'+query\n   // console.log(fetchString)\n    try{\n    let res = await fetch(fetchString,{\n       mode: 'no-cors'\n    })\n    \n   // console.table(res.body)\n    if(res.ok){\n      //  console.log(await res.text())\n        //return await res.json()\n        return await res.json()\n    }\n}catch(e){\n    console.log(e)\n}\n    \n    \n}\n\nexport async function getPJ(target:number) {\n    let pj = await goFetch('status/?pj='+target)\n    if(pj){\n        return pj as unknown as C.PJ_OBJ\n    }\n    return undefined\n    \n}\n\nexport async function getPJs(){\n    let pjs = await goFetch('status/?pj=all')\n    if(pjs){\n        return pjs as unknown as Record<number,C.PJ_OBJ>\n    }\n}\nexport async function getRigStatus(){\n   // console.log('Getting Rig Status')\n    let status = await goFetch('status/?rigstatus=all')\n    if(status){\n        return status as unknown as C.RIG_STATUS\n    }\n}\n/*\nexport async function setConfig(item: C.ConfigHeaders, value: string){\n    await goFetch('config/?'+item+\"=\"+value)\n}*/\n\nexport async function setConfig(query: string){\n    await goFetch('config/?'+query)\n}\nexport async function setter(target: number, command:  C.ControlKeys) {\n    console.log('Setting ',target,command)\n    await goFetch('set/?pj='+target+'&command='+command)\n}\nexport async function  powerOff(target: number) {\n     return await setter(target, C.ControlCommands.POWER_OFF)\n}\n\nexport async function powerOn(target: number) {\n    return await setter(target,C.ControlCommands.POWER_ON)\n}\n\nexport async function shutterOn(target:number){\n    console.log('Sutter On')\n    return await setter(target,C.ControlCommands.SHUTTER_OPEN)\n}\nexport async function shutterOff(target:number) {\n    return await setter(target,C.ControlCommands.SHUTTER_CLOSED)\n}\n\nexport async function menu(target:number) {\n    \n}\n","import { Dialog, DialogTitle , TextField, Select, MenuItem, InputLabel, Button} from \"@material-ui/core\";\nimport React, { CSSProperties, useState } from \"react\";\nimport {PROJECTOR_MAKES, PROJECTOR_MAKE, Patch} from '../util/constants'\ninterface PatchAdd_Props{\n    open: boolean,\n    handleClose: ()=>void,\n    addPJs: (amount: number, startID: number, baseIP: string, port: number, auth: string, make: PROJECTOR_MAKE)=>void,\n    currentPatch: Patch\n}\n\nconst style: CSSProperties={\n    width: '90%',margin: 'auto', marginBottom: '5px'\n    \n}\nexport default function PatchAddDialog(props: PatchAdd_Props){\n    const {open,handleClose, addPJs, currentPatch}= props\n\n    const getMaxID=()=>{\n        let i = -1\n        Object.values(currentPatch).forEach(pj=>{\n            if(pj.id> i)\n                i = pj.id\n        })\n        if(i===-1)\n            return 100\n        \n            return i\n    }\n\n    const [make, setMake]= useState<PROJECTOR_MAKE>(PROJECTOR_MAKES.PANASONIC)\n    const [Amount, setAmount] = useState({value:1,err:''})\n    const [StartID, setID] = useState({value:getMaxID()+1,err:''})\n    const [BaseIP, setBaseIP]= useState({value:'192.168.10.',err:''})\n    const [UserName, setUserName] = useState('admin1')\n    const [Pass, setPass] = useState('')\n    const [Port, setPort] = useState({value:1024, err:''})\n    //const [hasErrors, setHasErrors]= useState(false)\n\n   \n    const getListItems=()=>{\n        return Object.values(PROJECTOR_MAKES).map(key=>{\n            //console.log(key)\n            return <MenuItem key={key} value={key}>{key}</MenuItem>\n        })\n    }\n    const handleSubmit=()=>{\n        let auth = ''\n        if(make === PROJECTOR_MAKES.PANASONIC){\n            auth = UserName+\":\"+Pass\n        }\n        addPJs(Amount.value,StartID.value,BaseIP.value,Port.value, auth,make)\n    }\n    const handleMake=(e: React.ChangeEvent<{value:unknown}>)=>{\n        setMake(e.target.value as PROJECTOR_MAKE)\n    }\n    const getBaseStart=()=>{\n        return parseInt(BaseIP.value.split('.')[3])\n    }\n    const checkOverlap=(startID: number, amount: number)=>{\n        for(let i = startID; i<amount+startID; i++){\n            let t = false\n            Object.values(currentPatch).forEach(pj=>{\n                if(pj.id === i)\n                    t = true\n            })\n            if(t)\n                return true\n        }\n        return false\n    }\n    const handleAmount=(e: React.ChangeEvent<HTMLTextAreaElement | HTMLInputElement>)=>{\n        let value = parseInt(e.target.value)\n        let err= ''\n        if(value<1 || isNaN(value)){\n            err='Invalid Number'\n        } else if(checkOverlap(StartID.value, value)){\n            err='Will Overlap Other IDs'\n        }\n\n        setAmount({value,err})\n    }\n    \n    const handleID=(e: React.ChangeEvent<HTMLTextAreaElement | HTMLInputElement>)=>{\n        let value = parseInt(e.target.value)\n        let err= ''\n        if(value<1 || isNaN(value)){\n            err='Invalid Number'\n        } else if(getBaseStart()+Amount.value >254){\n            err='Will Land Outside Base IP Range'\n        } else if(checkOverlap(value, Amount.value)){\n            err='Will Overlap Other IDs'\n        }\n        setID({value,err})\n    }\n    const handlePort=(e: React.ChangeEvent<HTMLTextAreaElement | HTMLInputElement>)=>{\n        let value = parseInt(e.target.value)\n        let err= ''\n        if(value<1 || isNaN(value)){\n            err='Invalid Number'\n        }\n        setPort({value,err})\n    }\n    const handleBaseIP=(value: string)=>{\n        \n        let err= ''\n        let s = value.split('.')\n        if(s.length===4){\n            for(let i =0; i<4;i++){\n                if(parseInt(s[i])<0 || parseInt(s[i])>(254-Amount.value)){\n                    err ='Invalid Number Range: '+s[i]\n                }\n            }\n        } else{\n            err= 'Invalid Number of .'\n        }\n        console.log(value)\n        \n        setBaseIP({value,err})\n    }\n\n    const handlePass=(value: string)=>{\n        setPass(value)\n    }\n    const handleUser=(value:string)=>{\n        setUserName(value)\n    }\n    return( \n        <Dialog fullWidth={true} style={{padding: '10%'}} onClose={handleClose} aria-labelledby=\"simple-dialog-title\" open={open}>\n        <DialogTitle id=\"simple-dialog-title\">Add Projectors</DialogTitle>\n        <InputLabel style={style} id=\"pjMake\">Model</InputLabel>\n        <Select style={style} id='pjMake' onChange={handleMake} value={make}>\n        {getListItems()}\n        </Select>\n        <br></br>\n        <TextField style={style} error={Amount.err? true: false} variant=\"filled\" type={'number'}label={'Amount'} value={Amount.value} onChange={handleAmount} helperText={Amount.err}> </TextField>\n        <br></br>\n        <TextField style={style} error={StartID.err? true: false} value={StartID.value} helperText={StartID.err} variant=\"filled\" type={'number'} label={'StartID'} onChange={handleID} > </TextField>\n        <br></br>\n        <TextField style={style} error={BaseIP.err? true: false} value={BaseIP.value} helperText={BaseIP.err} variant=\"filled\" type={'text'}label={'BaseIP'} onChange={(e)=>handleBaseIP(e.target.value)} > </TextField>\n        <br></br>\n        <TextField style={style} error={Port.err? true: false} value={Port.value} helperText={Port.err} variant=\"filled\" type={'number'}label={'Port'} onChange={handlePort} > </TextField>\n        <br></br>\n        <TextField style={style}  value={UserName}  variant=\"filled\" label={'Username'} type={'text'} onChange={(e)=>handleUser(e.target.value)}> </TextField>\n        <br></br>\n        <TextField style={style}  value={Pass}  variant=\"filled\" label={'Password'}type={'text'} onChange={(e)=>handlePass(e.target.value)}> </TextField>\n\n        <Button style={{width:'20%', margin: 'auto', marginBottom:'2%'}} disabled={Amount.err || BaseIP.err || StartID.err? true: false} variant=\"contained\" color=\"primary\" onClick={handleSubmit}>Submit</Button>\n      </Dialog>\n    )\n}","import * as C from \"../util/constants\";\nimport { DataGrid } from '@material-ui/data-grid';\nimport { Button, Paper, makeStyles, ButtonGroup } from '@material-ui/core'\nimport AddIcon from '@material-ui/icons/Add';\nimport EditIcon from '@material-ui/icons/Edit';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport { useState } from \"react\";\nimport { v4 } from 'uuid'\nimport Alert from './Alert'\nimport PatchAddDialog from './PatchAddDialog'\n\ninterface Patch_props {\n  patch: C.Patch\n  setPatch?: (p: C.Patch) => void\n}\n\nconst useStyles = makeStyles((theme) => ({\n  fab: {\n    position: 'absolute',\n    bottom: theme.spacing(2),\n    right: theme.spacing(2),\n  },\n\n}));\nconst columns = [\n  { field: 'uuid', headerName: 'uuid', width: 100, hide: true },\n  { field: 'id', headerName: 'ID', width: 90 },\n  { field: 'ip_address', headerName: 'IP Address', width: 170 },\n  { field: 'port', headerName: 'Port', width: 130 },\n  { field: 'auth', headerName: 'Auth', width: 130 },\n  { field: 'make', headerName: 'Make', width: 130 },\n\n];\n\nexport default function Patch(props: Patch_props) {\n  const { patch, setPatch } = props\n  const [addWindowOpen, setAddWindowOpen] = useState(false)\n  const [editWindowOpen, setEditWindowOpen] = useState(false)\n  const [selected, setSelected] = useState<number[]>([])\n  const [deleteWindowOpen, setDeleteWindowOpen] = useState(false)\n  const classes = useStyles()\n  let newPJs: C.Patch = {}\n\n  const addPJs = (amount: number, startID: number, baseIP: string, port: number, auth: string, make: C.PROJECTOR_MAKE) => {\n    setAddWindowOpen(false)\n    console.log('Got PJs to make!')\n    for (let id = startID; id < amount + startID; id++) {\n      let ip_address = baseIP + id\n      //console.log('Patch', patch)\n      if (Object.values(patch).filter(pj => {\n        if (pj.id === id) {\n          console.log('Conflicting ID', id);\n          return true\n        }\n        if (pj.ip_address === ip_address) {\n          console.log('Conflicting IP', ip_address);\n          return true\n        }\n        return false\n      }\n      ).length > 0) {\n        console.log('Conflicting PJ')\n        newPJs[v4()] = { ip_address: '-', port, auth, make, id: 0 }\n      } else {\n        // console.log('new PJ!')\n        newPJs[v4()] = { ip_address, id, port, auth, make }\n      }\n    }\n    //console.log(newPJs)\n    let newPatch = Object.assign(patch, newPJs) as C.Patch\n    if (newPatch && setPatch) {\n      setPatch(newPatch)\n    }\n  }\n  /*\n  const getRows = () => {\n    return Object.entries(patch).map(e => {\n      let pj = e[1]\n      //@ts-ignore\n      pj.channel = pj.id\n      //@ts-ignore\n      pj.id = e[0]\n\n      return pj\n\n    })\n  }\n  */\n\n  const handleDelete = (c: C.ControlKeys) => {\n\n    let newPatch = Object.assign(patch) as C.Patch\n    Object.entries(newPatch).forEach(e => {\n      if (selected.includes(e[1].id)) {\n        delete newPatch[e[0]]\n        let newSelect = Object.assign(selected) as number[]\n        delete newSelect[e[1].id]\n        setSelected(newSelect)\n      }\n    })\n\n\n    //const i = Object.assign(newPatch)\n    if (newPatch && setPatch) {\n      //console.log('Deleting',Object.values(patch).length-Object.values(newPatch).length)\n      setPatch(newPatch)\n      setSelected([])\n    }\n\n  }\n  const getSelectedString = () => {\n    let s = ''\n    for (let i = 0; i < selected.length; i++) {\n      s += selected[i] + ' '\n      if (i % 9 === 0) {\n        s += '\\r'\n      }\n    }\n    return s\n  }\n\n\n\n  return (\n    <>\n      <Paper style={{ height: 700, width: '100%' }}>\n        {patch ?\n          <DataGrid rows={Object.values(patch)} columns={columns} checkboxSelection selectionModel={selected} onSelectionModelChange={(e) => setSelected(e.selectionModel as number[])} />\n          : <></>\n        }\n\n        <ButtonGroup color='primary' className={classes.fab} >\n          <Button aria-label=\"add\" onClick={(e) => setAddWindowOpen(true)}> <AddIcon /></Button>\n          <Button aria-label=\"edit\" disabled={selected.length < 1} onClick={(e) => setEditWindowOpen(true)}> <EditIcon /></Button>\n          <Button aria-label=\"edit\" disabled={selected.length < 1} onClick={(e) => setDeleteWindowOpen(true)}> <DeleteIcon /></Button>\n        </ButtonGroup>\n\n\n      </Paper>\n      <Alert open={deleteWindowOpen} handleCommand={handleDelete} handleClose={() => setDeleteWindowOpen(false)} command={C.ControlCommands.MENU} header='Delete Selected' message={'Are you srue you want to delete: \\r \\n' + getSelectedString()} ></Alert>\n      <PatchAddDialog open={addWindowOpen} handleClose={() => setAddWindowOpen(false)} addPJs={addPJs} currentPatch={patch} />\n    </>\n  )\n}","\nexport type update ={version:string,date:string, notes:string[]}\nexport type updates =update[]\nconst updateLog: updates=[\n    {version: '0.1.4.', date: '9/5/21', notes:[\n        'Added About'\n    ]},\n    {version: '0.1.4.1', date: '9/5/21', notes:[\n        'More About', 'Less Mess'\n    ]},\n    {version: '0.1.5.2', date: '10/5/21', notes:[\n        'Programmer Table now selectable'\n    ]},\n    {version:'0.1.5.3', date:'10/6/21', notes:[\n        'OSD Rotaion, PJ Roation Added',\n        'Clear Bug Fix',\n        'User Option to 3x Clear on 1 press addeds'\n    ]},\n    {version:'0.1.5.4', date:'10/7/21', notes:[\n        'Input',\n        'White TestPattren to real one',\n    ]},\n    {version:'0.1.5.5', date:'10/11/21', notes:[\n        'Menu Popup now maps keyboard keys to keys',\n        'Menu Popup now allows number key entry'\n    ]},\n    {version:'0.1.5.6', date:'11/8/21', notes:[\n        'Next and Back when only one PJ selected',\n        'Logic fix to Command Line'\n    ]},\n    {version:'0.1.5.7', date:'11/8/21', notes:[\n        'Bug Fix for worlds',\n    ]},\n    {version:'0.1.5.8', date:'11/9/21', notes:[\n        'Bug fix for CMD logic',\n    ]},\n    \n]\n\nexport default updateLog","\nimport { Card, Dialog, Paper, Typography, makeStyles, CardContent, Theme, createStyles, AppBar } from '@material-ui/core';\n\nimport updateLog from '../util/UpdateLog'\ninterface About_Props{\n    open: boolean\n    handleClose: ()=>void\n}\nconst useStyles = makeStyles((theme: Theme)=> createStyles({\n    root: {\n      minWidth: 275,\n      flexGrow: 1,\n    },\n    bullet: {\n      display: 'inline-block',\n      margin: '0 2px',\n      transform: 'scale(0.8)',\n    },\n    menuButton: {\n        marginRight: theme.spacing(2),\n    },\n    title: {\n      fontSize: 14,\n    },\n    pos: {\n      marginBottom: 12,\n    },\n  }));\nexport default function About(props: About_Props){\n    const {open,handleClose}=props;\n    const classes = useStyles();\n    const bull = <span className={classes.bullet}>•</span>;\n    const getNotes=(notes: string[])=>{\n        return notes.map(note=>{\n           return <Typography key={note} variant='body2'>\n                {bull}{note}\n            </Typography>\n        })\n    }\n    const getUpdates=()=>{\n        return updateLog.map(update=>{\n            return <Card className={classes.root} key={update.version}>\n                <CardContent>\n                    <Typography variant='h6' component='h2'>\n                        {update.version}\n                    </Typography>\n                    <Typography className={classes.pos}>\n                        {update.date}\n                    </Typography>\n                    {getNotes(update.notes)}\n               \n                </CardContent>\n                \n                </Card>\n        })\n    }\n    return(\n        <Dialog open={open} onClose={handleClose}>\n            <div className={classes.root}>\n                <AppBar position='static'>\n                <Typography variant='h4'>vanPJ</Typography>\n              <Typography className={classes.pos} >Logic.Lighting | MIT Licence</Typography>\n                    </AppBar>\n          <Paper style={{width: '50%'}}>  \n              \n        {getUpdates()}\n        </Paper>\n        </div>\n        </Dialog>\n    )\n}","import { Dialog, AppBar, Toolbar, Typography, IconButton, Button, Paper, Slide, Switch, TextField, FormControlLabel, makeStyles } from \"@material-ui/core\";\nimport CloseIcon from '@material-ui/icons/Close';\nimport InfoIcon from '@material-ui/icons/Info';\nimport { useState, forwardRef, useEffect } from \"react\";\nimport * as C from \"../util/constants\";\nimport { setConfig } from \"../util/getter\";\nimport Patch from \"./Patch\";\nimport { SocketPatcher } from \"../util/SocketListener\";\nimport { Socket } from \"socket.io-client\";\nimport About from \"./About\";\n//import { socket } from \"../LoadPage\";\nconst useStyles = makeStyles((theme) => ({\n  appBar: {\n    position: 'relative',\n  },\n  title: {\n    marginLeft: theme.spacing(2),\n    flex: 1,\n  },\n  root: {\n    '& .MuiTextField-root': {\n      margin: theme.spacing(1),\n      width: '25ch',\n    },\n  },\n}));\n\nconst Transition = forwardRef(function Transition(props, ref) {\n  //@ts-ignore\n  return (<Slide direction=\"up\" ref={ref} {...props} />);\n});\n\ninterface ConfigDialog_Props {\n  open: boolean\n  handleClose: () => void\n  config: C.Config\n  socket: Socket | undefined\n}\nexport default function ConfigDialog(props: ConfigDialog_Props) {\n  const { open, handleClose, config, socket } = props\n  const [polling, setPolling] = useState(config.Polling)\n  const [pollingInterval, setPollingInterval] = useState(config.Polling_Interval/1000)\n  const [patch, setPatch] = useState<C.Patch>(config.Patch)\n  const [aboutOpen, setAboutOpen] =useState(false)\n\n  const classes = useStyles();\n\n  useEffect(() => {\n    setPollingInterval(config.Polling_Interval/1000)\n    setPolling(config.Polling)\n    setPatch(config.Patch)\n  }, [config])\n \n\n  const handleSubmit = (event: any) => {\n    event?.preventDefault();\n    // console.log(event)\n\n    let form = document.querySelector('form')\n    if (form) {\n      const data = new FormData(form);\n      let query = ''\n      for (var pair of data.entries()) {\n      \n        let t = pair[0] as C.ConfigHeaders\n       \n        let v = pair[1].toString()\n        switch(t){\n          case C.ConfigHeaders.POLLING:\n           \n            break;\n          case C.ConfigHeaders.POLLING_INTERVAL:\n            query += t + '=' + pollingInterval*1000 + '&'\n            break;\n          default:\n            query += t + '=' + v + '&'\n            break;\n        }\n\n      }\n      //Hard adds Polling to ensure it is accounted for\n      query += C.ConfigHeaders.POLLING + '=' + polling\n      \n      setConfig(query)\n      if(socket)\n        SocketPatcher(socket, patch)\n    }\n  }\n  const handlePollingInterval=(value: number)=>{\n    if(value>10){\n      setPollingInterval(value)\n    }\n  }\n  const handlePatchUpdate=(p: C.Patch)=>{\n    console.log(p)\n    setPatch(p)\n  }\n  return (\n    \n    //@ts-ignore\n    <Dialog fullScreen open={open} onClose={handleClose} TransitionComponent={Transition}>\n\n      <form className={classes.root} onSubmit={handleSubmit}>\n        <AppBar className={classes.appBar}>\n          <Toolbar style={{ paddingBottom: 0, marginBottom: 0, height: 30}}>\n            <IconButton edge=\"start\" color=\"inherit\" onClick={handleClose} aria-label=\"close\">\n              <CloseIcon />\n            </IconButton>\n            <Typography variant=\"h6\" className={classes.title}>\n              Server Configuration\n              <span style={{ fontSize: 10, marginLeft:30 }}> &nbsp;&nbsp;&nbsp; Last Update: {config.LastUpdated}</span> \n            </Typography>\n           \n            <Button autoFocus color=\"inherit\" type={'submit'} onClick={handleClose}>\n              Save\n            </Button>\n            <IconButton color='inherit' onClick={()=>setAboutOpen(true)}><InfoIcon></InfoIcon></IconButton>\n           \n          </Toolbar>\n         \n        </AppBar>\n\n        <Paper key='config_paper'>\n\n\n\n          <TextField key='location' style={{width:'25%'}}label={'Location'} name={C.ConfigHeaders.LOCATION} defaultValue={config.Location} />\n\n          <FormControlLabel name={C.ConfigHeaders.POLLING} value={polling} labelPlacement=\"top\"\n            control={<Switch checked={polling} value={polling} onChange={(e) => setPolling(!polling)} name={C.ConfigHeaders.POLLING} />}\n            label=\"Polling\"\n          />\n\n          <TextField key='polling_interval' style={{width:'25%'}} disabled={!polling} type='number' label={'Poll Interval'} onChange={(e)=> handlePollingInterval(parseInt(e.target.value))} name={C.ConfigHeaders.POLLING_INTERVAL} value={pollingInterval} />\n        </Paper>\n\n\n        <Paper key='patch'>\n          <Patch patch={patch} setPatch={handlePatchUpdate} />\n        </Paper>\n      </form>\n     \n      <About open={aboutOpen} handleClose={()=>setAboutOpen(false)}></About>\n    </Dialog>\n   \n      \n  \n    \n  )\n}","\nimport { Socket } from 'socket.io-client'\nimport * as C from './constants'\n//import {socket} from '../LoadPage'\ntype RIG_STATUS = React.Dispatch<React.SetStateAction<C.RIG_STATUS>>\ntype PJS = React.Dispatch<React.SetStateAction<C.PJs>>\ntype CONFIG = React.Dispatch<React.SetStateAction<C.Config>>\ntype POLLING_PROGRESS = React.Dispatch<React.SetStateAction<number>>\ntype MACROS = React.Dispatch<React.SetStateAction<C.Macros>>\n\nexport default function SocketListener(\n    socket: Socket,\n    setStatus: RIG_STATUS,\n    setPJs: PJS,\n    setConfig: CONFIG,\n    setPollingProgress: POLLING_PROGRESS,\n    setMacros: MACROS\n) {\n   \n    socket.on('connected', () => {\n        console.log('Connected!')\n        // socket.emit('Hello')\n    })\n    socket.on('Hello', () => {\n        //console.log('Hello!')\n    })\n    socket.on(C.ioCommands.EMITTING_PJS, (pjs: C.PJs) => {\n        setPJs(pjs)\n         console.log('Got new PJs!')\n    })\n    socket.on(C.ioCommands.EMITTING_STATUS, (status: C.RIG_STATUS) => {\n       // console.log('Status Updated')\n        setStatus(status)\n    })\n    socket.on(C.ioCommands.REQUEST_UPDATE, () => {\n        console.log('Requesting Update!')\n        socket?.emit(C.ioCommands.REQUESTING_UPDATE)\n    })\n\n    socket.on(C.ioCommands.REQUEST_CONFIG, () => {\n        console.log('Requesting Config')\n       // socket?.emit(C.ioCommands.REQUESTING_CONFIG)\n    })\n    socket.on(C.ioCommands.EMITTING_CONFIG, (config: C.Config) => {\n        console.groupCollapsed('Got New Config')\n        console.log('Config', config)\n        console.log('Patch', config.Patch)\n        console.groupEnd()\n        setConfig(config)\n        /*\n        if(config.Groups[0] && config.Groups[0].group)\n            setWorld(config.Groups[0].group)\n            */\n    })\n    socket.on(C.ioCommands.EMITTING_POLLING_PROGRESS, (progress: number) => {\n        setPollingProgress(progress)\n    })\n\n    socket.on(C.ioCommands.EMITTING_MACROS,(macros: C.Macros) =>{\n        setMacros(macros)\n        console.log('Got Macros',macros)\n    })\n}\n    \n\n\n\nexport function SocketPatcher(socket: Socket, patch: C.Patch) {\n    socket.emit(C.ioCommands.EMITTING_PATCH, patch)\n}   ","import { Button} from '@material-ui/core'\nimport { useMemo } from 'react'\nimport * as C from '../util/constants'\n\ninterface worlds_props{\n    setWorld: (g: string)=> void\n    name: string\n    groupEditCMD: C.ioCommands | undefined\n    groups: C.Groups\n    selected?: number\n}\n/*\ninterface worldTuppel{\n  key: string,\n  name: string,\n  selected: boolean\n}*/\nexport default function Worlds( props: worlds_props){\n\n    const {setWorld, groups, groupEditCMD, selected} = props\n\n    const getWorlds = useMemo(()=>{\n        let g= Object.entries(groups).map(group=>{\n          return {key: group[0], name: group[1].name, selected: selected ===parseInt(group[0])  }\n       \n        })\n      if(groupEditCMD === C.ioCommands.STORE_GROUP){\n        g.push({key:C.ioCommands.STORE_GROUP, name: 'Add Group', selected: false})\n      }\n      return g\n    },[groups,groupEditCMD,selected])\n\n    const getButtons =()=>{\n   \n      return getWorlds.map(group=>{\n        return <Button key={group.key} onClick={(e)=>{e.preventDefault(); setWorld(group.key)}} variant={group.selected?'outlined':'text'}>{group.name}</Button>\n      })\n    }\n    return (\n        <div {...props} >\n          {getButtons()}\n          </div>\n    )\n}\n","import { Button, ButtonGroup, createStyles, Fade, makeStyles, Menu, MenuItem, Paper, Theme, Typography } from \"@material-ui/core\";\nimport Worlds from \"./Worlds\";\nimport { Config, ioCommands } from '../util/constants'\nimport { useRef, useState } from \"react\";\nimport SettingsIcon from \"@material-ui/icons/Settings\";\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\"\nimport PublicIcon from '@material-ui/icons/Public';\n\nimport ExpandLessIcon from '@material-ui/icons/ExpandLess'\n\nconst useStyles = makeStyles((theme: Theme) =>\n    createStyles({\n        root: {\n\n        },\n        container: {\n            display: 'flex',\n        },\n        paper: {\n            margin: theme.spacing(1),\n        },\n    }),\n);\n\ninterface WorldBox_Props {\n    handleWorldSelection: (g: string) => void,\n    handleGroupSelection: (g: string) => void,\n    handleGroupConfig: (cmd: ioCommands) => void,\n    groupEditCMD: ioCommands | undefined,\n    config: Config,\n    world: number\n}\nexport default function WorldBox(props: WorldBox_Props) {\n    const { handleWorldSelection, handleGroupSelection, handleGroupConfig, groupEditCMD, config, world } = props;\n    const [worldOpen, setWorldOpen] = useState(false)\n    const [groupOpen, setGroupOpen] = useState(false)\n    const [configOpen, setConfigOpen] = useState(false)\n    const divRef = useRef(null)\n    const classes = useStyles();\n\n    const handleConfigButton = () => {\n        //@ts-ignore\n        divRef.current.focus()\n\n        setConfigOpen(true)\n\n    }\n    const handleConfigSelect = (cmd: ioCommands) => {\n        setConfigOpen(false)\n        handleGroupConfig(cmd)\n    }\n    const handleWorld = (w: boolean) => {\n        setWorldOpen(!w)\n        if (!w) {\n            setGroupOpen(false)\n        }\n    }\n    const handleGroup = (g: boolean) => {\n        setGroupOpen(!g)\n        if (!g) {\n            setWorldOpen(false)\n        }\n    }\n    const getStyle = () => {\n        if (!worldOpen && !groupOpen) {\n            return {\n                width: '90%', margin: 'auto', height: '40px'\n            }\n        }\n        return {\n            width: '90%', margin: 'auto'\n        }\n\n    }\n    const getHelperText = () => {\n        let generalMessage = ' | Hit Clear to Cancle'\n        switch (groupEditCMD) {\n            case ioCommands.STORE_GROUP:\n                return <Typography>Select Group To Store {generalMessage}</Typography>\n            case ioCommands.DELETE_GROUP:\n                return <Typography>Select Group To Delete {generalMessage}</Typography>\n            case ioCommands.LABEL_GROUP:\n                return <Typography>Select Group to Label {generalMessage}</Typography>\n        }\n    }\n    return (\n        <div className='WorldBox' >\n            <Paper style={getStyle()}>\n                <ButtonGroup style={{ marginTop: '1px', marginBottom: '2px' }} >\n                    <Button key='world_button'\n                        onClick={() => handleWorld(worldOpen)}> Worlds {world !==0? <PublicIcon fontSize=\"small\" /> : '  '}\n                        {worldOpen ? <ExpandLessIcon /> : <ExpandMoreIcon />} </Button>\n                    <Button key='group_button' onClick={() => handleGroup(groupOpen)}>Groups\n                        {groupOpen ? <ExpandLessIcon /> : <ExpandMoreIcon />}\n                    </Button>\n                </ButtonGroup>\n                {getHelperText()}\n\n                <div className={classes.container} style={{width:'100%'}}>\n\n\n                    {worldOpen ? <Fade key='world_Grow' in={worldOpen}>\n\n\n                        <Worlds key=\"world_box\" setWorld={handleWorldSelection} groupEditCMD={groupEditCMD} groups={config.Groups} name={'Worlds'} selected={world} />\n                    </Fade> :\n                        <Fade key='group_box' in={groupOpen}>\n                            <Worlds setWorld={handleGroupSelection} groupEditCMD={groupEditCMD} groups={config.Groups} name={'Groups'} />\n                        </Fade>\n                    }\n                    {groupOpen || worldOpen ?\n                        <Button ref={divRef} style={{ float: 'right', marginLeft:'auto' }} onClick={() => handleConfigButton()}><SettingsIcon /></Button>\n                        : <></>}\n                </div>\n\n            </Paper>\n            <Menu id='groups-menu' keepMounted anchorEl={divRef.current}\n                open={configOpen}\n                onClose={() => setConfigOpen(false)}>\n                <MenuItem>\n                    <Button key='add_group' onClick={() => handleConfigSelect(ioCommands.STORE_GROUP)}>Store Group</Button>\n                </MenuItem>\n                <MenuItem>\n                    <Button key='rename_group' onClick={() => handleConfigSelect(ioCommands.LABEL_GROUP)}>Rename Group</Button>\n                </MenuItem>\n                <MenuItem>\n                    <Button key='delete_group' onClick={() => handleConfigSelect(ioCommands.DELETE_GROUP)}>Delete Group</Button>\n                </MenuItem>\n            </Menu>\n\n        </div>\n    )\n}\n//\n/*\n <Container key='groups_Worlds' style={{width:'80%'}}>\n\n\n        </Container>\n        */","\nimport { useEffect, useState } from 'react';\nimport './App.css';\nimport * as C from './util/constants'\n//import { getPJ } from './util/getter';\n//import PJ from './components/PJ'\nimport Numberpad from './components/numberpad';\nimport CommandPad from './components/CommandPad'\nimport { TextField, Container, Grid, LinearProgress } from '@material-ui/core'\nimport { processCMD } from './util/CMD';\nimport Programmer from './components/Programmer';\nimport * as Prefs from './prefrences';\nimport SocketListener from './util/SocketListener';\nimport ConfigDialog from './components/ConfigDialog';\nimport { Socket } from 'socket.io-client';\nimport InputPopup from './components/InputPopup';\nimport WorldBox from './components/WorldBox';\n\n\n// setSocketConnect(true)\n//import {socket}  from './LoadPage'\ninterface App_Prps {\n  prefs: Prefs.prefres\n  openConfig: boolean\n  handleCloseConfig: () => void\n  socket: Socket | undefined\n}\n\nconst removeFocus = () => {\n  if (document.activeElement instanceof HTMLElement) {\n    document.activeElement.blur();\n  }\n}\n//let socket: Socket | undefined = undefined\n\nfunction App(Props: App_Prps) {\n  const { prefs, openConfig, handleCloseConfig, socket } = Props\n  const [cmd, setCMD] = useState('')\n  const [vartiable, setVartiable] = useState<string | undefined>(undefined)\n  const [active, setActive] = useState<number[]>([])\n  const [activeIndex, setActiveIndex] = useState(-1)\n  const [clearPresses, setClearPressed] = useState(0)\n  const [selected, setSelected] = useState<number[]>([])\n  const [groupNameOpen, setGroupNameOpen] = useState(false)\n  const [groupName, setGroupName] = useState<string | undefined>(undefined)\n  const [config, setConfig] = useState(C.defaultConfig)\n  const [world, setWorld] = useState(0) //Default 0 - All\n  const [pjs, setPJs] = useState<C.PJs>({})\n  const [pollingProgress, setPollingProgress] = useState(100)\n  const [command, setCommand] = useState<C.ControlKeys | undefined>(undefined)\n  const [groupEditCMD, setGroupEditCMD] = useState<C.ioCommands | undefined>(undefined)\n  const [selectedGroup, setSelectedGroup] = useState<number | undefined>(undefined)\n  const [lastPJClicked, setLastPJClicked] = useState<number | undefined>(undefined)\n  const [lockedCommandLine, setLockedCommandLine] = useState(false)\n  const [marcos, setMacros] = useState<C.Macros>({})\n  const [rigStatus, setStatus] = useState<C.RIG_STATUS>({\n    online: false,\n    power: false,\n    shutter: false,\n    blendMarker: false,\n    blend: false,\n    testPattren: false,\n    lampStatus: false,\n    hdmiInput: false,\n    signalName: false\n\n  })\n\n\n\n  useEffect(() => {\n\n    if (socket)\n      SocketListener(socket, setStatus, setPJs, setConfig, setPollingProgress, setMacros)\n\n    if (command) {\n      console.log('Emmiting CMD', command, vartiable, active)\n\n      socket?.emit(C.ioCommands.EMITTING_CMD, { cmd: command, pjIDs: active, vartiable: vartiable })\n      if (prefs.clearProgrammerAfterCMD) {\n        setActive([])\n        setSelected([])\n      }\n      setCommand(undefined)\n    }\n\n    return function cleanup() {\n\n    }\n\n\n  }, [active, command, prefs, socket, vartiable, pjs])\n\n\n  document.onkeyup = ((e) => {\n    if (openConfig || groupNameOpen) return\n    if (lockedCommandLine) return\n\n\n\n    let key = e.key\n\n    if (C.keys.includes(key)) {\n      handlePad(key)\n      return\n    }\n\n    switch (key) {\n      case 't':\n        handlePad(C.commands.THRU)\n        break;\n      case 'c':\n        handlePad(C.commands.CLEAR)\n        break;\n      case '=':\n        handlePad('+')\n        break;\n      case 'Backspace':\n        handlePad(C.commands.DEL)\n        break;\n      case 'Enter':\n        //processCMD();\n        handlePad(C.commands.ENTER)\n        break;\n      case 'i':\n        handleCommand(C.ControlCommands.SHUTTER_CLOSED)\n        break;\n      case 'o':\n        handleCommand(C.ControlCommands.SHUTTER_OPEN)\n        break;\n\n      case 'ArrowUp':\n        handlePad(C.commands.IF_PROG)\n        break;\n      case 'ArrowRight':\n        handlePad(C.commands.NEXT)\n        break;\n      case 'ArrowLeft':\n        handlePad(C.commands.BACK)\n        break;\n    }\n\n  })\n\n  const handleNext = () => {\n    console.log('Nexting')\n    if (selected.length < 1) {\n      return\n    }\n    let a: number[] = []\n    let i = activeIndex\n    if (selected.length === 1) {\n\n      let currentWorld = getGroup(world)\n      i = currentWorld.indexOf(selected[0])\n\n      switch (i) {\n        case -1:\n          return;\n        case currentWorld.length - 1:\n          i = 0\n          break;\n        default:\n          i++\n          break\n      }\n\n      a.push(currentWorld[i])\n      setSelected(a)\n    } else {\n\n      if (activeIndex + 1 < selected.length) {\n        i += 1\n      }\n      if (activeIndex + 1 >= selected.length) {\n        i = 0\n      }\n      a.push(selected[i])\n    }\n\n\n    setActiveIndex(i)\n    setActive(a)\n  }\n  const handleBack = () => {\n    console.log('Backing')\n    if (selected.length < 1) {\n      return\n    }\n    let a: number[] = []\n    let i = activeIndex\n    if (selected.length === 1) {\n      let currentWorld = getGroup(world)\n      i = currentWorld.indexOf(selected[0])\n      switch (i) {\n        case -1:\n          return;\n        case 0:\n          i = currentWorld.length - 1\n          break;\n        default:\n          i--\n          break;\n      }\n\n      a.push(currentWorld[i])\n      setSelected(a)\n\n    } else {\n\n      if (activeIndex - 1 >= 0) {\n        i -= 1\n      }\n      if (activeIndex - 1 < 0) {\n        i = selected.length - 1\n      }\n      a.push(selected[i])\n    }\n\n\n    setActiveIndex(i)\n    setActive(a)\n  }\n\n  const clear0 = () => {\n    setCMD('')\n  }\n\n  const clear1 = () => {\n    setActive([])\n    setActiveIndex(-1)\n  }\n\n  const clear2 = () => {\n    setSelected([])\n  }\n  const handlePad = (e: string) => {\n\n    removeFocus()\n    if (e === C.commands.CLEAR) {\n      if (groupEditCMD) {\n        // console.log('Clear Pressed, but editCMD')\n        setGroupEditCMD(undefined)\n        return\n      }\n      if (prefs.trippleTapClearOnOne) {\n        clear0()\n        clear1()\n        clear2()\n      } else {\n        setClearPressed((clearPresses + 1))\n      }\n      //console.log('Clear', clearPresses)\n\n      switch (clearPresses) {\n        case 0:\n          clear0()\n          break;\n        case 1:\n          clear1()\n          break;\n        case 2:\n          clear2()\n          break;\n        default:\n          setClearPressed(0)\n      }\n      return\n    }\n    setClearPressed(0)\n    switch (e) {\n\n\n      case C.commands.DEL:\n        //console.log(cmd.slice(-6) === ' THRU ')\n        // console.log(cmd.includes('THRU'))\n        if (cmd.length >= 6 && cmd.slice(-6) === ' ' + C.commands.THRU + ' ') {\n          let t = cmd.slice(0, cmd.length - 6)\n          setCMD(t)\n        } else if (cmd.length >= 7 && cmd.slice(-7) === ' ' + C.commands.GROUP + ' ') {\n          let t = cmd.slice(0, cmd.length - 7)\n          setCMD(t)\n        } else {\n          setCMD(cmd.slice(0, (cmd.length - 1)))\n        }\n        break;\n      case C.commands.THRU:\n        if (cmd.length > 0)\n          setCMD(cmd + ' THRU ')\n        break;\n      case C.commands.ENTER:\n        handleCMD()\n        break;\n      case '-':\n        if (cmd[cmd.length - 1] !== ' ') {\n          setCMD(cmd + ' ' + e + ' ')\n        }\n        break\n      case '+':\n        setCMD(cmd + ' ' + e + ' ')\n        break\n      case C.commands.NEXT:\n        handleNext();\n        break;\n      case C.commands.BACK:\n        handleBack()\n        break;\n      case C.commands.IF_PROG:\n        setActive(selected);\n        setActiveIndex(-1)\n        break;\n      default:\n\n        setCMD(cmd + e)\n      // console.log('setting CMD',cmd)\n    }\n    //  console.log('CMD',cmd)\n  }\n  const handleTableSelect = (id: number) => {\n    // let s = [...selected]\n    console.log('Table Select', id)\n    let a = [...active]\n    if (a.includes(id)) {\n      setActive(a.filter(pj => pj !== id))\n    } else {\n      a.push(id)\n      setActive(a)\n      setLastPJClicked(id)\n      // s.push(id)\n      //console.log(s)\n      // setSelected(s)\n    }\n    let s = [...selected]\n    if (!s.includes(id)) {\n      s.push(id)\n      setSelected(s)\n    }\n  }\n\n  const handleCMD = () => {\n    if (cmd.length > 0) {\n      let s = processCMD(cmd, active, getGroup(world), config.Groups)\n      finalCMD(s)\n      setCMD('')\n    }\n\n  }\n  const finalCMD = (n: number[]) => {\n    // console.log(n)\n    setActive(n)\n    let newSelected: number[] = []\n    selected.forEach(id => {\n      if (n.includes(id)) {\n        newSelected.push(id)\n      }\n    })\n    n.forEach(id => {\n      if (!selected.includes(id)) {\n        newSelected.push(id)\n      }\n    })\n\n    setSelected(newSelected)\n    //setSelected(diffrentPJs)\n\n  }\n  const handleCommand = (command: C.ControlKeys, text?: string) => {\n    console.log(command, text)\n    handleCMD()\n\n    setVartiable(text)\n    setCommand(command)\n  }\n  const getGroup = (groupID: string | number) => {\n    let g = config.Groups[parseInt(groupID.toString())]?.group\n    return g ? g : []\n  }\n  const handleGroupName = (name: string) => {\n\n    setGroupName(name)\n    console.log(name, groupName, groupEditCMD)\n    if (name) {\n      switch (groupEditCMD) {\n        case C.ioCommands.STORE_GROUP:\n          socket?.emit(C.ioCommands.STORE_GROUP, { name: name, group: active })\n          break;\n        case C.ioCommands.LABEL_GROUP:\n          socket?.emit(C.ioCommands.LABEL_GROUP, { groupID: selectedGroup, name })\n          break;\n      }\n\n      setGroupName(undefined)\n      setGroupEditCMD(undefined)\n      console.log(groupName)\n    }\n  }\n  const handleGroupUpdate = (groupID: string) => {\n    socket?.emit(C.ioCommands.UPDATE_GROUP, { groupID: parseInt(groupID), group: active })\n    setGroupEditCMD(undefined)\n  }\n  const handleGroupAndWorld = (groupID: string) => {\n    if (groupID === C.ioCommands.STORE_GROUP && active.length > 0) {\n      setGroupNameOpen(true)\n      return false\n    } else if (groupEditCMD === C.ioCommands.STORE_GROUP) {\n      handleGroupUpdate(groupID)\n      return false\n    } else if (groupEditCMD === C.ioCommands.LABEL_GROUP) {\n      setGroupName(config.Groups[parseInt(groupID)].name)\n      setSelectedGroup(parseInt(groupID))\n      setGroupNameOpen(true)\n      return false\n    } else if (groupEditCMD === C.ioCommands.DELETE_GROUP) {\n      socket?.emit(C.ioCommands.DELETE_GROUP, { groupID: parseInt(groupID) })\n      setGroupEditCMD(undefined)\n      return false\n    }\n    return true\n  }\n\n  const handleGroupSelection = (groupID: string) => {\n    if (handleGroupAndWorld(groupID)) {\n      removeFocus()\n      let group = getGroup(groupID)\n      if (group) {\n        let s = ''\n        let t = cmd.trim()\n        /*\n           if(t.slice(-1) !== '-' && t.slice(-1) !=='+'){\n             s= ' + '\n           }\n           */\n\n        setCMD(cmd + s + C.commands.GROUP + ' ' + parseInt(groupID))\n\n        //  handleCMD()\n        //  finalCMD(group)\n      }\n    }\n  }\n  const handleWorldSelection = (groupID: string) => {\n    if (handleGroupAndWorld(groupID))\n      setWorld(parseInt(groupID))\n\n    let new_selected = selected.filter(i => getGroup(groupID).includes(i))\n    let new_active = active.filter(i => getGroup(groupID).includes(i))\n    setSelected(new_selected)\n    setActive(new_active)\n    console.log(selected)\n    console.log(active)\n  }\n  const handleGroupConfig = (cmd: C.ioCommands) => {\n    switch (cmd) {\n      case C.ioCommands.STORE_GROUP:\n        setGroupEditCMD(cmd)\n        break;\n      case C.ioCommands.UPDATE_GROUP:\n        setGroupEditCMD(cmd)\n        break\n      case C.ioCommands.LABEL_GROUP:\n        setGroupEditCMD(cmd)\n        break;\n      case C.ioCommands.DELETE_GROUP:\n        setGroupEditCMD(cmd)\n        break;\n    }\n    //\n  }\n  const getStatusBar = () => {\n\n    if (pollingProgress === 100)\n      return <LinearProgress style={{ width: '99%', margin: 'auto' }} variant=\"determinate\" value={0} />\n\n    return <LinearProgress style={{ width: '99%', margin: 'auto' }} variant=\"determinate\" value={pollingProgress} />\n  }\n\n\n  return (\n    <div className=\"App\">\n\n      <link rel=\"stylesheet\" href=\"https://fonts.googleapis.com/css?family=Roboto:300,400,500,700&display=swap\" />\n      <link rel=\"stylesheet\" href=\"https://fonts.googleapis.com/icon?family=Material+Icons\" />\n      {getStatusBar()}\n      <Container style={{ position: 'relative', bottom: '3px', textAlign: 'left', float: 'left' }}>\n      </Container>\n      <Grid container spacing={6} className='inputArea' >\n        <Grid item >\n          <Numberpad handlePad={handlePad} />\n        </Grid>\n        <Grid item>\n          <CommandPad handleCommand={handleCommand} active={active} pjs={pjs} lockCommandLine={(lock) => setLockedCommandLine(lock)} macros={marcos} />\n        </Grid>\n      </Grid>\n      <TextField\n        id=\"cmd\"\n\n        style={{ margin: 8, width: '90%' }}\n        value={cmd}\n        helperText=\"Command Line\"\n        fullWidth\n        margin=\"normal\"\n        InputLabelProps={{\n          shrink: true,\n        }}\n        variant=\"outlined\"\n\n      />\n\n      <WorldBox handleGroupSelection={handleGroupSelection} handleWorldSelection={handleWorldSelection} groupEditCMD={groupEditCMD} handleGroupConfig={handleGroupConfig} config={config} world={world} />\n      <br key=\"programmer break\"></br>\n      <Container key='programmer'>\n        <Programmer handleTableSelect={handleTableSelect} key={'pg'} prefs={prefs} world={getGroup(world)} status={rigStatus} selected={selected} active={active}\n          pjs={pjs} />\n\n\n        <br key='stats break'></br>\n\n\n      </Container>\n      <ConfigDialog socket={socket} open={openConfig} handleClose={() => handleCloseConfig()} config={config} />\n      <InputPopup open={groupNameOpen} handleInput={handleGroupName} startText={groupName} handleClose={() => setGroupNameOpen(false)} header={'Group Name'} message={active.toString()} />\n    </div>\n  );\n}\n\nexport default App;\n","\nimport Cookies from 'js-cookie'\nexport interface prefres{\n    darkMode: boolean,\n    clearProgrammerAfterCMD: boolean,\n    showOnlySelected: boolean,\n    programmerTableView: boolean,\n    trippleTapClearOnOne: boolean\n}\nconst cookieName= 'prefs'\n//const prefersDarkMode = useMediaQuery('(prefers-color-scheme: dark)');\nexport const defaultPrefs: prefres={\n    darkMode: true, //prefersDarkMode,\n    clearProgrammerAfterCMD: false,\n    showOnlySelected: false,\n    programmerTableView: false,\n    trippleTapClearOnOne: false\n}\n\nexport const setCookie=(prefs: prefres)=>{\n    Cookies.set(cookieName,prefs)\n}\nconst getCookie =()=>{\n    return Cookies.get(cookieName)\n    /*\n    let c = Cookies.get(cookieName)\n    if(c){\n        return JSON.parse(c) \n       // return c as unknown as prefres\n    } else {\n        setCookie(defaultPrefs)\n        return defaultPrefs\n    }\n    */\n}\n\nexport function getPrefrences(darkMode=true):prefres{\n    let c = getCookie()\n    if(c){\n        return Object.assign(defaultPrefs, JSON.parse(c))\n\n    }else{\n        let d = defaultPrefs\n        d.darkMode = darkMode\n        setCookie(d)\n        return d\n    }\n     \n    //return getCookie()\n}\n\n\n\nexport function setCookie_DarkMode(mode: boolean){\n    let c = getPrefrences()\n    c.darkMode=mode\n    setCookie(c)\n\n}\nexport function setCookie_ClearProgrammerAfterCMD(mode: boolean){\n    let c = getPrefrences()\n    c.clearProgrammerAfterCMD = mode\n    setCookie(c)\n}\nexport function setCookie_ShowOnlySelected(mode:boolean){\n    let c =getPrefrences()\n    console.log(mode)\n    c['showOnlySelected'] = mode\n    setCookie(c)\n}\n\nexport function getDarkMode(){\n    return getPrefrences().darkMode\n}\n\nexport function getClearProgrammerAfterCMD(){\n    return getPrefrences().clearProgrammerAfterCMD\n}\nexport function getShowOnlySelected(){\n    return getPrefrences().showOnlySelected\n}\n\nexport function getProgrammerTableView(){\n    return getPrefrences().programmerTableView\n}","import { Button, Menu, MenuItem, FormControlLabel, Switch  } from '@material-ui/core'\n//import {SettingsIcon} from '@material-ui/icons/Settings';\nimport SettingsIcon from \"@material-ui/icons/Settings\";\nimport { useState, useRef} from 'react'\nimport { prefres } from '../prefrences';\nimport * as C from '../util/constants'\n\n\ninterface menu_props {\n  handleSettings: (e: prefres) => void,\n  prefs: prefres,\n  handleOpenConfig: ()=>void\n}\nexport default function ControlMenu(props: menu_props) {\n\n // const value = useContext(Settings)\n  //console.log(value)\n  const { prefs, handleSettings, handleOpenConfig } = props\n  const divRef = useRef(null)\n\n  const [open, setOpen] = useState(false)\n  \n\n  const handleOpen = () => {\n    setOpen(true)\n\n\n  }\n  const handleClose = (e: C.menuCommands | undefined) => {\n    setOpen(false)\n  }\n\n  const handleChange = (e: C.menuCommands) => {\n    \n    let p = Object.assign({},prefs)\n    switch (e) {\n      case C.menuCommands.CLEAR_SELECTED_ON_CMD:\n        p.clearProgrammerAfterCMD = !prefs.clearProgrammerAfterCMD\n        break;\n      case C.menuCommands.IF_SELECTED:\n        p.showOnlySelected = !prefs.showOnlySelected\n        break;\n      case C.menuCommands.DARK_MODE:\n        p.darkMode = !prefs.darkMode\n        break;\n      case C.menuCommands.PROGRAMMER_TABLE_VIEW:\n        p.programmerTableView = !prefs.programmerTableView\n        break;\n      case C.menuCommands.TRIPPLE_TAP_CLEAR_ON_ONE:\n        p.trippleTapClearOnOne = !prefs.trippleTapClearOnOne\n        break;\n    }\n    handleSettings(p)\n  }\n  let button =\n    <Button ref={divRef} aria-controls=\"simple-menu\" aria-haspopup=\"true\" onClick={() => handleOpen()}>\n      <SettingsIcon />\n    </Button>\n  if(process.env.NODE_ENV === 'development'){\n    document.title = 'PJ Dev'\n  }\n  return (\n    <div>\n\n      {button}\n\n\n      <Menu\n        id=\"simple-menu\"\n        keepMounted\n        //@ts-ignore\n        anchorEl={divRef.current}\n        open={open}\n        onClose={() => handleClose(undefined)}\n      >\n        <MenuItem >\n          <FormControlLabel\n            control={<Switch key={C.menuCommands.CLEAR_SELECTED_ON_CMD} checked={prefs.clearProgrammerAfterCMD}\n              onClick={(e) => handleChange(C.menuCommands.CLEAR_SELECTED_ON_CMD)} name=\"clearSelectedOnPress\" />}\n            label=\"Clear Programmer On CMD\"\n          />\n        </MenuItem>\n        <MenuItem key='trippletap'>\n\n          <FormControlLabel\n            control={<Switch key={C.menuCommands.TRIPPLE_TAP_CLEAR_ON_ONE} checked={prefs.trippleTapClearOnOne}\n              onChange={(e) => handleChange(C.menuCommands.TRIPPLE_TAP_CLEAR_ON_ONE)} name=\"trippleTap\" />}\n            label=\"Auto 3x Clear\"\n          />\n       \n        </MenuItem>\n        <MenuItem>\n\n          <FormControlLabel\n            control={<Switch key={C.menuCommands.IF_SELECTED} checked={prefs.showOnlySelected}\n              onChange={(e) => handleChange(C.menuCommands.IF_SELECTED)} name=\"showonlyselected\" />}\n            label=\"Show Only Selected\"\n          />\n        </MenuItem>\n        <MenuItem>\n\n          <FormControlLabel\n            control={<Switch key={C.menuCommands.DARK_MODE} checked={prefs.darkMode}\n              onChange={(e) => handleChange(C.menuCommands.DARK_MODE)} name=\"darkMode\" />}\n            label=\"Dark Mode\"\n          />\n       \n        </MenuItem>\n        <MenuItem>\n\n          <FormControlLabel\n            control={<Switch key={C.menuCommands.PROGRAMMER_TABLE_VIEW} checked={prefs.programmerTableView}\n              onChange={(e) => handleChange(C.menuCommands.PROGRAMMER_TABLE_VIEW)} name=\"Programmer Table View\" />}\n            label=\"Programmer Table View\"\n          />\n       \n        </MenuItem>\n        <MenuItem>\n        <Button onClick={(e)=>{setOpen(false); handleOpenConfig()}}>Edit Config</Button>\n        </MenuItem>\n      </Menu>\n     \n      <span style={{textAlign:'center', fontSize: 10}}> vanPJ v{process.env.REACT_APP_VERSION}{process.env.NODE_ENV==='development'?' Beta':''}</span>\n    </div>\n  )\n\n}","import { CircularProgress } from \"@material-ui/core\";\n\nexport default function Disconnected(){\n    return (\n      \n            <div style={{width:'100%', textAlign:'center'}} >\n     \n            <CircularProgress  color=\"secondary\" />\n            <p>Can't connect to server</p>\n            \n            </div>\n   \n    )\n}","import React, { useEffect, useState } from 'react';\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\nimport { createMuiTheme, createStyles, makeStyles, ThemeProvider, Theme } from '@material-ui/core/styles';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport App from './App';\nimport * as Pref from './prefrences';\nimport ControlMenu from './components/ControlMenu';\nimport socketIOClinet   from 'socket.io-client'\nimport { Backdrop } from '@material-ui/core';\nimport Disconnected from './components/Disconnected';\nexport const Settings = React.createContext(Pref.defaultPrefs)\n\nexport let socket =socketIOClinet()\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    backdrop: {\n      zIndex: theme.zIndex.drawer + 1,\n      color: '#fff',\n    },\n  }),\n);\nexport default function LoadPage() {\n    const prefersDarkMode = useMediaQuery('(prefers-color-scheme: dark)');\n    // const prefersDarkMode = getDarkMode()  \n    const classes = useStyles()\n    const [prefres, setPrefs] = useState(Pref.defaultPrefs)\n    const [openConfig,setOpenConfig] = useState(false)\n    const [socketConnected,setSocketConnected]= useState(false)\n\n    useEffect(()=>{\n    if(!socketConnected){\n      try{\n   \n          console.log('Connecting Socket...')\n       // let s = socketIOClinet()\n    \n        socket.on('connect',()=>{\n           // socket = s\n            setSocketConnected(true)\n        })\n        socket.on('disconnect',()=>{\n           // socket = undefined\n            setSocketConnected(false)\n        })\n      \n      }catch(e){\n\n      }\n    }\n    return function cleanup(){\n     \n    }\n\n    },[socketConnected])\n\n    useEffect(() => {\n  \n        setPrefs(Pref.getPrefrences(prefersDarkMode))\n      \n    }, [prefersDarkMode])\n\n    const theme = createMuiTheme({\n        palette: {\n            type: prefres.darkMode ? 'dark' : 'light',\n        }\n    })\n   \n    const handlePrefs = (p: Pref.prefres) => {\n       // console.log(prefres)\n        setPrefs(p)\n      //  console.log(prefres)\n        Pref.setCookie(p)\n    }\n    return (\n        <ThemeProvider theme={theme}>\n            <Settings.Provider value={prefres}/>\n            <CssBaseline />\n            <Backdrop className={classes.backdrop} open={!socketConnected} >\n                <Disconnected/>\n            </Backdrop>\n                <ControlMenu handleOpenConfig={()=> setOpenConfig(true)}handleSettings={handlePrefs} prefs={prefres} />\n                <App socket={socket} prefs={prefres} openConfig={openConfig} handleCloseConfig={()=>setOpenConfig(false)}/>\n              \n                \n            \n        </ThemeProvider>\n    );\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n    window.location.hostname === 'localhost' ||\n      // [::1] is the IPv6 localhost address.\n      window.location.hostname === '[::1]' ||\n      // 127.0.0.0/8 are considered localhost for IPv4.\n      window.location.hostname.match(\n        /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n      )\n  );\n  \n  export function register(config) {\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n      // The URL constructor is available in all browsers that support SW.\n      const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n      if (publicUrl.origin !== window.location.origin) {\n        // Our service worker won't work if PUBLIC_URL is on a different origin\n        // from what our page is served on. This might happen if a CDN is used to\n        // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n        return;\n      }\n  \n      window.addEventListener('load', () => {\n        const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n  \n        if (isLocalhost) {\n          // This is running on localhost. Let's check if a service worker still exists or not.\n          checkValidServiceWorker(swUrl, config);\n  \n          // Add some additional logging to localhost, pointing developers to the\n          // service worker/PWA documentation.\n          navigator.serviceWorker.ready.then(() => {\n            console.log(\n              'This web app is being served cache-first by a service ' +\n                'worker. To learn more, visit https://bit.ly/CRA-PWA'\n            );\n          });\n        } else {\n          // Is not localhost. Just register service worker\n          registerValidSW(swUrl, config);\n        }\n      });\n    }\n  }\n  \n  function registerValidSW(swUrl, config) {\n    navigator.serviceWorker\n      .register(swUrl)\n      .then(registration => {\n        registration.onupdatefound = () => {\n          const installingWorker = registration.installing;\n          if (installingWorker == null) {\n            return;\n          }\n          installingWorker.onstatechange = () => {\n            if (installingWorker.state === 'installed') {\n              if (navigator.serviceWorker.controller) {\n                // At this point, the updated precached content has been fetched,\n                // but the previous service worker will still serve the older\n                // content until all client tabs are closed.\n                console.log(\n                  'New content is available and will be used when all ' +\n                    'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n                );\n  \n                // Execute callback\n                if (config && config.onUpdate) {\n                  config.onUpdate(registration);\n                }\n              } else {\n                // At this point, everything has been precached.\n                // It's the perfect time to display a\n                // \"Content is cached for offline use.\" message.\n                console.log('Content is cached for offline use.');\n  \n                // Execute callback\n                if (config && config.onSuccess) {\n                  config.onSuccess(registration);\n                }\n              }\n            }\n          };\n        };\n      })\n      .catch(error => {\n        console.error('Error during service worker registration:', error);\n      });\n  }\n  \n  function checkValidServiceWorker(swUrl, config) {\n    // Check if the service worker can be found. If it can't reload the page.\n    fetch(swUrl, {\n      headers: { 'Service-Worker': 'script' },\n    })\n      .then(response => {\n        // Ensure service worker exists, and that we really are getting a JS file.\n        const contentType = response.headers.get('content-type');\n        if (\n          response.status === 404 ||\n          (contentType != null && contentType.indexOf('javascript') === -1)\n        ) {\n          // No service worker found. Probably a different app. Reload the page.\n          navigator.serviceWorker.ready.then(registration => {\n            registration.unregister().then(() => {\n              window.location.reload();\n            });\n          });\n        } else {\n          // Service worker found. Proceed as normal.\n          registerValidSW(swUrl, config);\n        }\n      })\n      .catch(() => {\n        console.log(\n          'No internet connection found. App is running in offline mode.'\n        );\n      });\n  }\n  \n  export function unregister() {\n    if ('serviceWorker' in navigator) {\n      navigator.serviceWorker.ready\n        .then(registration => {\n          registration.unregister();\n        })\n        .catch(error => {\n          console.error(error.message);\n        });\n    }\n  }\n  ","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport LoadPage from './LoadPage'\nimport * as serviceWorker from './serviceWorker';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n \n    <LoadPage/>\n  \n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://cra.link/PWA\nserviceWorker.register();\n"],"sourceRoot":""}